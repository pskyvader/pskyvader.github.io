{"version":3,"sources":["../node_modules/@material-ui/core/esm/Modal/ModalManager.js","../node_modules/@material-ui/core/esm/utils/getScrollbarSize.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@material-ui/core/esm/Unstable_TrapFocus/Unstable_TrapFocus.js","../node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js","../node_modules/@material-ui/core/esm/Modal/Modal.js","../node_modules/@material-ui/core/esm/utils/ownerDocument.js","../node_modules/@material-ui/core/esm/utils/ownerWindow.js"],"names":["ariaHidden","node","show","setAttribute","removeAttribute","getPaddingRight","parseInt","ownerWindow","getComputedStyle","ariaHiddenSiblings","container","mountNode","currentNode","nodesToExclude","arguments","length","undefined","blacklist","concat","_toConsumableArray","blacklistTagNames","forEach","call","children","nodeType","indexOf","tagName","findIndexOf","containerInfo","callback","idx","some","item","index","handleContainer","props","fixedNodes","restoreStyle","restorePaddings","disableScrollLock","doc","ownerDocument","body","innerWidth","documentElement","clientWidth","scrollHeight","clientHeight","isOverflowing","scrollbarSize","scrollDiv","createElement","style","width","height","position","top","overflow","appendChild","offsetWidth","removeChild","getScrollbarSize","push","value","paddingRight","key","el","querySelectorAll","parent","parentElement","containerWindow","scrollContainer","nodeName","i","removeProperty","_ref","setProperty","ModalManager","instance","Constructor","TypeError","_classCallCheck","this","modals","containers","_createClass","modal","modalIndex","modalRef","hiddenSiblingNodes","hiddenSiblings","getAttribute","getHiddenSiblings","containerIndex","restore","splice","nextTop","Unstable_TrapFocus","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","React","sentinelStart","sentinelEnd","nodeToRestore","reactFocusEventTarget","activated","rootRef","handleRef","useForkRef","ref","prevOpenRef","current","window","activeElement","contains","hasAttribute","focus","contain","nativeEvent","hasFocus","target","loopFocus","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","tabIndex","onFocus","event","childrenPropsHandler","styles","root","zIndex","right","bottom","left","backgroundColor","WebkitTapHighlightColor","invisible","SimpleBackdrop","_props$invisible","other","_objectWithoutProperties","_extends","defaultManager","Modal","inProps","theme","useTheme","getThemeProps","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableScrollL","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","_React$useState","exited","setExited","mountNodeRef","hasTransition","hasOwnProperty","getHasTransition","getModal","handleMounted","mount","scrollTop","handleOpen","useEventCallback","resolvedContainer","getContainer","add","isTopModal","handlePortalRef","handleClose","remove","inlineStyle","hidden","visibility","childProps","onEnter","createChainedFunction","onExited","Portal","onKeyDown","stopPropagation","role","onClick","currentTarget","TrapFocus","document","defaultView"],"mappings":"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","file":"static/js/8.22adacd0.chunk.js","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(ownerWindow(node).getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode) {\n  var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (node) {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  var idx = -1;\n  containerInfo.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var restorePaddings = [];\n  var container = containerInfo.container;\n  var fixedNodes;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      var scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, function (node) {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = \"\".concat(getPaddingRight(node) + scrollbarSize, \"px\");\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    var parent = container.parentElement;\n    var containerWindow = ownerWindow(container);\n    var scrollContainer = parent.nodeName === 'HTML' && containerWindow.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  var restore = function restore() {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, function (node, i) {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          key = _ref.key;\n\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (node) {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    // this.modals[modalIndex] = modal\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblingNodes = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblingNodes: hiddenSiblingNodes\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519\nexport default function getScrollbarSize(doc) {\n  var scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.overflow = 'scroll';\n  doc.body.appendChild(scrollDiv);\n  var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  doc.body.removeChild(scrollDiv);\n  return scrollbarSize;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","/* eslint-disable @typescript-eslint/naming-convention, consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * Utility component that locks focus inside the component.\n */\n\nfunction Unstable_TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var reactFocusEventTarget = React.useRef(null); // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n\n  var activated = React.useRef(false);\n  var rootRef = React.useRef(null);\n  var handleRef = useForkRef(children.ref, rootRef);\n  var prevOpenRef = React.useRef();\n  React.useEffect(function () {\n    prevOpenRef.current = open;\n  }, [open]);\n\n  if (!prevOpenRef.current && open && typeof window !== 'undefined' && !disableAutoFocus) {\n    // WARNING: Potentially unsafe in concurrent mode.\n    // The way the read on `nodeToRestore` is setup could make this actually safe.\n    // Say we render `open={false}` -> `open={true}` but never commit.\n    // We have now written a state that wasn't committed. But no committed effect\n    // will read this wrong value. We only read from `nodeToRestore` in effects\n    // that were committed on `open={true}`\n    // WARNING: Prevents the instance from being garbage collected. Should only\n    // hold a weak ref.\n    nodeToRestore.current = getDoc().activeElement;\n  }\n\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    activated.current = !disableAutoFocus;\n    var doc = ownerDocument(rootRef.current);\n\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n\n    var contain = function contain(nativeEvent) {\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (!activated.current) {\n        nodeToRestore.current = doc.activeElement;\n      }\n\n      if (!rootRef.current.contains(doc.activeElement)) {\n        // if the focus event is not coming from inside the children's react tree, reset the refs\n        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {\n          reactFocusEventTarget.current = null;\n        } else if (reactFocusEventTarget.current !== null) {\n          return;\n        }\n\n        if (!activated.current) {\n          return;\n        }\n\n        rootRef.current.focus();\n      } else {\n        activated.current = true;\n      }\n    };\n\n    var loopFocus = function loopFocus(nativeEvent) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (nativeEvent.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      if (doc.activeElement.tagName === 'BODY') {\n        contain();\n      }\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n\n  var onFocus = function onFocus(event) {\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    var childrenPropsHandler = children.props.onFocus;\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), /*#__PURE__*/React.cloneElement(children, {\n    ref: handleRef,\n    onFocus: onFocus\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Unstable_TrapFocus.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, the trap focus will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any trap focus children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the trap focus less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the trap focus will not prevent focus from leaving the trap focus while open.\n   *\n   * Generally this should never be set to `true` as it makes the trap focus less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the trap focus will not restore focus to previously focused element once\n   * trap focus is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, focus will be locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Unstable_TrapFocus['propTypes' + ''] = exactProp(Unstable_TrapFocus.propTypes);\n}\n\nexport default Unstable_TrapFocus;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  var _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"invisible\", \"open\"]);\n\n  return open ? /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, invisible ? styles.invisible : {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerDocument from './ownerDocument';\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc.defaultView || window;\n}"],"sourceRoot":""}