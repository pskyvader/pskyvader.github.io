{"version":3,"sources":["components/buttons/ColorSelector.jsx"],"names":["colors","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","ColorSelector","mode","useContext","ThemeContext","SetColor","ResetColor","React","useState","open","setOpen","handleClickList","palette","hue","Object","entries","key","value","getColor","Fragment","button","onClick","primary","Text","in","timeout","unmountOnExit","component","onSelect","selectedcolor","light","dark","size","inset"],"mappings":"6cA6BMA,EAAS,CACXC,IAAKA,IACLC,KAAMA,IACNC,OAAQA,IACRC,WAAYA,IACZC,OAAQA,IACRC,KAAMA,IACNC,UAAWA,IACXC,KAAMA,IACNC,KAAMA,IACNC,MAAOA,IACPC,WAAYA,IACZC,KAAMA,IACNC,OAAQA,IACRC,MAAOA,IACPC,OAAQA,IACRC,WAAYA,IACZC,MAAOA,IACPC,KAAMA,IACNC,SAAUA,KAYC,SAASC,EAAT,GAA8C,IAAD,IAApBC,YAAoB,MAAb,UAAa,IACvBC,qBAAWC,KAApCC,EADgD,EAChDA,SAAUC,EADsC,EACtCA,WADsC,EAiBhCC,IAAMC,UAAS,GAjBiB,mBAiBjDC,EAjBiD,KAiB3CC,EAjB2C,KAmBlDC,EAAkB,WACpBD,GAASD,IAEPG,EA/BO,SAACC,GAEd,IADA,IAAID,EAAU,GACd,MAA2BE,OAAOC,QAAQlC,GAA1C,eAAmD,CAAC,IAAD,sBAAvCmC,EAAuC,KAAlCC,EAAkC,KAC/CL,EAAQI,GAAOC,EAAMJ,GAEzB,OAAOD,EA0BSM,CAAS,KAIzB,OAAO,kBAAC,IAAMC,SAAP,KACH,kBAAC,IAAD,CAAUC,QAAM,EAACC,QAASV,GACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAcW,QAASC,YAAK,cAAgBrB,KAC3CO,EAAO,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAE7B,kBAAC,IAAD,CAAUe,GAAIf,EAAMgB,QAAQ,OAAOC,eAAa,GAC5C,kBAAC,IAAD,CAAMC,UAAU,OACZ,kBAAC,IAAD,CAAUX,IAAK,cAAeI,QAAM,EAACC,QAASV,GAC1C,kBAAC,IAAD,CAAcC,QAASA,EAASgB,SAjCpB,SAACZ,GACzBN,GAAQ,GACR,IAAMmB,EAAgB,CAClBC,MAAOjD,EAAOmC,GAAK,KACnBe,KAAMlD,EAAOmC,GAAK,MAEtBX,EAASwB,EAAwB,YAAT3B,IA2BmD8B,KAAM,MAEzE,kBAAC,IAAD,CAAUhB,IAAK,aAAcI,QAAM,EAACC,QA3BpC,WACRX,GAAQ,GACRJ,EAAoB,YAATJ,KA0BC,kBAAC,IAAD,CAAc+B,OAAK,EAACX,QAASC,YAAK","file":"static/js/21.aab0bc60.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\n\r\nimport {\r\n    amber, blue, blueGrey, brown, cyan,\r\n    deepOrange, deepPurple, green, grey, indigo,\r\n    lightBlue, lightGreen, lime, orange,\r\n    pink, purple, red, teal, yellow\r\n} from '@material-ui/core/colors';\r\n\r\n\r\nimport { ColorPalette } from 'material-ui-color';\r\n\r\n// import LocalStorage from '../../logic/LocalStorage';\r\nimport Text from '../../languages/Language';\r\nimport { ThemeContext } from '../../ContextProviders/ThemeContext';\r\n\r\n\r\n\r\n\r\nconst colors = {\r\n    red: red,\r\n    pink: pink,\r\n    purple: purple,\r\n    deepPurple: deepPurple,\r\n    indigo: indigo,\r\n    blue: blue,\r\n    lightBlue: lightBlue,\r\n    cyan: cyan,\r\n    teal: teal,\r\n    green: green,\r\n    lightGreen: lightGreen,\r\n    lime: lime,\r\n    yellow: yellow,\r\n    amber: amber,\r\n    orange: orange,\r\n    deepOrange: deepOrange,\r\n    brown: brown,\r\n    grey: grey,\r\n    blueGrey: blueGrey,\r\n};\r\n\r\nconst getColor = (hue) => {\r\n    var palette = {};\r\n    for (const [key, value] of Object.entries(colors)) {\r\n        palette[key] = value[hue];\r\n    }\r\n    return palette;\r\n}\r\n\r\n\r\nexport default function ColorSelector({ mode = \"primary\" }) {\r\n    const { SetColor, ResetColor } = useContext(ThemeContext);\r\n\r\n    // set selected language by calling context method\r\n    const handleMenuItemClick = (key) => {\r\n        setOpen(false);\r\n        const selectedcolor = {\r\n            light: colors[key][600],\r\n            dark: colors[key][900]\r\n        }\r\n        SetColor(selectedcolor, mode === \"primary\");\r\n    }\r\n    const Reset=()=>{\r\n        setOpen(false);\r\n        ResetColor(mode === \"primary\");\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickList = () => {\r\n        setOpen(!open);\r\n    };\r\n    const palette = getColor(600);\r\n\r\n\r\n\r\n    return <React.Fragment>\r\n        <ListItem button onClick={handleClickList}>\r\n            <ListItemIcon>\r\n                <PaletteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={Text(\"selectcolor\" + mode)} />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" >\r\n                <ListItem key={\"selectcolor\"} button onClick={handleClickList}>\r\n                    <ColorPalette palette={palette} onSelect={handleMenuItemClick} size={36} />\r\n                </ListItem>\r\n                <ListItem key={\"resetcolor\"} button onClick={Reset}>\r\n                    <ListItemText inset primary={Text(\"resetcolor\")} />\r\n                </ListItem>\r\n            </List>\r\n        </Collapse>\r\n    </React.Fragment>\r\n\r\n}"],"sourceRoot":""}