{"version":3,"sources":["../node_modules/@material-ui/core/List/ListContext.js","../node_modules/@material-ui/core/List/List.js","../node_modules/@material-ui/core/Slide/Slide.js","../node_modules/@material-ui/core/Divider/Divider.js","../node_modules/@material-ui/core/Backdrop/Backdrop.js","../node_modules/@material-ui/core/Drawer/Drawer.js"],"names":["ListContext","React","List","props","ref","children","classes","className","component","Component","dense","disablePadding","subheader","other","_objectWithoutPropertiesLoose","context","Provider","value","_extends","clsx","root","padding","withStyles","listStyle","margin","position","paddingTop","paddingBottom","name","setTranslateValue","direction","node","transform","rect","getBoundingClientRect","containerWindow","ownerWindow","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","left","width","innerHeight","top","height","getTranslateValue","style","webkitTransform","defaultTimeout","enter","duration","enteringScreen","exit","leavingScreen","Slide","appear","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","Transition","theme","useTheme","childrenRef","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","current","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","nodeRef","state","childProps","visibility","Divider","absolute","flexItem","light","orientation","role","textAlign","variant","themeVariantsClasses","useThemeVariants","vertical","withChildrenVertical","textAlignRight","textAlignLeft","withChildren","wrapper","wrapperVertical","flexShrink","borderWidth","borderStyle","borderColor","palette","divider","borderBottomWidth","bottom","inset","marginLeft","fullWidth","alpha","middle","spacing","marginRight","borderRightWidth","alignSelf","display","whiteSpace","border","borderTop","borderLeft","borderRight","borderBottom","content","flexDirection","paddingLeft","paddingRight","Backdrop","invisible","open","transitionDuration","Fade","zIndex","alignItems","justifyContent","right","backgroundColor","WebkitTapHighlightColor","oppositeDirection","defaultTransitionDuration","Drawer","anchor","anchorProp","BackdropProps","elevation","ModalProps","BackdropPropsProp","onClose","PaperProps","SlideProps","mounted","indexOf","isHorizontal","getAnchor","drawer","Paper","square","paper","capitalize","docked","slidingDrawer","Modal","BackdropComponent","modal","flex","overflowY","WebkitOverflowScrolling","outline","paperAnchorLeft","paperAnchorRight","paperAnchorTop","maxHeight","paperAnchorBottom","paperAnchorDockedLeft","paperAnchorDockedTop","paperAnchorDockedRight","paperAnchorDockedBottom","flip"],"mappings":"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","file":"static/js/15.f10ada93.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst ListContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element unless `disablePadding={true}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nconst List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'ul',\n    dense = false,\n    disablePadding = false,\n    subheader\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding is removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${containerWindow.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${containerWindow.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    appear = true,\n    children,\n    direction = 'down',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"appear\", \"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: appear,\n    in: inProp,\n    timeout: timeout\n  }, other), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    // Reset browser default style.\n    flexShrink: 0,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    borderColor: theme.palette.divider,\n    borderBottomWidth: 'thin'\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `variant=\"fullWidth\"`. */\n  fullWidth: {},\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    borderColor: alpha(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    borderBottomWidth: 0,\n    borderRightWidth: 'thin'\n  },\n\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto'\n  },\n\n  /* Styles applied to the root element if divider have text. */\n  withChildren: {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    border: 0,\n    '&::before, &::after': {\n      position: 'relative',\n      width: '100%',\n      borderColor: theme.palette.divider,\n      borderTop: 'thin',\n      borderLeft: 0,\n      borderRight: 0,\n      borderBottom: 0,\n      borderStyle: 'solid',\n      top: '50%',\n      content: '\"\"',\n      transform: 'translateY(50%)'\n    }\n  },\n\n  /* Styles applied to the root element if divider have text and `orientation=\"vertical\"`. */\n  withChildrenVertical: {\n    flexDirection: 'column',\n    '&::before, &::after': {\n      height: '100%',\n      top: '0%',\n      left: '50%',\n      borderColor: theme.palette.divider,\n      borderTop: 0,\n      borderLeft: 'thin',\n      borderStyle: 'solid',\n      transform: 'translateX(0%)'\n    }\n  },\n\n  /* Styles applied to the root element if `textAlign=\"right\" orientation=\"horizontal\"`. */\n  textAlignRight: {\n    '&::before': {\n      width: '90%'\n    },\n    '&::after': {\n      width: '10%'\n    }\n  },\n\n  /* Styles applied to the root element if `textAlign=\"left\" orientation=\"horizontal\"`. */\n  textAlignLeft: {\n    '&::before': {\n      width: '10%'\n    },\n    '&::after': {\n      width: '90%'\n    }\n  },\n\n  /* Styles applied to the span children element if `orientation=\"horizontal\"`. */\n  wrapper: {\n    display: 'inline-block',\n    paddingLeft: theme.spacing(1.2),\n    paddingRight: theme.spacing(1.2)\n  },\n\n  /* Styles applied to the span children element if `orientation=\"vertical\"`. */\n  wrapperVertical: {\n    paddingTop: theme.spacing(1.2),\n    paddingBottom: theme.spacing(1.2)\n  }\n});\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  const {\n    absolute = false,\n    classes,\n    className,\n    children,\n    component: Component = children ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = Component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"children\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    absolute,\n    component: Component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  }), 'MuiDivider');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, orientation === 'vertical' ? [classes.vertical, children && classes.withChildrenVertical] : {\n      'right': classes.textAlignRight,\n      'left': classes.textAlignLeft\n    }[textAlign], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, children && classes.withChildren),\n    role: role,\n    ref: ref\n  }, other), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.wrapper, orientation === 'vertical' && classes.wrapperVertical)\n  }, children) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Fade from '../Fade';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    // Improve scrollable dialog support.\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\nconst Backdrop = /*#__PURE__*/React.forwardRef(function Backdrop(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    invisible = false,\n    open,\n    transitionDuration,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Fade\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"invisible\", \"open\", \"transitionDuration\", \"TransitionComponent\"]);\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    timeout: transitionDuration\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, className, invisible && classes.invisible),\n    \"aria-hidden\": true,\n    ref: ref\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBackdrop'\n})(Backdrop);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n  docked: {\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    flex: '1 0 auto',\n    zIndex: theme.zIndex.drawer,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    // temporary style\n    position: 'fixed',\n    top: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    // At some point, it would be better to keep it for keyboard users.\n    // :focus-ring CSS pseudo-class will help.\n    outline: 0\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n  paperAnchorLeft: {\n    left: 0,\n    right: 'auto'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n  paperAnchorRight: {\n    left: 'auto',\n    right: 0\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n  paperAnchorTop: {\n    top: 0,\n    left: 0,\n    bottom: 'auto',\n    right: 0,\n    height: 'auto',\n    maxHeight: '100%'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n  paperAnchorBottom: {\n    top: 'auto',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 'auto',\n    maxHeight: '100%'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedLeft: {\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedTop: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedRight: {\n    borderLeft: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedBottom: {\n    borderTop: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Modal` component. */\n  modal: {}\n});\nconst oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nconst Drawer = /*#__PURE__*/React.forwardRef(function Drawer(props, ref) {\n  const {\n    anchor: anchorProp = 'left',\n    BackdropProps,\n    children,\n    classes,\n    className,\n    elevation = 16,\n    ModalProps: {\n      BackdropProps: BackdropPropsProp\n    } = {},\n    onClose,\n    open = false,\n    PaperProps = {},\n    SlideProps,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Slide,\n    transitionDuration = defaultTransitionDuration,\n    variant = 'temporary'\n  } = props,\n        ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, [\"BackdropProps\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"]);\n\n  const theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  const mounted = React.useRef(false);\n  React.useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const anchor = getAnchor(theme, anchorProp);\n  const drawer = /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperAnchor${capitalize(anchor)}`], PaperProps.className, variant !== 'temporary' && classes[`paperAnchorDocked${capitalize(anchor)}`])\n  }), children);\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), drawer);\n  }\n\n  const slidingDrawer = /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchor],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps), drawer);\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), slidingDrawer);\n  } // variant === temporary\n\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration\n    }),\n    BackdropComponent: Backdrop,\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    onClose: onClose,\n    ref: ref\n  }, other, ModalProps), slidingDrawer);\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   * @default 'left'\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   * @default 16\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   * @default {}\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   * @default false\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   * @default 'temporary'\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false\n})(Drawer);"],"sourceRoot":""}