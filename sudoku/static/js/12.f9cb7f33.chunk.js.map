{"version":3,"sources":["../node_modules/@material-ui/core/List/ListContext.js","../node_modules/@material-ui/core/transitions/utils.js","../node_modules/@material-ui/core/Button/Button.js","components/buttons/DifficultyButtons.jsx","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@material-ui/core/Portal/Portal.js","../node_modules/@material-ui/core/List/List.js"],"names":["ListContext","React","reflow","node","scrollTop","getTransitionProps","props","options","timeout","style","duration","transitionDuration","mode","delay","transitionDelay","Button","ref","children","classes","className","color","component","disabled","disableElevation","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","fullWidth","size","startIconProp","startIcon","type","variant","other","_objectWithoutPropertiesLoose","themeVariantsClasses","useThemeVariants","_extends","clsx","capitalize","ButtonBase","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","minWidth","padding","borderRadius","shape","transition","transitions","create","short","textDecoration","backgroundColor","alpha","palette","text","primary","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","buttoncolor","pallete","useStyles","makeStyles","info","success","warning","error","buttonstar","position","bottom","spacing","right","light","button1","button2","button3","button4","DifficultyButtons","useContext","BoardContext","Difficulty","ResetBoard","setDifficulty","Reset","number","difficultylist","Text","class","icon","EmojiEmotionsIcon","InsertEmoticonIcon","FaceIcon","MoodBadIcon","map","e","title","onClick","selected","edge","disableRipple","checked","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","Portal","container","disablePortal","mountNode","setMountNode","handleRef","useForkRef","useEnhancedEffect","getContainer","document","body","setRef","List","dense","disablePadding","subheader","listStyle","margin","paddingTop","paddingBottom"],"mappings":"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","file":"static/js/12.f9cb7f33.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst ListContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  const {\n    timeout,\n    style = {}\n  } = props;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    padding: '6px 8px'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n  textPrimary: {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n  textSecondary: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {\n    padding: '5px 15px',\n    border: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n  outlinedPrimary: {\n    color: theme.palette.primary.main,\n    border: `1px solid ${alpha(theme.palette.primary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.primary.main}`,\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n  outlinedSecondary: {\n    color: theme.palette.secondary.main,\n    border: `1px solid ${alpha(theme.palette.secondary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.secondary.main}`,\n      backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabled}`\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"`. */\n  contained: {\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    boxShadow: theme.shadows[2],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      boxShadow: theme.shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: theme.shadows[2],\n        backgroundColor: theme.palette.grey[300]\n      }\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[8]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n  containedPrimary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n  containedSecondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `disableElevation={true}`. */\n  disableElevation: {\n    boxShadow: 'none',\n    '&:hover': {\n      boxShadow: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none'\n    },\n    '&$disabled': {\n      boxShadow: 'none'\n    }\n  },\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n  textSizeSmall: {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n  textSizeLarge: {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n  outlinedSizeSmall: {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n  outlinedSizeLarge: {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n  containedSizeSmall: {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n  containedSizeLarge: {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {},\n\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {},\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  },\n\n  /* Styles applied to the startIcon element if supplied. */\n  startIcon: {\n    display: 'inherit',\n    marginRight: 8,\n    marginLeft: -4,\n    '&$iconSizeSmall': {\n      marginLeft: -2\n    }\n  },\n\n  /* Styles applied to the endIcon element if supplied. */\n  endIcon: {\n    display: 'inherit',\n    marginRight: -4,\n    marginLeft: 8,\n    '&$iconSizeSmall': {\n      marginRight: -2\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n  iconSizeSmall: {\n    '& > *:first-child': {\n      fontSize: 18\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n  iconSizeMedium: {\n    '& > *:first-child': {\n      fontSize: 20\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n  iconSizeLarge: {\n    '& > *:first-child': {\n      fontSize: 22\n    }\n  }\n});\nconst Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'primary',\n    component = 'button',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type,\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  }), 'MuiButton');\n  const startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[`iconSize${capitalize(size)}`])\n  }, startIconProp);\n  const endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[`iconSize${capitalize(size)}`])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, color === 'inherit' ? classes.colorInherit : classes[`${variant}${capitalize(color)}`], size !== 'medium' && [classes[`${variant}Size${capitalize(size)}`], classes[`size${capitalize(size)}`]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\n\r\nimport Text from '../../languages/Language';\r\n\r\nimport { BoardContext } from '../../ContextProviders/BoardContext';\r\n\r\nconst buttoncolor = (pallete, getContrastText) => {\r\n    return {\r\n        backgroundColor: pallete.main,\r\n        color: getContrastText(pallete.main),\r\n        border: \"none\",\r\n        '&:hover': {\r\n            backgroundColor: pallete.dark,\r\n            color: getContrastText(pallete.dark),\r\n            border: \"none\",\r\n        },\r\n    }\r\n}\r\nconst useStyles = makeStyles((theme) => {\r\n    const { info, success, warning, error, getContrastText } = theme.palette;\r\n    return {\r\n        buttonstar: {\r\n            position: \"absolute\",\r\n            bottom: theme.spacing(0.25),\r\n            right: theme.spacing(0.25),\r\n            fontSize: \"0.75rem\",\r\n            borderRadius: \"100%\",\r\n            backgroundColor: \"white\",\r\n            color: warning.light\r\n        },\r\n        button1: buttoncolor(info, getContrastText),\r\n        button2: buttoncolor(success, getContrastText),\r\n        button3: buttoncolor(warning, getContrastText),\r\n        button4: buttoncolor(error, getContrastText)\r\n    }\r\n});\r\n\r\nconst DifficultyButtons = (props) => {\r\n    const { mode = \"button\" } = props;\r\n    const { Difficulty, ResetBoard,setDifficulty } = useContext(BoardContext);\r\n\r\n    const Reset = (number) => {\r\n        setDifficulty(0);\r\n        ResetBoard(number);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const difficultylist = [\r\n        { number: 1, text: Text('veryeasymode'), class: classes.button1, icon: EmojiEmotionsIcon },\r\n        { number: 2, text: Text('easymode'), class: classes.button2, icon: InsertEmoticonIcon },\r\n        { number: 3, text: Text('mediummode'), class: classes.button3, icon: FaceIcon },\r\n        { number: 4, text: Text('hardmode'), class: classes.button4, icon: MoodBadIcon }\r\n    ]\r\n\r\n\r\n    // const textloading = Text('loading');\r\n    // if (Loading && Difficulty <= 20) {\r\n    //     return textloading\r\n    // }\r\n    if (mode === \"button\") {\r\n        return <ButtonGroup size=\"small\">\r\n            {difficultylist.map((e) => (\r\n                <Tooltip key={e.text} title={e.text}>\r\n                    <Button className={e.class} onClick={() => Reset(e.number)}>\r\n                        <e.icon />\r\n                        {Difficulty === e.number ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n                    </Button>\r\n                </Tooltip>\r\n            ))}\r\n        </ButtonGroup>\r\n    } else {\r\n        return <List>\r\n            {difficultylist.map((e) => (\r\n                <ListItem button key={e.text} onClick={() => Reset(e.number)} selected={Difficulty === e.number}>\r\n                    <ListItemIcon> <e.icon /></ListItemIcon>\r\n                    <ListItemText primary={e.text} />\r\n                    <Radio\r\n                        edge=\"end\"\r\n                        size=\"small\"\r\n                        disableRipple checked={Difficulty === e.number} />\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DifficultyButtons;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType } from '@material-ui/utils';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return () => {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element unless `disablePadding={true}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nconst List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'ul',\n    dense = false,\n    disablePadding = false,\n    subheader\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding is removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);"],"sourceRoot":""}