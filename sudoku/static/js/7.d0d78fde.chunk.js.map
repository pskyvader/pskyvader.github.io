{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/SudokuPopover.jsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","FormControlContext","React","SwitchBase","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","useStyles","makeStyles","getContrastText","background","light","button","fontWeight","minWidth","borderRadius","spacing","breakpoints","up","paper","options","checkbox","paddingRight","label","optioncolor","optionbackground","OptionsActiveoption","SudokuPopover","handleClose","field","OptionsActive","setOptionsActive","parentOptions","useState","ChangeOption","SetChangeOption","handleChange","Grid","container","justify","map","row","valuex","keyx","item","xs","number","valuey","keyy","classname","has","Button","onClick","delete","add","changeOptions","clear","SetNumber","setNumber","disableRipple","SudokuPopoverContainer","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway"],"mappings":"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","file":"static/js/7.d0d78fde.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nconst useStyles = makeStyles((theme) => {\n    const { primary, secondary, getContrastText, background } = theme.palette;\n    const light = theme.palette.type === \"light\";\n\n    return {\n        button: {\n            height: \"100%\",\n            width: \"100%\",\n            fontSize: \"1em\",\n            fontWeight: \"normal\",\n            minWidth: 0,\n            borderRadius: 0,\n            padding: theme.spacing(1),\n            [theme.breakpoints.up('md')]: {\n                padding: theme.spacing(1.5)\n            },\n            \"&:hover\": {\n                backgroundColor: background.default,\n            },\n            color: light ? \"\" : getContrastText(background.paper)\n        },\n        options: {\n            height: \"100%\",\n            width: \"100%\",\n            fontWeight: \"normal\",\n            margin: 0,\n            borderRadius: 0,\n            color: light ? \"\" : getContrastText(background.paper)\n        },\n        checkbox: {\n            padding: 0,\n            paddingRight: theme.spacing(1),\n            color: light ? primary.main : getContrastText(background.paper),\n        },\n        label: {\n            width: 0,\n        },\n        optioncolor: {\n            color: getContrastText(primary.light),\n            \"&:hover\": {\n                backgroundColor: primary.light,\n            }\n        },\n        optionbackground: {\n            backgroundColor: primary.main\n        },\n        OptionsActiveoption: {\n            backgroundColor: secondary.main,\n            \"&:hover\": {\n                backgroundColor: secondary.light,\n            }\n        }\n    }\n});\n\n\n\nconst SudokuPopover = (props) => {\n    const { handleClose, field, OptionsActive, setOptionsActive, parentOptions } = props;\n\n    const [ChangeOption, SetChangeOption] = React.useState(false);\n\n    const handleChange = () => {\n        setOptionsActive(!OptionsActive);\n    };\n\n    const classes = useStyles();\n    const optioncolor = OptionsActive ? classes.optioncolor : \"\";\n    const box = [[1, 4, 7], [2, 5, 8], [3, 6, 9]];\n    const key = \"popover\";\n\n    const Clear = () => {\n        field.options.clear();\n        field.SetNumber(\"\");\n        handleClose();\n    }\n\n    const setNumber = (number) => {\n        field.options.clear();\n        field.SetNumber(number);\n        handleClose();\n    };\n\n    const changeOptions = (number) => {\n        if (field.options.has(number)) {\n            field.options.delete(number);\n        } else {\n            field.options.add(number);\n        }\n        parentOptions(!ChangeOption);\n        SetChangeOption(!ChangeOption);\n    };\n\n    return <Grid container justify=\"center\" className={clsx(OptionsActive ? classes.optionbackground : \"\", ChangeOption)} >\n        {box.map((row, valuex) => {\n            const keyx = key + \"-\" + valuex;\n            return <Grid key={keyx} item xs={4}>\n                {row.map((number, valuey) => {\n                    const keyy = keyx + \",\" + valuey;\n                    const classname = clsx(classes.button, optioncolor, OptionsActive && field.options.has(number) ? classes.OptionsActiveoption : \"\");\n                    return <Grid key={keyy} item xs={12}>\n                        <Button className={classname} onClick={() => OptionsActive ? changeOptions(number) : setNumber(number)}>\n                            {number}\n                        </Button>\n                    </Grid>\n                })}\n            </Grid>\n        })}\n\n        <Grid item xs={12}>\n            <Grid item xs={12}>\n                <Button classes={{ label: classes.label }} className={clsx(classes.options, optioncolor)} onClick={handleChange}>\n                    <Checkbox color=\"default\" className={clsx(classes.checkbox, optioncolor)} checked={OptionsActive} onChange={handleChange} inputProps={{ 'aria-label': 'Option checkbox' }} disableRipple />\n                    Options\n                </Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Button className={clsx(classes.options, optioncolor)} onClick={() => Clear()}>Clear</Button>\n            </Grid>\n        </Grid>\n\n    </Grid>\n}\n\n// export default SudokuPopover;\n\n\nconst SudokuPopoverContainer = (props) => {\n    const { TransitionProps,placement, handleClose } = props;\n    return (\n        <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }} >\n            <div>\n                <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                        <div>\n                            <SudokuPopover {...props} />\n                        </div>\n                    </ClickAwayListener>\n                </Paper>\n            </div>\n        </Grow>\n    )\n}\nexport default SudokuPopoverContainer;\n"],"sourceRoot":""}