{"version":3,"sources":["components/buttons/DifficultyButtons.jsx"],"names":["buttoncolor","pallete","getContrastText","backgroundColor","main","color","border","dark","useStyles","makeStyles","theme","palette","info","success","warning","error","buttonstar","position","bottom","spacing","right","fontSize","borderRadius","light","button1","button2","button3","button4","DifficultyButtons","props","board","setDifficulty","Difficulty","classes","ResetBoard","n","newboard","SudokuResolver","RestoreBoard","CloneBoard","size","className","onClick"],"mappings":"mGAAA,uJAaMA,EAAc,SAACC,EAASC,GAC1B,MAAO,CACHC,gBAAiBF,EAAQG,KACzBC,MAAOH,EAAgBD,EAAQG,MAC/BE,OAAQ,OACR,UAAW,CACPH,gBAAiBF,EAAQM,KACzBF,MAAOH,EAAgBD,EAAQM,MAC/BD,OAAQ,UAIdE,EAAYC,aAAW,SAACC,GAAW,IAAD,EACuBA,EAAMC,QAAzDC,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,QAASC,EADa,EACbA,QAASC,EADI,EACJA,MAAOb,EADH,EACGA,gBACvC,MAAO,CACHc,WAAY,CACRC,SAAU,WACVC,OAAQR,EAAMS,QAAQ,KACtBC,MAAOV,EAAMS,QAAQ,KACrBE,SAAU,UACVC,aAAc,OACdnB,gBAAiB,QACjBE,MAAOS,EAAQS,OAEnBC,QAASxB,EAAYY,EAAMV,GAC3BuB,QAASzB,EAAYa,EAASX,GAC9BwB,QAAS1B,EAAYc,EAASZ,GAC9ByB,QAAS3B,EAAYe,EAAOb,OAqCrB0B,UAjCW,SAACC,GAAW,IAC1BC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,cAAeC,EAAeH,EAAfG,WAExBC,EAAUzB,IAEhB,SAAS0B,EAAWC,GAChB,IAAMC,EAAW,IAAIC,IAAeF,GACpCJ,EAAcI,GACdL,EAAMQ,aAAaF,EAASG,cAIhC,OAAO,kBAAC,IAAD,CAAaC,KAAK,SACrB,kBAAC,IAAD,CAAQC,UAAWR,EAAQT,QAASkB,QAAS,kBAAMR,EAAW,MAC1D,kBAAC,IAAD,MACgB,KAAfF,EAAoB,kBAAC,IAAD,CAAWS,UAAWR,EAAQjB,aAAiB,IAExE,kBAAC,IAAD,CAAQyB,UAAWR,EAAQR,QAASiB,QAAS,kBAAMR,EAAW,MAC1D,kBAAC,IAAD,MACgB,KAAfF,EAAoB,kBAAC,IAAD,CAAWS,UAAWR,EAAQjB,aAAiB,IAExE,kBAAC,IAAD,CAAQyB,UAAWR,EAAQP,QAASgB,QAAS,kBAAMR,EAAW,MAC1D,kBAAC,IAAD,MACgB,KAAfF,EAAoB,kBAAC,IAAD,CAAWS,UAAWR,EAAQjB,aAAiB,IAExE,kBAAC,IAAD,CAAQyB,UAAWR,EAAQN,QAASe,QAAS,kBAAMR,EAAW,MAC1D,kBAAC,IAAD,MACgB,KAAfF,EAAoB,kBAAC,IAAD,CAAWS,UAAWR,EAAQjB,aAAiB","file":"static/js/12.a9bc4a78.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\nimport SudokuResolver from \"../../logic/SudokuResolver\";\r\n\r\nconst buttoncolor = (pallete, getContrastText) => {\r\n    return {\r\n        backgroundColor: pallete.main,\r\n        color: getContrastText(pallete.main),\r\n        border: \"none\",\r\n        '&:hover': {\r\n            backgroundColor: pallete.dark,\r\n            color: getContrastText(pallete.dark),\r\n            border: \"none\",\r\n        },\r\n    }\r\n}\r\nconst useStyles = makeStyles((theme) => {\r\n    const { info, success, warning, error, getContrastText } = theme.palette;\r\n    return {\r\n        buttonstar: {\r\n            position: \"absolute\",\r\n            bottom: theme.spacing(0.25),\r\n            right: theme.spacing(0.25),\r\n            fontSize: \"0.75rem\",\r\n            borderRadius: \"100%\",\r\n            backgroundColor: \"white\",\r\n            color: warning.light\r\n        },\r\n        button1: buttoncolor(info, getContrastText),\r\n        button2: buttoncolor(success, getContrastText),\r\n        button3: buttoncolor(warning, getContrastText),\r\n        button4: buttoncolor(error, getContrastText)\r\n    }\r\n});\r\n\r\nconst DifficultyButtons = (props) => {\r\n    const { board, setDifficulty, Difficulty } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    function ResetBoard(n) {\r\n        const newboard = new SudokuResolver(n);\r\n        setDifficulty(n);\r\n        board.RestoreBoard(newboard.CloneBoard());\r\n    }\r\n\r\n\r\n    return <ButtonGroup size=\"small\">\r\n        <Button className={classes.button1} onClick={() => ResetBoard(63)}>\r\n            <EmojiEmotionsIcon />\r\n            {Difficulty === 63 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n        <Button className={classes.button2} onClick={() => ResetBoard(45)}>\r\n            <InsertEmoticonIcon />\r\n            {Difficulty === 45 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n        <Button className={classes.button3} onClick={() => ResetBoard(36)}>\r\n            <FaceIcon />\r\n            {Difficulty === 36 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n        <Button className={classes.button4} onClick={() => ResetBoard(27)}>\r\n            <MoodBadIcon />\r\n            {Difficulty === 27 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n    </ButtonGroup>\r\n}\r\n\r\n\r\nexport default DifficultyButtons;"],"sourceRoot":""}