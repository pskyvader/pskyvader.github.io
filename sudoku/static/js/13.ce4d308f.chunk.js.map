{"version":3,"sources":["../node_modules/@material-ui/core/FormControl/useFormControl.js","../node_modules/@material-ui/core/FormControl/FormControlContext.js","../node_modules/@material-ui/core/internal/SwitchBase.js","../node_modules/@material-ui/core/Grow/Grow.js","../node_modules/@material-ui/core/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/Switch/Switch.js","components/SudokuPopover.jsx"],"names":["useFormControl","React","FormControlContext","SwitchBase","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","getScale","styles","entering","transform","entered","Grow","appear","children","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent","Transition","timer","autoTimeout","theme","useTheme","nodeRef","foreignRef","useForkRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","handleEntering","handleEnter","isAppearing","reflow","duration","getTransitionProps","mode","transitionDuration","delay","transitions","getAutoHeightDuration","clientHeight","transition","create","join","handleEntered","handleExiting","handleExit","handleExited","clearTimeout","addEndListener","next","setTimeout","childProps","visibility","muiSupportAuto","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","activatedRef","syntheticEventRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientY","clickedRootScrollbar","composedPath","indexOf","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","Switch","color","edge","size","thumb","edgeStart","edgeEnd","capitalize","switchBase","track","display","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","marginLeft","marginRight","palette","grey","shortest","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","useStyles","makeStyles","getContrastText","background","light","button","fontSize","fontWeight","minWidth","spacing","breakpoints","up","contrastText","paper","options","label","optioncolor","optionbackground","OptionsActiveoption","SudokuPopover","handleClose","field","useContext","BoardContext","OptionsActive","setOptionsActive","handleChange","Clear","clear","SetValueOptions","Set","SetNumber","setNumber","number","changeOptions","has","delete","add","pressNumber","key","pressednumber","parseInt","isNaN","useEffect","document","Grid","container","justify","map","row","valuex","keyx","item","xs","valuey","keyy","classname","Button","onClick","disableRipple","Text","SudokuPopoverContainer","TransitionProps","placement","transformOrigin","Paper"],"mappings":"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","file":"static/js/13.ce4d308f.chunk.js","sourcesContent":["import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport const styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    classes,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\n\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  const {\n    appear = true,\n    children,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = 'auto',\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"appear\", \"children\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const timer = React.useRef();\n  const autoTimeout = React.useRef();\n  const theme = useTheme();\n  const nodeRef = React.useRef(null);\n  const foreignRef = useForkRef(children.ref, ref);\n  const handleRef = useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  const childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 34 + 12 * 2,\n    height: 14 + 12 * 2,\n    overflow: 'hidden',\n    padding: 12,\n    boxSizing: 'border-box',\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0,\n    // Reset the stacking context.\n    verticalAlign: 'middle',\n    // For correct alignment with the text.\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -8\n  },\n\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -8\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    // Render above the focus ripple.\n    color: theme.palette.mode === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create(['left', 'transform'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&$checked': {\n      transform: 'translateX(20px)'\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      opacity: 0.5\n    },\n    '&$disabled + $track': {\n      opacity: theme.palette.mode === 'light' ? 0.12 : 0.1\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.secondary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    width: 40,\n    height: 24,\n    padding: 7,\n    '& $thumb': {\n      width: 16,\n      height: 16\n    },\n    '& $switchBase': {\n      padding: 4,\n      '&$checked': {\n        transform: 'translateX(16px)'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {},\n\n  /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n  disabled: {},\n\n  /* Styles applied to the internal SwitchBase component's input element. */\n  input: {\n    left: '-100%',\n    width: '300%'\n  },\n\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  thumb: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the track element. */\n  track: {\n    height: '100%',\n    width: '100%',\n    borderRadius: 14 / 2,\n    zIndex: -1,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n  }\n});\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  const icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[`size${capitalize(size)}`])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[`color${capitalize(color)}`]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nimport Text from '../languages/Language';\r\n\r\nimport { BoardContext } from '../ContextProviders/BoardContext';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const { primary, secondary, getContrastText, background } = theme.palette;\r\n    const light = theme.palette.mode === \"light\";\r\n\r\n    return {\r\n        button: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            fontSize: \"1em\",\r\n            fontWeight: \"normal\",\r\n            minWidth: 0,\r\n            borderRadius: 0,\r\n            padding: theme.spacing(1.5),\r\n            [theme.breakpoints.up('md')]: {\r\n                padding: theme.spacing(2.5)\r\n            },\r\n            \"&:hover\": {\r\n                backgroundColor: light ? primary.main : primary.light,\r\n                color: primary.contrastText\r\n            },\r\n            color: light ? primary.main : getContrastText(background.paper)\r\n        },\r\n        options: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            fontWeight: \"normal\",\r\n            margin: 0,\r\n            borderRadius: 0,\r\n            color: light ? primary.main : getContrastText(background.paper),\r\n            \"&:hover\": {\r\n                backgroundColor: light ? primary.main : primary.light,\r\n                color: primary.contrastText\r\n            }\r\n        },\r\n        label: {\r\n            width: 0,\r\n        },\r\n        optioncolor: {\r\n            color: getContrastText(primary.main),\r\n            \"&:hover\": {\r\n                backgroundColor: primary.light,\r\n            }\r\n        },\r\n        optionbackground: {\r\n            backgroundColor: primary.main\r\n        },\r\n        OptionsActiveoption: {\r\n            backgroundColor: secondary.main,\r\n            \"&:hover\": {\r\n                backgroundColor: secondary.light,\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\nconst SudokuPopover = (props) => {\r\n    const { handleClose, field } = props;\r\n    const { OptionsActive, setOptionsActive } = useContext(BoardContext);\r\n    const handleChange = () => {\r\n        setOptionsActive(!OptionsActive);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const optioncolor = OptionsActive ? classes.optioncolor : \"\";\r\n    const box = [[1, 4, 7], [2, 5, 8], [3, 6, 9]];\r\n    const key = \"popover\";\r\n\r\n    const Clear = () => {\r\n        field.options.clear();\r\n        field.SetValueOptions(new Set(field.options));\r\n        field.SetNumber(\"\");\r\n        handleClose();\r\n    }\r\n\r\n    const setNumber = (number) => {\r\n        field.options.clear();\r\n        field.SetValueOptions(new Set(field.options));\r\n        field.SetNumber(number);\r\n        handleClose();\r\n    };\r\n\r\n    const changeOptions = (number) => {\r\n        if (field.options.has(number)) {\r\n            field.options.delete(number);\r\n        } else {\r\n            field.options.add(number);\r\n        }\r\n        field.SetValueOptions(new Set(field.options));\r\n    };\r\n\r\n    const pressNumber = (event) => {\r\n        if (event.key === \"Backspace\" || event.key === \"Delete\") {\r\n            Clear();\r\n        } else {\r\n            const pressednumber = parseInt(event.key);\r\n            if (!isNaN(pressednumber)) {\r\n                if (OptionsActive) {\r\n                    changeOptions(pressednumber);\r\n                } else {\r\n                    setNumber(pressednumber);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", pressNumber, false);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", pressNumber, false);\r\n        };\r\n    });\r\n\r\n\r\n    return <Grid container justify=\"center\" className={clsx(OptionsActive && classes.optionbackground)} >\r\n        {box.map((row, valuex) => {\r\n            const keyx = key + \"-\" + valuex;\r\n            return <Grid key={keyx} item xs={4}>\r\n                {row.map((number, valuey) => {\r\n                    const keyy = keyx + \",\" + valuey;\r\n                    const classname = clsx(classes.button, optioncolor, OptionsActive && field.options.has(number) ? classes.OptionsActiveoption : \"\");\r\n                    return <Grid key={keyy}>\r\n                        <Button className={classname} onClick={() => OptionsActive ? changeOptions(number) : setNumber(number)}>\r\n                            {number}\r\n                        </Button>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        })}\r\n\r\n        <Grid item xs={12}>\r\n            <Grid item xs={12}>\r\n                <Button classes={{ label: classes.label }} className={clsx(classes.options, optioncolor)} onClick={handleChange}>\r\n                    <Switch\r\n                        edge=\"start\"\r\n                        size=\"small\"\r\n                        disableRipple\r\n                        onChange={handleChange}\r\n                        checked={OptionsActive}\r\n                    />\r\n                    {Text('options')}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button className={clsx(classes.options, optioncolor)} onClick={() => Clear()}>{Text('clear')}</Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </Grid>\r\n}\r\n\r\nconst SudokuPopoverContainer = (props) => {\r\n    const { TransitionProps, placement, handleClose } = props;\r\n    return (\r\n        <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }} >\r\n            <div>\r\n                <Paper>\r\n                    <ClickAwayListener onClickAway={handleClose}>\r\n                        <div>\r\n                            <SudokuPopover {...props} />\r\n                        </div>\r\n                    </ClickAwayListener>\r\n                </Paper>\r\n            </div>\r\n        </Grow>\r\n    )\r\n}\r\nexport default SudokuPopoverContainer;\r\n"],"sourceRoot":""}