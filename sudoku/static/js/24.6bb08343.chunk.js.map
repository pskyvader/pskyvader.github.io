{"version":3,"sources":["components/SudokuOptions.jsx","components/SudokuNumberBox.jsx","components/SudokuBox.jsx","pages/Home.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","options","fontSize","lineHeight","overflowWrap","number","FullWidthGrid","children","classes","Array","from","sort","join","Grid","container","item","xs","className","SudokuPopover","lazy","palette","primary","getContrastText","background","grey","light","type","button","height","width","fontWeight","minWidth","borderRadius","padding","color","paper","backgroundColor","error","main","contrastText","selected","disabled","popper","zIndex","SudokuNumber","field","SaveBoard","useContext","BoardContext","anchorRef","React","useRef","useState","open","setOpen","handleClose","locked","FinalNumber","SetFinalNumber","FinalError","SetError","Options","SetOptions","clsx","Button","Fragment","ref","onClick","event","prev","fallback","Popper","anchorEl","current","transition","TransitionProps","placement","SudokuNumberBox","props","fontsize","Box","display","alignItems","justifyContent","mainbordercolor","subbox","textAlign","grid","borderRight","spacing","subgrid","borderBottom","SudokuSubBox","matrix","box","submatrix","key","x","y","justify","map","column","keyx","row","keyy","SudokuBox","subheight","DifficultyButtons","mainborder","border","maxWidth","mixins","toolbar","minHeight","margin","borderLeft","borderTop","modal","top","left","position","boxShadow","shadows","transform","outline","Home","board","Success","setSuccess","canvas","LocalStorage","get","setHeight","debouncedHandleResize","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","debounce","BoxHeight","clientWidth","finalheight","set","useLayoutEffect","useEffect","window","addEventListener","removeEventListener","Modal","onClose","aria-labelledby","aria-describedby","Text","Typography","id","variant","gutterBottom","Math","round","random"],"mappings":"2MAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,QAAS,CACLC,SAAU,QACVC,WAAY,MACZC,aAAa,cAEjBC,OAAQ,CACJF,WAAY,WAIL,SAASG,EAAT,GAA+C,IAAtBL,EAAqB,EAArBA,QAASM,EAAY,EAAZA,SACvCC,EAAUZ,IAEhB,OADAK,EAAUQ,MAAMC,KAAKT,GAASU,OAAOC,KAAK,IAEtC,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAWT,EAAQP,SACjCA,GAEL,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAWT,EAAQH,QACjCE,I,YClBXW,EAAgBC,gBAAK,kBAAM,yDAK3BvB,EAAYC,aAAW,SAACC,GAAW,IAAD,EACmBA,EAAMsB,QAArDC,EAD4B,EAC5BA,QAASC,EADmB,EACnBA,gBAAiBC,EADE,EACFA,WAAYC,EADV,EACUA,KACxCC,EAA+B,UAAvB3B,EAAMsB,QAAQM,KAC5B,MAAO,CACHC,OAAQ,CACJC,OAAQ,OACRC,MAAO,OACP3B,SAAU,MACV4B,WAAY,SACZC,SAAU,EACVC,aAAc,EACdC,QAAS,EACTC,MAAOT,EAAQ,KAAOH,EAAgBC,EAAWY,OACjD,aAAc,CACVD,MAAOT,EAAQD,EAAK,KAAOA,EAAK,KAChCY,gBAAiBX,EAAQD,EAAK,KAAOA,EAAK,OAGlDa,MAAO,CACHH,MAAOpC,EAAMsB,QAAQiB,MAAMC,KAC3B,aAAc,CACVJ,MAAOpC,EAAMsB,QAAQiB,MAAME,aAC3BH,gBAAiBtC,EAAMsB,QAAQiB,MAAMC,OAG7CE,SAAU,CACNJ,gBAAiBf,EAAQI,MACzBS,MAAOZ,EAAgBD,EAAQI,OAC/B,UAAW,CACPW,gBAAiBf,EAAQiB,OAGjCG,SAAU,GACVC,OAAQ,CACJC,OAAQ,UAQdC,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZC,EAAcC,qBAAWC,KAAzBF,UACFtC,EAAUZ,IACVqD,EAAYC,IAAMC,OAAO,MAHC,EAKRD,IAAME,UAAS,GALP,mBAKzBC,EALyB,KAKnBC,EALmB,KAa1BC,EAAc,WAChBD,GAAQ,GACRR,KAIEzC,EAAmCwC,EAAnCxC,OAAQmD,EAA2BX,EAA3BW,OAAQnB,EAAmBQ,EAAnBR,MAAOpC,EAAY4C,EAAZ5C,QAnBG,EAqBMiD,IAAME,SAAS/C,GArBrB,mBAqBzBoD,EArByB,KAqBZC,EArBY,KAsBhCb,EAAMa,eAAiBA,EACvBb,EAAMxC,OAASoD,EAvBiB,MAyBDP,IAAME,SAASf,GAzBd,mBAyBzBsB,EAzByB,KAyBbC,EAzBa,KA0BhCf,EAAMe,SAAWA,EACjBf,EAAMR,MAAQsB,EA3BkB,MA6BFT,IAAME,SAASnD,GA7Bb,mBA6BzB4D,EA7ByB,KA6BhBC,EA7BgB,KA8BhCjB,EAAMiB,WAAaA,EACnBjB,EAAM5C,QAAU4D,EAEhB,IAAM5C,EAAY8C,YAAKvD,EAAQmB,OAAQgC,GAAcnD,EAAQ6B,MAAOgB,GAAQ7C,EAAQgC,UAEpF,OAAIgB,EAEI,kBAACQ,EAAA,EAAD,CAAQvB,UAAQ,EAACjC,QAAS,CAAET,KAAMkB,EAAWwB,SAAUjC,EAAQiC,WAC3D,kBAAC,EAAD,CAAexC,QAAS4D,GAAxB,IAAmCJ,IAKvC,kBAAC,IAAMQ,SAAP,KACI,kBAACD,EAAA,EAAD,CAAQE,IAAKjB,EAAWhC,UAAWA,EAAWkD,QAnCtC,SAACC,GACjBd,GAAQ,SAACe,GAAD,OAAWA,OAmCP,kBAAC,EAAD,CAAepE,QAAS4D,GAAxB,IAAmCJ,IAEvC,kBAAC,WAAD,CAAUa,SA5FC,MA6FP,kBAACC,EAAA,EAAD,CAAQlB,KAAMA,EAAMmB,SAAUvB,EAAUwB,QAASC,YAAU,EAACzD,UAAWT,EAAQkC,SAC1E,gBAAGiC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACG,kBAAC1D,EAAD,CACIyD,gBAAiBA,EACjBC,UAAWA,EACXrB,YAAaA,EACbV,MAAOA,UAwBxBgC,EAZS,SAACC,GAAW,IACxBlD,EAAWkD,EAAXlD,OACJmD,EAAoB,IAATnD,EAKf,OAJImD,EAAW,KACXA,EAAW,IAGR,kBAACC,EAAA,EAAD,CAAKpD,OAAQA,EAAQC,MAAM,OAAO3B,SAAU6E,EAAUE,QAAQ,OAAOC,WAAW,SAASC,eAAe,UAC3G,kBAAC,EAAiBL,KC3HpBlF,EAAYC,aAAW,SAACC,GAC1B,IACMsF,EAD+B,UAAvBtF,EAAMsB,QAAQM,KACI5B,EAAMsB,QAAQC,QAAQiB,KAAOxC,EAAMsB,QAAQC,QAAQI,MACnF,MAAO,CACH4D,OAAQ,CAAEC,UAAW,SAAU1D,OAAQ,QACvC2D,KAAM,CAAEC,YAAa1F,EAAM2F,QAAQ,MAAS,UAAYL,GACxDM,QAAS,CAAEC,aAAc7F,EAAM2F,QAAQ,MAAS,UAAYL,OAK9DQ,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQjE,EAAY,EAAZA,OACtBpB,EAAUZ,IACVkG,EAAMD,EAAOE,UACbC,EAAMH,EAAOI,EAAI,IAAMJ,EAAOK,EAEpC,OAAO,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACqF,QAAQ,SAASlF,UAAWT,EAAQ6E,QACtDS,EAAIM,KAAI,SAACC,EAAQJ,GACd,IAAMK,EAAON,EAAM,IAAMC,EACzB,OAAO,kBAACpF,EAAA,EAAD,CAAMmF,IAAKM,EAAMvF,MAAI,EAACC,GAAI,EAAGC,UAAWT,EAAQ+E,MAClDc,EAAOD,KAAI,SAACG,EAAKL,GACd,IAAMM,EAAOF,EAAO,IAAMJ,EAC1B,OAAO,kBAACrF,EAAA,EAAD,CAAMmF,IAAKQ,EAAMzF,MAAI,EAACC,GAAI,GAAIC,UAAWT,EAAQkF,SACpD,kBAAC,EAAD,CAAiB7C,MAAO0D,EAAK3E,OAAQA,cAgB9C6E,EARG,SAAC3B,GAAW,IAClBlD,EAAWkD,EAAXlD,OACF8E,EAAY9E,EAAS,EAAI,EAC/B,OAAO,kBAACoD,EAAA,EAAD,CAAKpD,OAAQA,EAAQC,MAAM,QAC9B,kBAAC,EAAD,iBAAkBiD,EAAlB,CAAyBlD,OAAQ8E,O,eC9BnCC,EAAoBxF,gBAAK,kBAAM,+DAG/BvB,EAAYC,aAAW,SAACC,GAC1B,IACMsF,EAD+B,UAAvBtF,EAAMsB,QAAQM,KACI5B,EAAMsB,QAAQC,QAAQiB,KAAOxC,EAAMsB,QAAQC,QAAQI,MAC7EmF,EAAa9G,EAAM2F,QAAQ,MAAgB,UAAYL,EACvDyB,EAAS/G,EAAM2F,QAAQ,KAAQ,UAAYL,EACjD,MAAO,CACHU,IAAK,CACDgB,SAAU,gBAAmD,EAAjChH,EAAMiH,OAAOC,QAAQC,UAAgB,MACjEC,OAAQpH,EAAM2F,QAAQ,EAAG,SAE7B1F,KAAM,CACFC,SAAU,EACVmH,WAAYP,EACZQ,UAAWR,GAEfrB,KAAM,CACFC,YAAaqB,GAEjBnB,QAAS,CACLC,aAAckB,GAElBQ,MAAO,CACHC,IAAK,MACLC,KAAM,MACNC,SAAU,WACVpF,gBAAiBtC,EAAMsB,QAAQG,WAAWY,MAC1CsF,UAAW3H,EAAM4H,QAAQ,GACzBzF,QAASnC,EAAM2F,QAAQ,GACvBkC,UAAU,wBACVC,QAAS,YAwFNC,UAvEF,WAAO,IAAD,EACsB9E,qBAAWC,KAAxC8E,EADO,EACPA,MAAMC,EADC,EACDA,QAAQC,EADP,EACOA,WAChBxH,EAAUZ,IACVqI,EAAS/E,IAAMC,OAAO,MAHb,EAIaD,IAAME,SAAS8E,IAAaC,IAAI,aAAc,MAJ3D,mBAIRvG,EAJQ,KAIAwG,EAJA,KAmBTC,EA/BV,SAAkBC,EAAIC,GAAK,IACnBC,EADkB,mBAEtB,OAAO,WACHC,aAAaD,GACbA,EAAQE,YAAW,WACfF,EAAQ,KACRF,EAAGK,MAAM,EAAMC,KAChBL,IAwBuBM,EATZ,SAAZC,IACF,GAAIb,EAAOxD,QAAQsE,YAAc,EAAG,CAChC,IAAMC,EAAcf,EAAOxD,QAAQsE,YAAc,EAAI,EACrDX,EAAUY,GACVd,IAAae,IAAI,aAAcD,QAE/BN,WAAWI,EAAW,OAGoB,KAGlD5F,IAAMgG,gBAAgBb,EAAuB,IAC7CnF,IAAMiG,WAAU,WAEZ,OADAC,OAAOC,iBAAiB,SAAUhB,GAC3B,kBAAMe,OAAOE,oBAAoB,SAAUjB,OAGtD,IACMhB,EACF,kBAACkC,EAAA,EAAD,CACIlG,KAAM0E,EACNyB,QA1BY,WAChBxB,GAAW,IA0BPyB,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAAC,WAAD,CAAUpF,SAPSqF,YAAK,YAQpB,yBAAK1I,UAAWT,EAAQ6G,OACpB,kBAACuC,EAAA,EAAD,CAAYC,GAAG,cAAcC,QAAQ,KAAKC,cAAY,GACjDJ,YAAK,WAAaK,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,KAEvD,kBAACN,EAAA,EAAD,CAAYC,GAAG,oBAAoBC,QAAQ,KAAKC,cAAY,GACvDJ,YAAK,YAEV,kBAAChD,EAAD,MACA,mCAASgD,YAAK,kBAAoBK,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,QASlF,OACI,kBAAClF,EAAA,EAAD,CAAK/D,UAAWT,EAAQsF,IAAK5B,IAAK+D,GAC7BZ,EACD,kBAACxG,EAAA,EAAD,CAAMC,WAAS,EAACqF,QAAQ,SAASlF,UAAWT,EAAQT,MAC/C+H,EAAMjC,OAAOO,KAAI,SAACC,EAAQJ,GAAT,OACd,kBAACpF,EAAA,EAAD,CAAMmF,IAAKC,EAAGlF,MAAI,EAACC,GAAI,EAAGC,UAAWT,EAAQ+E,MACxCc,EAAOD,KAAI,SAACG,EAAKL,GAAN,OACR,kBAACrF,EAAA,EAAD,CAAMmF,IAAKC,EAAI,IAAMC,EAAGnF,MAAI,EAACC,GAAI,GAAIC,UAAWT,EAAQkF,SACpD,kBAAC,EAAD,CAAWG,OAAQU,EAAK3E,OAAQA","file":"static/js/24.6bb08343.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    options: {\r\n        fontSize: \"0.3em\",\r\n        lineHeight: \"1em\",\r\n        overflowWrap:\"break-word\"\r\n    },\r\n    number: {\r\n        lineHeight: \"1em\",\r\n    }\r\n}));\r\n\r\nexport default function FullWidthGrid({ options, children }) {\r\n    const classes = useStyles();\r\n    options = Array.from(options).sort().join(\"\");\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} className={classes.options}>\r\n                {options}\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.number}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { lazy, Suspense,useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nimport SudokuOptions from './SudokuOptions';\r\nimport { BoardContext } from '../ContextProviders/BoardContext';\r\n\r\nconst SudokuPopover = lazy(() => import('./SudokuPopover'));\r\n\r\nconst renderLoader = () => null;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const { primary, getContrastText, background, grey } = theme.palette;\r\n    const light = theme.palette.type === \"light\";\r\n    return {\r\n        button: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            fontSize: \"1em\",\r\n            fontWeight: \"normal\",\r\n            minWidth: 0,\r\n            borderRadius: 0,\r\n            padding: 0,\r\n            color: light ? null : getContrastText(background.paper),\r\n            '&$disabled': {\r\n                color: light ? grey[500] : grey[300],\r\n                backgroundColor: light ? grey[200] : grey[800],\r\n            },\r\n        },\r\n        error: {\r\n            color: theme.palette.error.main,\r\n            '&$disabled': {\r\n                color: theme.palette.error.contrastText,\r\n                backgroundColor: theme.palette.error.main\r\n            },\r\n        },\r\n        selected: {\r\n            backgroundColor: primary.light,\r\n            color: getContrastText(primary.light),\r\n            \"&:hover\": {\r\n                backgroundColor: primary.main,\r\n            }\r\n        },\r\n        disabled: {},\r\n        popper: {\r\n            zIndex: 1300\r\n        },\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nconst SudokuNumber = ({ field }) => {\r\n    const { SaveBoard } = useContext(BoardContext);\r\n    const classes = useStyles();\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setOpen((prev) => !prev);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        SaveBoard();\r\n    };\r\n\r\n\r\n    let { number, locked, error, options } = field;\r\n\r\n    const [FinalNumber, SetFinalNumber] = React.useState(number);\r\n    field.SetFinalNumber = SetFinalNumber;\r\n    field.number = FinalNumber;\r\n\r\n    const [FinalError, SetError] = React.useState(error);\r\n    field.SetError = SetError;\r\n    field.error = FinalError;\r\n\r\n    const [Options, SetOptions] = React.useState(options);\r\n    field.SetOptions = SetOptions;\r\n    field.options = Options;\r\n\r\n    const className = clsx(classes.button, FinalError && classes.error, open && classes.selected);\r\n\r\n    if (locked) {\r\n        return (\r\n            <Button disabled classes={{ root: className, disabled: classes.disabled, }}  >\r\n                <SudokuOptions options={Options}> {FinalNumber}</SudokuOptions>\r\n            </Button>\r\n        )\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Button ref={anchorRef} className={className} onClick={handleClick}>\r\n                    <SudokuOptions options={Options}> {FinalNumber}</SudokuOptions>\r\n                </Button>\r\n                <Suspense fallback={renderLoader()}>\r\n                    <Popper open={open} anchorEl={anchorRef.current} transition className={classes.popper}>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <SudokuPopover\r\n                                TransitionProps={TransitionProps}\r\n                                placement={placement}\r\n                                handleClose={handleClose}\r\n                                field={field}\r\n                            />\r\n                        )}\r\n                    </Popper>\r\n                </Suspense>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst SudokuNumberBox = (props) => {\r\n    const { height } = props;\r\n    let fontsize = height * .75;\r\n    if (fontsize > 50) {\r\n        fontsize = 50;\r\n    }\r\n\r\n    return <Box height={height} width=\"100%\" fontSize={fontsize} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n        <SudokuNumber {...props} />\r\n    </Box>\r\n}\r\n\r\nexport default SudokuNumberBox;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SudokuNumberBox from \"./SudokuNumberBox\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const light = theme.palette.type === \"light\";\r\n    const mainbordercolor = light ? theme.palette.primary.main : theme.palette.primary.light;\r\n    return {\r\n        subbox: { textAlign: \"center\", height: \"100%\" },\r\n        grid: { borderRight: theme.spacing(0.125) + \" solid \" + mainbordercolor },\r\n        subgrid: { borderBottom: theme.spacing(0.125) + \" solid \" + mainbordercolor }\r\n    }\r\n});\r\n\r\n\r\nconst SudokuSubBox = ({ matrix, height}) => {\r\n    const classes = useStyles();\r\n    const box = matrix.submatrix;\r\n    const key = matrix.x + \",\" + matrix.y;\r\n\r\n    return <Grid container justify=\"center\" className={classes.subbox}>\r\n        {box.map((column, x) => {\r\n            const keyx = key + \"-\" + x;\r\n            return <Grid key={keyx} item xs={4} className={classes.grid}>\r\n                {column.map((row, y) => {\r\n                    const keyy = keyx + \",\" + y;\r\n                    return <Grid key={keyy} item xs={12} className={classes.subgrid}>\r\n                        <SudokuNumberBox field={row} height={height}/>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        })}\r\n    </Grid>\r\n}\r\n\r\nconst SudokuBox = (props) => {\r\n    const { height } = props;\r\n    const subheight = height / 3 - 1; // x / 3 (3 squares) -1 (1px borders ) \r\n    return <Box height={height} width=\"100%\">\r\n        <SudokuSubBox {...props} height={subheight} />\r\n    </Box>;\r\n}\r\n\r\nexport default SudokuBox;","import React, { lazy, Suspense, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SudokuBox from \"../components/SudokuBox\";\r\nimport LocalStorage from \"../logic/LocalStorage\";\r\nimport Text from '../languages/Language';\r\n\r\nimport { BoardContext } from '../ContextProviders/BoardContext';\r\n\r\nconst DifficultyButtons = lazy(() => import('../components/buttons/DifficultyButtons'));\r\n\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const light = theme.palette.type === \"light\";\r\n    const mainbordercolor = light ? theme.palette.primary.main : theme.palette.primary.light;\r\n    const mainborder = theme.spacing(0.25 + 0.125) + \" solid \" + mainbordercolor;\r\n    const border = theme.spacing(0.25) + \" solid \" + mainbordercolor;\r\n    return {\r\n        box: {\r\n            maxWidth: \"calc(100vh - \" + theme.mixins.toolbar.minHeight * 2 + \"px)\",\r\n            margin: theme.spacing(1, \"auto\"),\r\n        },\r\n        root: {\r\n            flexGrow: 1,\r\n            borderLeft: mainborder,\r\n            borderTop: mainborder,\r\n        },\r\n        grid: {\r\n            borderRight: border,\r\n        },\r\n        subgrid: {\r\n            borderBottom: border,\r\n        },\r\n        modal: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: 'absolute',\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(8),\r\n            transform: `translate(-50%, -50%)`,\r\n            outline: \"none\",\r\n        },\r\n    }\r\n});\r\n\r\nfunction debounce(fn, ms) {\r\n    let timer;\r\n    return () => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n        }, ms)\r\n    };\r\n}\r\n\r\n\r\nconst Home = () => {\r\n    const { board,Success,setSuccess } = useContext(BoardContext);\r\n    const classes = useStyles();\r\n    const canvas = React.useRef(null);\r\n    const [height, setHeight] = React.useState(LocalStorage.get(\"box_height\", 100));\r\n\r\n    const handleClose = () => {\r\n        setSuccess(false);\r\n    };\r\n\r\n    const BoxHeight = () => {\r\n        if (canvas.current.clientWidth > 0) {\r\n            const finalheight = canvas.current.clientWidth / 3 - 3;// x / 3 (3 squares) -3 (3px borders ) \r\n            setHeight(finalheight);\r\n            LocalStorage.set(\"box_height\", finalheight);\r\n        } else {\r\n            setTimeout(BoxHeight, 100);\r\n        }\r\n    }\r\n    const debouncedHandleResize = debounce(BoxHeight, 100);\r\n\r\n\r\n    React.useLayoutEffect(debouncedHandleResize, []);\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", debouncedHandleResize);\r\n        return () => window.removeEventListener(\"resize\", debouncedHandleResize);\r\n    });\r\n\r\n    const renderLoader = () => Text(\"loading\");\r\n    const modal = (\r\n        <Modal\r\n            open={Success}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\" >\r\n            <Suspense fallback={renderLoader()}>\r\n                <div className={classes.modal}>\r\n                    <Typography id=\"modal-title\" variant=\"h4\" gutterBottom>\r\n                        {Text(\"victory\" + (Math.round(Math.random() * 9) + 1))}\r\n                    </Typography>\r\n                    <Typography id=\"modal-description\" variant=\"h5\" gutterBottom>\r\n                        {Text(\"newgame\")}\r\n                    </Typography>\r\n                    <DifficultyButtons />\r\n                    <p> ... {Text(\"victorycomment\" + (Math.round(Math.random() * 9) + 1))}</p>\r\n                </div>\r\n            </Suspense>\r\n        </Modal>\r\n    );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box className={classes.box} ref={canvas}>\r\n            {modal}\r\n            <Grid container justify=\"center\" className={classes.root}>\r\n                {board.matrix.map((column, x) => (\r\n                    <Grid key={x} item xs={4} className={classes.grid}>\r\n                        {column.map((row, y) => (\r\n                            <Grid key={x + \",\" + y} item xs={12} className={classes.subgrid}>\r\n                                <SudokuBox matrix={row} height={height} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}