{"version":3,"sources":["../node_modules/@material-ui/core/esm/Button/Button.js","components/buttons/DifficultyButtons.jsx"],"names":["Button","React","props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","other","_objectWithoutProperties","themeVariantsClasses","useThemeVariants","_extends","clsx","concat","capitalize","ButtonBase","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","fade","palette","text","primary","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","buttoncolor","pallete","useStyles","makeStyles","info","success","warning","error","buttonstar","position","bottom","spacing","right","light","button1","button2","button3","button4","DifficultyButtons","board","setDifficulty","Difficulty","ResetBoard","n","newboard","SudokuResolver","RestoreBoard","CloneBoard","onClick"],"mappings":"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","file":"static/js/9.7d14428c.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    color: color,\n    component: component,\n    disabled: disabled,\n    disableElevation: disableElevation,\n    disableFocusRipple: disableFocusRipple,\n    fullWidth: fullWidth,\n    size: size,\n    type: type,\n    variant: variant\n  }), 'MuiButton');\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, color === 'inherit' ? classes.colorInherit : classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\nimport SudokuResolver from \"../../logic/SudokuResolver\";\r\n\r\nconst buttoncolor = (pallete, getContrastText) => {\r\n    return {\r\n        backgroundColor: pallete.main,\r\n        color: getContrastText(pallete.main),\r\n        border: \"none\",\r\n        '&:hover': {\r\n            backgroundColor: pallete.dark,\r\n            color: getContrastText(pallete.dark),\r\n            border: \"none\",\r\n        },\r\n    }\r\n}\r\nconst useStyles = makeStyles((theme) => {\r\n    const { info, success, warning, error, getContrastText } = theme.palette;\r\n    return {\r\n        buttonstar: {\r\n            position: \"absolute\",\r\n            bottom: theme.spacing(0.25),\r\n            right: theme.spacing(0.25),\r\n            fontSize: \"0.75rem\",\r\n            borderRadius: \"100%\",\r\n            backgroundColor: \"white\",\r\n            color: warning.light\r\n        },\r\n        button1: buttoncolor(info, getContrastText),\r\n        button2: buttoncolor(success, getContrastText),\r\n        button3: buttoncolor(warning, getContrastText),\r\n        button4: buttoncolor(error, getContrastText)\r\n    }\r\n});\r\n\r\nconst DifficultyButtons = (props) => {\r\n    const { board, setDifficulty, Difficulty } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    function ResetBoard(n) {\r\n        const newboard = new SudokuResolver(n);\r\n        setDifficulty(n);\r\n        board.RestoreBoard(newboard.CloneBoard());\r\n    }\r\n\r\n\r\n    return <ButtonGroup size=\"small\">\r\n        <Button className={classes.button1} onClick={() => ResetBoard(63)}>\r\n            <EmojiEmotionsIcon />\r\n            {Difficulty === 63 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n        <Button className={classes.button2} onClick={() => ResetBoard(45)}>\r\n            <InsertEmoticonIcon />\r\n            {Difficulty === 45 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n        <Button className={classes.button3} onClick={() => ResetBoard(36)}>\r\n            <FaceIcon />\r\n            {Difficulty === 36 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n        <Button className={classes.button4} onClick={() => ResetBoard(27)}>\r\n            <MoodBadIcon />\r\n            {Difficulty === 27 ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n        </Button>\r\n    </ButtonGroup>\r\n}\r\n\r\n\r\nexport default DifficultyButtons;"],"sourceRoot":""}