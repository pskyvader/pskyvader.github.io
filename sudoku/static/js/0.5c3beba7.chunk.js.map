{"version":3,"sources":["../node_modules/@material-ui/core/Grow/Grow.js","../node_modules/@material-ui/core/Tooltip/Tooltip.js"],"names":["getScale","value","styles","entering","opacity","transform","entered","Grow","React","props","ref","appear","children","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent","Transition","other","_objectWithoutPropertiesLoose","timer","autoTimeout","theme","useTheme","nodeRef","foreignRef","useForkRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","undefined","handleEntering","handleEnter","isAppearing","reflow","duration","getTransitionProps","mode","transitionDuration","delay","transitions","getAutoHeightDuration","clientHeight","transition","create","join","handleEntered","handleExiting","handleExit","handleExited","clearTimeout","_extends","addEndListener","next","setTimeout","state","childProps","visibility","muiSupportAuto","hystersisOpen","hystersisTimer","composeEventHandler","handler","eventHandler","event","Tooltip","arrow","classes","describeChild","disableFocusListener","disableHoverListener","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","idProp","id","disableInteractive","disableInteractiveProp","leaveDelay","leaveTouchDelay","onClose","onOpen","openProp","open","placement","PopperComponent","Popper","PopperProps","title","TransitionProps","childNode","setChildNode","arrowRef","setArrowRef","ignoreNonTouchEvents","closeTimer","enterTimer","leaveTimer","touchTimer","useControlled","controlled","default","name","openState","setOpenState","useId","prevUserSelect","stopTouchInteraction","document","body","WebkitUserSelect","handleOpen","handleClose","useEventCallback","shortest","type","removeAttribute","persist","handleLeave","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","onBlur","handleFocusVisible","onFocus","focusVisibleRef","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","detectTouchStart","childrenProps","onTouchStart","handleMouseOver","handleMouseLeave","addEventListener","handleKeyDown","removeEventListener","nativeEvent","key","handleUseRef","handleFocusRef","positionRef","x","y","popperRef","nameOrDescProps","titleIsString","className","clsx","onMouseMove","clientX","clientY","update","interactiveWrapperListeners","onTouchEnd","onMouseOver","onMouseLeave","popperOptions","_PopperProps$popperOp","tooltipModifiers","enabled","Boolean","options","element","padding","modifiers","concat","popper","popperInteractive","popperArrow","anchorEl","getBoundingClientRect","top","left","right","bottom","width","height","placementInner","TransitionPropsInner","shorter","tooltip","capitalize","split","touch","tooltipArrow","withStyles","zIndex","pointerEvents","marginTop","transformOrigin","marginBottom","marginLeft","marginRight","backgroundColor","alpha","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","fontSize","pxToRem","maxWidth","margin","wordWrap","fontWeight","fontWeightMedium","position","overflow","boxSizing","content","display","lineHeight","Math","round","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","flip"],"mappings":"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","file":"static/js/0.5c3beba7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\n\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  const {\n    appear = true,\n    children,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = 'auto',\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"appear\", \"children\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const timer = React.useRef();\n  const autoTimeout = React.useRef();\n  const theme = useTheme();\n  const nodeRef = React.useRef(null);\n  const foreignRef = useForkRef(children.ref, ref);\n  const handleRef = useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[data-popper-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[data-popper-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[data-popper-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[data-popper-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none' // disable jss-rtl plugin\n\n  },\n\n  /* Styles applied to the Popper component unless `disableInteractive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: alpha(theme.palette.grey[700], 0.92),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(11),\n    maxWidth: 300,\n    margin: 2,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: 0\n  },\n\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */\n    ,\n    boxSizing: 'border-box',\n    color: alpha(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    marginRight: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: '14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    marginLeft: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: '14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    marginBottom: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginBottom: '14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    marginTop: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginTop: '14px'\n    }\n  }\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    disableInteractive: disableInteractiveProp = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps = {},\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"disableInteractive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = React.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n\n    clearTimeout(touchTimer.current);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose && open) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    event.persist();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps['title'] = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const popperOptions = React.useMemo(() => {\n    var _PopperProps$popperOp;\n\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) !== null && _PopperProps$popperOp !== void 0 && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n\n    return _extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, !disableInteractive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: followCursor ? {\n      getBoundingClientRect: () => ({\n        top: positionRef.current.y,\n        left: positionRef.current.x,\n        right: positionRef.current.x,\n        bottom: positionRef.current.y,\n        width: 0,\n        height: 0\n      })\n    } : childNode,\n    popperRef: popperRef,\n    open: childNode ? open : false,\n    id: id,\n    transition: true\n  }, interactiveWrapperListeners, PopperProps, {\n    popperOptions: popperOptions\n  }), ({\n    placement: placementInner,\n    TransitionProps: TransitionPropsInner\n  }) => /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    timeout: theme.transitions.duration.shorter\n  }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tooltip, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n  }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.arrow,\n    ref: setArrowRef\n  }) : null))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n\n  /**\n   * Do not respond to focus events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   * @default {}\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);"],"sourceRoot":""}