{"version":3,"sources":["../node_modules/@material-ui/core/Button/Button.js","components/buttons/DifficultyButtons.jsx"],"names":["Button","React","props","ref","children","classes","className","color","component","disabled","disableElevation","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","fullWidth","size","startIconProp","startIcon","type","variant","other","_objectWithoutPropertiesLoose","themeVariantsClasses","useThemeVariants","_extends","clsx","capitalize","ButtonBase","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","minWidth","padding","borderRadius","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","alpha","palette","text","primary","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","mode","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","buttoncolor","pallete","useStyles","makeStyles","info","success","warning","error","buttonstar","position","bottom","spacing","right","light","button1","button2","button3","button4","menu","selected","DifficultyButtons","useContext","BoardContext","Difficulty","ResetBoard","ResetTimer","TimerContext","Reset","number","difficultylist","Text","class","icon","EmojiEmotionsIcon","InsertEmoticonIcon","FaceIcon","MoodBadIcon","useState","anchorEl","setAnchorEl","currentDifficulty","Fragment","smDown","map","e","title","onClick","smUp","aria-controls","aria-haspopup","event","currentTarget","id","open","Boolean","onClose","list","placement","edge","disableRipple","checked"],"mappings":"mGAAA,+EAwRMA,EAAsBC,cAAiB,SAAgBC,EAAOC,GAAK,IAErEC,EAeEF,EAfFE,SACAC,EAcEH,EAdFG,QACAC,EAaEJ,EAbFI,UAJqE,EAiBnEJ,EAZFK,aALqE,MAK7D,UAL6D,IAiBnEL,EAXFM,iBANqE,MAMzD,SANyD,IAiBnEN,EAVFO,gBAPqE,WAiBnEP,EATFQ,wBARqE,WAiBnER,EARFS,0BATqE,SAU5DC,EAOPV,EAPFW,QACAC,EAMEZ,EANFY,sBAXqE,EAiBnEZ,EALFa,iBAZqE,WAiBnEb,EAJFc,YAbqE,MAa9D,SAb8D,EAc1DC,EAGTf,EAHFgB,UACAC,EAEEjB,EAFFiB,KAfqE,EAiBnEjB,EADFkB,eAhBqE,MAgB3D,OAhB2D,EAkBjEC,EAAQC,YAA8BpB,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,mBAAoB,qBAAsB,UAAW,wBAAyB,YAAa,OAAQ,YAAa,OAAQ,YAE5OqB,EAAuBC,YAAiBC,YAAS,GAAIvB,EAAO,CAChEK,QACAC,YACAC,WACAC,mBACAC,qBACAI,YACAC,OACAG,OACAC,YACE,aACEF,EAAYD,GAA8BhB,gBAAoB,OAAQ,CAC1EK,UAAWoB,YAAKrB,EAAQa,UAAWb,EAAQ,WAAD,OAAYsB,YAAWX,OAChEC,GACGJ,EAAUD,GAA4BX,gBAAoB,OAAQ,CACtEK,UAAWoB,YAAKrB,EAAQQ,QAASR,EAAQ,WAAD,OAAYsB,YAAWX,OAC9DJ,GACH,OAAoBX,gBAAoB2B,IAAYH,YAAS,CAC3DnB,UAAWoB,YAAKrB,EAAQwB,KAAMxB,EAAQe,GAAUG,EAAsBjB,EAAqB,YAAVC,EAAsBF,EAAQyB,aAAezB,EAAQ,GAAD,OAAIe,GAAJ,OAAcO,YAAWpB,KAAoB,WAATS,GAAqB,CAACX,EAAQ,GAAD,OAAIe,EAAJ,eAAkBO,YAAWX,KAAUX,EAAQ,OAAD,OAAQsB,YAAWX,MAAWN,GAAoBL,EAAQK,iBAAkBD,GAAYJ,EAAQI,SAAUM,GAAaV,EAAQU,WACnXP,UAAWA,EACXC,SAAUA,EACVsB,aAAcpB,EACdG,sBAAuBY,YAAKrB,EAAQ2B,aAAclB,GAClDX,IAAKA,EACLgB,KAAMA,GACLE,GAAqBpB,gBAAoB,OAAQ,CAClDK,UAAWD,EAAQ4B,OAClBf,EAAWd,EAAUS,OA6GXqB,iBA1aO,SAAAC,GAAK,MAAK,CAE9BN,KAAMJ,YAAS,GAAIU,EAAMC,WAAWC,OAAQ,CAC1CC,SAAU,GACVC,QAAS,WACTC,aAAcL,EAAMM,MAAMD,aAC1BE,WAAYP,EAAMQ,YAAYC,OAAO,CAAC,mBAAoB,aAAc,eAAgB,SAAU,CAChGC,SAAUV,EAAMQ,YAAYE,SAASC,QAEvC,UAAW,CACTC,eAAgB,OAChBC,gBAAiBC,YAAMd,EAAMe,QAAQC,KAAKC,QAASjB,EAAMe,QAAQG,OAAOC,cAExE,uBAAwB,CACtBN,gBAAiB,gBAGrB,aAAc,CACZzC,MAAO4B,EAAMe,QAAQG,OAAO5C,YAKhCwB,MAAO,CACLsB,MAAO,OAEPC,QAAS,UACTC,WAAY,UACZC,eAAgB,WAIlBP,KAAM,CACJZ,QAAS,WAIXoB,YAAa,CACXpD,MAAO4B,EAAMe,QAAQE,QAAQQ,KAC7B,UAAW,CACTZ,gBAAiBC,YAAMd,EAAMe,QAAQE,QAAQQ,KAAMzB,EAAMe,QAAQG,OAAOC,cAExE,uBAAwB,CACtBN,gBAAiB,iBAMvBa,cAAe,CACbtD,MAAO4B,EAAMe,QAAQY,UAAUF,KAC/B,UAAW,CACTZ,gBAAiBC,YAAMd,EAAMe,QAAQY,UAAUF,KAAMzB,EAAMe,QAAQG,OAAOC,cAE1E,uBAAwB,CACtBN,gBAAiB,iBAMvBe,SAAU,CACRxB,QAAS,WACTyB,OAAQ,aAAF,OAAsC,UAAvB7B,EAAMe,QAAQe,KAAmB,sBAAwB,6BAC9E,aAAc,CACZD,OAAQ,aAAF,OAAe7B,EAAMe,QAAQG,OAAOa,sBAK9CC,gBAAiB,CACf5D,MAAO4B,EAAMe,QAAQE,QAAQQ,KAC7BI,OAAQ,aAAF,OAAef,YAAMd,EAAMe,QAAQE,QAAQQ,KAAM,KACvD,UAAW,CACTI,OAAQ,aAAF,OAAe7B,EAAMe,QAAQE,QAAQQ,MAC3CZ,gBAAiBC,YAAMd,EAAMe,QAAQE,QAAQQ,KAAMzB,EAAMe,QAAQG,OAAOC,cAExE,uBAAwB,CACtBN,gBAAiB,iBAMvBoB,kBAAmB,CACjB7D,MAAO4B,EAAMe,QAAQY,UAAUF,KAC/BI,OAAQ,aAAF,OAAef,YAAMd,EAAMe,QAAQY,UAAUF,KAAM,KACzD,UAAW,CACTI,OAAQ,aAAF,OAAe7B,EAAMe,QAAQY,UAAUF,MAC7CZ,gBAAiBC,YAAMd,EAAMe,QAAQY,UAAUF,KAAMzB,EAAMe,QAAQG,OAAOC,cAE1E,uBAAwB,CACtBN,gBAAiB,gBAGrB,aAAc,CACZgB,OAAQ,aAAF,OAAe7B,EAAMe,QAAQG,OAAO5C,YAK9C4D,UAAW,CACT9D,MAAO4B,EAAMe,QAAQoB,gBAAgBnC,EAAMe,QAAQqB,KAAK,MACxDvB,gBAAiBb,EAAMe,QAAQqB,KAAK,KACpCC,UAAWrC,EAAMsC,QAAQ,GACzB,UAAW,CACTzB,gBAAiBb,EAAMe,QAAQqB,KAAKG,KACpCF,UAAWrC,EAAMsC,QAAQ,GAEzB,uBAAwB,CACtBD,UAAWrC,EAAMsC,QAAQ,GACzBzB,gBAAiBb,EAAMe,QAAQqB,KAAK,OAGxC,iBAAkB,CAChBC,UAAWrC,EAAMsC,QAAQ,IAE3B,WAAY,CACVD,UAAWrC,EAAMsC,QAAQ,IAE3B,aAAc,CACZlE,MAAO4B,EAAMe,QAAQG,OAAO5C,SAC5B+D,UAAWrC,EAAMsC,QAAQ,GACzBzB,gBAAiBb,EAAMe,QAAQG,OAAOa,qBAK1CS,iBAAkB,CAChBpE,MAAO4B,EAAMe,QAAQE,QAAQwB,aAC7B5B,gBAAiBb,EAAMe,QAAQE,QAAQQ,KACvC,UAAW,CACTZ,gBAAiBb,EAAMe,QAAQE,QAAQyB,KAEvC,uBAAwB,CACtB7B,gBAAiBb,EAAMe,QAAQE,QAAQQ,QAM7CkB,mBAAoB,CAClBvE,MAAO4B,EAAMe,QAAQY,UAAUc,aAC/B5B,gBAAiBb,EAAMe,QAAQY,UAAUF,KACzC,UAAW,CACTZ,gBAAiBb,EAAMe,QAAQY,UAAUe,KAEzC,uBAAwB,CACtB7B,gBAAiBb,EAAMe,QAAQY,UAAUF,QAM/ClD,iBAAkB,CAChB8D,UAAW,OACX,UAAW,CACTA,UAAW,QAEb,iBAAkB,CAChBA,UAAW,QAEb,WAAY,CACVA,UAAW,QAEb,aAAc,CACZA,UAAW,SAKfxC,aAAc,GAGdvB,SAAU,GAGVqB,aAAc,CACZvB,MAAO,UACPwE,YAAa,gBAIfC,cAAe,CACbzC,QAAS,UACT0C,SAAU9C,EAAMC,WAAW8C,QAAQ,KAIrCC,cAAe,CACb5C,QAAS,WACT0C,SAAU9C,EAAMC,WAAW8C,QAAQ,KAIrCE,kBAAmB,CACjB7C,QAAS,UACT0C,SAAU9C,EAAMC,WAAW8C,QAAQ,KAIrCG,kBAAmB,CACjB9C,QAAS,WACT0C,SAAU9C,EAAMC,WAAW8C,QAAQ,KAIrCI,mBAAoB,CAClB/C,QAAS,WACT0C,SAAU9C,EAAMC,WAAW8C,QAAQ,KAIrCK,mBAAoB,CAClBhD,QAAS,WACT0C,SAAU9C,EAAMC,WAAW8C,QAAQ,KAIrCM,UAAW,GAGXC,UAAW,GAGX1E,UAAW,CACTwC,MAAO,QAITrC,UAAW,CACTsC,QAAS,UACTkC,YAAa,EACbC,YAAa,EACb,kBAAmB,CACjBA,YAAa,IAKjB9E,QAAS,CACP2C,QAAS,UACTkC,aAAc,EACdC,WAAY,EACZ,kBAAmB,CACjBD,aAAc,IAKlBE,cAAe,CACb,oBAAqB,CACnBX,SAAU,KAKdY,eAAgB,CACd,oBAAqB,CACnBZ,SAAU,KAKda,cAAe,CACb,oBAAqB,CACnBb,SAAU,QAgKkB,CAChCc,KAAM,aADO7D,CAEZlC,I,wSC3ZGgG,EAAc,SAACC,EAAS3B,EAAiBhC,GAC3C,MAAO,CACHA,SAAUA,EACVU,gBAAiBiD,EAAQrC,KACzBrD,MAAO+D,EAAgB2B,EAAQrC,MAC/BI,OAAQ,OACR,UAAW,CACPhB,gBAAiBiD,EAAQpB,KACzBtE,MAAO+D,EAAgB2B,EAAQpB,MAC/Bb,OAAQ,QAEZ,aAAc,CACVhB,gBAAiBiD,EAAQpB,KACzBtE,MAAO+D,EAAgB2B,EAAQpB,MAC/B,UAAW,CACP7B,gBAAiBiD,EAAQrC,KACzBrD,MAAO+D,EAAgB2B,EAAQrC,UAKzCsC,EAAYC,aAAW,SAAChE,GAAW,IAAD,EACuBA,EAAMe,QAAzDkD,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,QAASC,EADa,EACbA,QAASC,EADI,EACJA,MAAOjC,EADH,EACGA,gBACvC,MAAO,CACHkC,WAAY,CACRC,SAAU,WACVC,OAAQvE,EAAMwE,QAAQ,KACtBC,MAAOzE,EAAMwE,QAAQ,KACrB1B,SAAU,UACVzC,aAAc,OACdQ,gBAAiB,QACjBzC,MAAO+F,EAAQO,OAEnBC,QAASd,EAAYI,EAAM9B,EAAiBnC,EAAMwE,QAAQ,IAC1DI,QAASf,EAAYK,EAAS/B,EAAiBnC,EAAMwE,QAAQ,IAC7DK,QAAShB,EAAYM,EAAShC,EAAiBnC,EAAMwE,QAAQ,IAC7DM,QAASjB,EAAYO,EAAOjC,EAAiBnC,EAAMwE,QAAQ,IAC3DO,KAAK,CACD3E,QAAQJ,EAAMwE,QAAQ,KAE1BQ,SAAU,OAwGHC,UApGW,SAAClH,GACvB,IAAMG,EAAU6F,IADiB,EAELhG,EAApB+D,YAFyB,MAElB,SAFkB,IAGEoD,qBAAWC,KAAtCC,EAHyB,EAGzBA,WAAYC,EAHa,EAGbA,WACZC,EAAeJ,qBAAWK,KAA1BD,WAEFE,EAAQ,SAACC,GACXJ,EAAWI,GACXH,KAIEI,EAAiB,CACnB,CAAED,OAAQ,EAAGzE,KAAM2E,YAAK,gBAAiBC,MAAO1H,EAAQyG,QAASkB,KAAMC,KACvE,CAAEL,OAAQ,EAAGzE,KAAM2E,YAAK,YAAaC,MAAO1H,EAAQ0G,QAASiB,KAAME,KACnE,CAAEN,OAAQ,EAAGzE,KAAM2E,YAAK,cAAeC,MAAO1H,EAAQ2G,QAASgB,KAAMG,KACrE,CAAEP,OAAQ,EAAGzE,KAAM2E,YAAK,YAAaC,MAAO1H,EAAQ4G,QAASe,KAAMI,MAhBtC,EAmBDnI,IAAMoI,SAAS,MAnBd,mBAmB1BC,EAnB0B,KAmBhBC,EAnBgB,KAoC3BC,EAAoBX,EAAeN,EAAa,GAEtD,MAAa,WAATtD,EACO,eAAC,IAAMwE,SAAP,WACH,cAAC,IAAD,CAAQC,QAAM,EAAd,SACI,cAAC,IAAD,CAAa1H,KAAK,QAAlB,SACK6G,EAAec,KAAI,SAACC,GAAD,OAChB,cAAC,IAAD,CAAsBC,MAAOD,EAAEzF,KAA/B,SACI,eAAC,IAAD,CAAQ7C,UAAWsI,EAAEb,MAAOe,QAAS,kBAAMnB,EAAMiB,EAAEhB,SAAnD,UACI,cAACgB,EAAEZ,KAAH,IACCT,IAAeqB,EAAEhB,OAAS,cAAC,IAAD,CAAWtH,UAAWD,EAAQmG,aAAiB,OAHpEoC,EAAEzF,aAS5B,eAAC,IAAD,CAAQ4F,MAAI,EAAZ,UACI,cAAC,IAAD,CAASF,MAAOf,YAAK,cAArB,SACI,cAAC,IAAD,CAAQ9G,KAAK,QAAQgI,gBAAc,cAAcC,gBAAc,OAAOH,QAlClE,SAACI,GACjBX,EAAYW,EAAMC,gBAiCsF7I,UAAWkI,EAAkBT,MAAzH,SACI,cAACS,EAAkBR,KAAnB,QAGR,cAAC,IAAD,CACIoB,GAAG,cACHd,SAAUA,EACVe,KAAMC,QAAQhB,GACdiB,QAvCI,WAChBhB,EAAY,OAuCAlI,QAAS,CAACmJ,KAAKnJ,EAAQ6G,MAL3B,SAOKW,EAAec,KAAI,SAACC,GAAD,OAChB,cAAC,IAAD,CAAUvI,QAAS,CAAEwB,KAAM+G,EAAEb,MAAOZ,SAAU9G,EAAQ8G,UAA0BA,SAAUI,IAAeqB,EAAEhB,OAAQkB,QAAS,SAACI,GAAD,OAtChHE,EAsCsJR,EAAEhB,OArCpLD,EAAMyB,QACNb,EAAY,MAFY,IAAIa,GAsCZ,SACI,cAAC,IAAD,CAAsBP,MAAOD,EAAEzF,KAAMsG,UAAU,OAA/C,SACI,gCACI,cAACb,EAAEZ,KAAH,IACCT,IAAeqB,EAAEhB,OAAS,cAAC,IAAD,CAAWtH,UAAWD,EAAQmG,aAAiB,OAHpEoC,EAAEzF,OADoDyF,EAAEzF,iBAgBnF,cAAC,IAAD,UACF0E,EAAec,KAAI,SAACC,GAAD,OAChB,eAAC,IAAD,CAAUvG,QAAM,EAAcyG,QAAS,kBAAMnB,EAAMiB,EAAEhB,SAAST,SAAUI,IAAeqB,EAAEhB,OAAzF,UACI,eAAC,IAAD,eAAe,cAACgB,EAAEZ,KAAH,OACf,cAAC,IAAD,CAAc5E,QAASwF,EAAEzF,OACzB,cAAC,IAAD,CACIuG,KAAK,MACL1I,KAAK,QACL2I,eAAa,EAACC,QAASrC,IAAeqB,EAAEhB,WAN1BgB,EAAEzF","file":"static/js/21.57680a26.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    padding: '6px 8px'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n  textPrimary: {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n  textSecondary: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {\n    padding: '5px 15px',\n    border: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n  outlinedPrimary: {\n    color: theme.palette.primary.main,\n    border: `1px solid ${alpha(theme.palette.primary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.primary.main}`,\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n  outlinedSecondary: {\n    color: theme.palette.secondary.main,\n    border: `1px solid ${alpha(theme.palette.secondary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.secondary.main}`,\n      backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabled}`\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"`. */\n  contained: {\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    boxShadow: theme.shadows[2],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      boxShadow: theme.shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: theme.shadows[2],\n        backgroundColor: theme.palette.grey[300]\n      }\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[8]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n  containedPrimary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n  containedSecondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `disableElevation={true}`. */\n  disableElevation: {\n    boxShadow: 'none',\n    '&:hover': {\n      boxShadow: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none'\n    },\n    '&$disabled': {\n      boxShadow: 'none'\n    }\n  },\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n  textSizeSmall: {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n  textSizeLarge: {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n  outlinedSizeSmall: {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n  outlinedSizeLarge: {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n  containedSizeSmall: {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n  containedSizeLarge: {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {},\n\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {},\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  },\n\n  /* Styles applied to the startIcon element if supplied. */\n  startIcon: {\n    display: 'inherit',\n    marginRight: 8,\n    marginLeft: -4,\n    '&$iconSizeSmall': {\n      marginLeft: -2\n    }\n  },\n\n  /* Styles applied to the endIcon element if supplied. */\n  endIcon: {\n    display: 'inherit',\n    marginRight: -4,\n    marginLeft: 8,\n    '&$iconSizeSmall': {\n      marginRight: -2\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n  iconSizeSmall: {\n    '& > *:first-child': {\n      fontSize: 18\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n  iconSizeMedium: {\n    '& > *:first-child': {\n      fontSize: 20\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n  iconSizeLarge: {\n    '& > *:first-child': {\n      fontSize: 22\n    }\n  }\n});\nconst Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'primary',\n    component = 'button',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type,\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  }), 'MuiButton');\n  const startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[`iconSize${capitalize(size)}`])\n  }, startIconProp);\n  const endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[`iconSize${capitalize(size)}`])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, color === 'inherit' ? classes.colorInherit : classes[`${variant}${capitalize(color)}`], size !== 'medium' && [classes[`${variant}Size${capitalize(size)}`], classes[`size${capitalize(size)}`]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\n\r\nimport Text from '../../languages/Language';\r\n\r\nimport { BoardContext } from '../../ContextProviders/BoardContext';\r\nimport { TimerContext } from '../../ContextProviders/TimerContext';\r\n\r\nconst buttoncolor = (pallete, getContrastText, minWidth) => {\r\n    return {\r\n        minWidth: minWidth,\r\n        backgroundColor: pallete.main,\r\n        color: getContrastText(pallete.main),\r\n        border: \"none\",\r\n        '&:hover': {\r\n            backgroundColor: pallete.dark,\r\n            color: getContrastText(pallete.dark),\r\n            border: \"none\",\r\n        },\r\n        '&$selected': {\r\n            backgroundColor: pallete.dark,\r\n            color: getContrastText(pallete.dark),\r\n            '&:hover': {\r\n                backgroundColor: pallete.main,\r\n                color: getContrastText(pallete.main),\r\n            },\r\n        },\r\n    }\r\n}\r\nconst useStyles = makeStyles((theme) => {\r\n    const { info, success, warning, error, getContrastText } = theme.palette;\r\n    return {\r\n        buttonstar: {\r\n            position: \"absolute\",\r\n            bottom: theme.spacing(0.25),\r\n            right: theme.spacing(0.25),\r\n            fontSize: \"0.75rem\",\r\n            borderRadius: \"100%\",\r\n            backgroundColor: \"white\",\r\n            color: warning.light,\r\n        },\r\n        button1: buttoncolor(info, getContrastText, theme.spacing(5)),\r\n        button2: buttoncolor(success, getContrastText, theme.spacing(5)),\r\n        button3: buttoncolor(warning, getContrastText, theme.spacing(5)),\r\n        button4: buttoncolor(error, getContrastText, theme.spacing(5)),\r\n        menu:{\r\n            padding:theme.spacing(0.5)\r\n        },\r\n        selected: {}\r\n    }\r\n});\r\n\r\nconst DifficultyButtons = (props) => {\r\n    const classes = useStyles();\r\n    const { mode = \"button\" } = props;\r\n    const { Difficulty, ResetBoard } = useContext(BoardContext);\r\n    const { ResetTimer } = useContext(TimerContext);\r\n\r\n    const Reset = (number) => {\r\n        ResetBoard(number);\r\n        ResetTimer();\r\n    }\r\n\r\n\r\n    const difficultylist = [\r\n        { number: 1, text: Text('veryeasymode'), class: classes.button1, icon: EmojiEmotionsIcon },\r\n        { number: 2, text: Text('easymode'), class: classes.button2, icon: InsertEmoticonIcon },\r\n        { number: 3, text: Text('mediummode'), class: classes.button3, icon: FaceIcon },\r\n        { number: 4, text: Text('hardmode'), class: classes.button4, icon: MoodBadIcon }\r\n    ]\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // set selected language by calling context method\r\n    const handleMenuItemClick = (e, id) => {\r\n        Reset(id);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n\r\n\r\n\r\n    const currentDifficulty = difficultylist[Difficulty - 1];\r\n\r\n    if (mode === \"button\") {\r\n        return <React.Fragment>\r\n            <Hidden smDown>\r\n                <ButtonGroup size=\"small\">\r\n                    {difficultylist.map((e) => (\r\n                        <Tooltip key={e.text} title={e.text}>\r\n                            <Button className={e.class} onClick={() => Reset(e.number)}>\r\n                                <e.icon />\r\n                                {Difficulty === e.number ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n                <Tooltip title={Text('difficulty')}>\r\n                    <Button size=\"small\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} className={currentDifficulty.class}>\r\n                        <currentDifficulty.icon />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose} \r\n                    classes={{list:classes.menu}}>\r\n\r\n                    {difficultylist.map((e) => (\r\n                        <MenuItem classes={{ root: e.class, selected: classes.selected, }} key={e.text} selected={Difficulty === e.number} onClick={(event) => handleMenuItemClick(event, e.number)}>\r\n                            <Tooltip key={e.text} title={e.text} placement=\"left\">\r\n                                <div>\r\n                                    <e.icon />\r\n                                    {Difficulty === e.number ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n                                    </div>\r\n                            </Tooltip>\r\n                        </MenuItem>\r\n                    ))}\r\n\r\n                </Menu>\r\n            </Hidden>\r\n        </React.Fragment>\r\n\r\n\r\n    } else {\r\n        return <List>\r\n            {difficultylist.map((e) => (\r\n                <ListItem button key={e.text} onClick={() => Reset(e.number)} selected={Difficulty === e.number}>\r\n                    <ListItemIcon> <e.icon /></ListItemIcon>\r\n                    <ListItemText primary={e.text} />\r\n                    <Radio\r\n                        edge=\"end\"\r\n                        size=\"small\"\r\n                        disableRipple checked={Difficulty === e.number} />\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DifficultyButtons;"],"sourceRoot":""}