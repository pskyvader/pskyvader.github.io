{"version":3,"sources":["../node_modules/@material-ui/core/esm/transitions/utils.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Grow/Grow.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["reflow","node","scrollTop","getTransitionProps","props","options","timeout","_props$style","style","duration","transitionDuration","mode","delay","transitionDelay","useFormControl","React","FormControlContext","Transition","_React$Component","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","SwitchBase","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","getScale","concat","Math","pow","styles","entering","transform","entered","Grow","inProp","_props$timeout","_props$TransitionComp","TransitionComponent","timer","autoTimeout","theme","useTheme","foreignRef","useForkRef","handleRef","normalizedTransitionCallback","maybeIsAppearing","handleEntering","handleEnter","isAppearing","_getTransitionProps","transitions","getAutoHeightDuration","clientHeight","transition","create","join","handleEntered","handleExiting","handleExit","_getTransitionProps2","handleExited","clearTimeout","next","visibility","muiSupportAuto","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","mountedRef","syntheticEventRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientY","clickedRootScrollbar","composedPath","indexOf","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","Switch","_props$color","color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","capitalize","switchBase","track","display","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","marginLeft","marginRight","palette","grey","shortest","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius"],"mappings":"mGAAA,oEAAO,IAAIA,EAAS,SAAgBC,GAClC,OAAOA,EAAKC,WAEP,SAASC,EAAmBC,EAAOC,GACxC,IAAIC,EAAUF,EAAME,QAChBC,EAAeH,EAAMI,MACrBA,OAAyB,IAAjBD,EAA0B,GAAKA,EAC3C,MAAO,CACLE,SAAUD,EAAME,oBAAyC,kBAAZJ,EAAuBA,EAAUA,EAAQD,EAAQM,OAAS,EACvGC,MAAOJ,EAAMK,mB,iCCTjB,sDAEe,SAASC,IACtB,OAAOC,aAAiBC,O,iCCH1B,6CAKIA,EAAkCD,kBAM/B,SAASD,IACd,OAAOC,aAAiBC,GAEXA,O,6FCdA,GACH,E,QCwGRC,EAA0B,SAAUC,GAGtC,SAASD,EAAWb,EAAOe,GACzB,IAAIC,EAEJA,EAAQF,EAAiBG,KAAKC,KAAMlB,EAAOe,IAAYG,KACvD,IAGIC,EADAC,EAFcL,MAEuBM,WAAarB,EAAMsB,MAAQtB,EAAMoB,OAuB1E,OArBAJ,EAAMO,aAAe,KAEjBvB,EAAMwB,GACJJ,GACFD,EA/GY,SAgHZH,EAAMO,aA/GQ,YAiHdJ,EAhHa,UAoHbA,EADEnB,EAAMyB,eAAiBzB,EAAM0B,aAtHhB,YACH,SA4HhBV,EAAMW,MAAQ,CACZC,OAAQT,GAEVH,EAAMa,aAAe,KACdb,EA/BTc,YAAejB,EAAYC,GAkC3BD,EAAWkB,yBAA2B,SAAkCC,EAAMC,GAG5E,OAFaD,EAAKR,IArIC,cAuILS,EAAUL,OACf,CACLA,OAxIY,UA4IT,MAmBT,IAAIM,EAASrB,EAAWsB,UA0OxB,OAxOAD,EAAOE,kBAAoB,WACzBlB,KAAKmB,cAAa,EAAMnB,KAAKK,eAG/BW,EAAOI,mBAAqB,SAA4BC,GACtD,IAAIC,EAAa,KAEjB,GAAID,IAAcrB,KAAKlB,MAAO,CAC5B,IAAI4B,EAASV,KAAKS,MAAMC,OAEpBV,KAAKlB,MAAMwB,GA1KC,aA2KVI,GA1KS,YA0KcA,IACzBY,EA5KY,yBA+KVZ,GA9KS,YA8KcA,IACzBY,EA9KW,WAmLjBtB,KAAKmB,cAAa,EAAOG,IAG3BN,EAAOO,qBAAuB,WAC5BvB,KAAKwB,sBAGPR,EAAOS,YAAc,WACnB,IACIC,EAAMtB,EAAOF,EADblB,EAAUgB,KAAKlB,MAAME,QAWzB,OATA0C,EAAOtB,EAAQF,EAASlB,EAET,MAAXA,GAAsC,kBAAZA,IAC5B0C,EAAO1C,EAAQ0C,KACftB,EAAQpB,EAAQoB,MAEhBF,OAA4ByB,IAAnB3C,EAAQkB,OAAuBlB,EAAQkB,OAASE,GAGpD,CACLsB,KAAMA,EACNtB,MAAOA,EACPF,OAAQA,IAIZc,EAAOG,aAAe,SAAsBS,EAAUN,QACnC,IAAbM,IACFA,GAAW,GAGM,OAAfN,GAEFtB,KAAKwB,qBAtNW,aAwNZF,EACFtB,KAAK6B,aAAaD,GAElB5B,KAAK8B,eAEE9B,KAAKlB,MAAMyB,eA9NN,WA8NuBP,KAAKS,MAAMC,QAChDV,KAAK+B,SAAS,CACZrB,OAjOe,eAsOrBM,EAAOa,aAAe,SAAsBD,GAC1C,IAAII,EAAShC,KAETI,EAAQJ,KAAKlB,MAAMsB,MACnB6B,EAAYjC,KAAKH,QAAUG,KAAKH,QAAQM,WAAayB,EAErDM,EAAQlC,KAAKlB,MAAMqD,QAAU,CAACF,GAAa,CAACG,IAASC,YAAYrC,MAAOiC,GACxEK,EAAYJ,EAAM,GAClBK,EAAiBL,EAAM,GAEvBM,EAAWxC,KAAKyB,cAChBgB,EAAeR,EAAYO,EAAStC,OAASsC,EAASpC,OAGrDwB,IAAaxB,GAASsC,EACzB1C,KAAK2C,aAAa,CAChBjC,OAnPa,YAoPZ,WACDsB,EAAOlD,MAAM8D,UAAUN,OAK3BtC,KAAKlB,MAAM+D,QAAQP,EAAWC,GAC9BvC,KAAK2C,aAAa,CAChBjC,OA7PgB,aA8Pf,WACDsB,EAAOlD,MAAMgE,WAAWR,EAAWC,GAEnCP,EAAOe,gBAAgBN,GAAc,WACnCT,EAAOW,aAAa,CAClBjC,OAlQW,YAmQV,WACDsB,EAAOlD,MAAM8D,UAAUN,EAAWC,cAM1CvB,EAAOc,YAAc,WACnB,IAAIkB,EAAShD,KAET0B,EAAO1B,KAAKlB,MAAM4C,KAClBc,EAAWxC,KAAKyB,cAChBa,EAAYtC,KAAKlB,MAAMqD,aAAUR,EAAYS,IAASC,YAAYrC,MAEjE0B,IAAQgB,GASb1C,KAAKlB,MAAMmE,OAAOX,GAClBtC,KAAK2C,aAAa,CAChBjC,OA3Re,YA4Rd,WACDsC,EAAOlE,MAAMoE,UAAUZ,GAEvBU,EAAOD,gBAAgBP,EAASd,MAAM,WACpCsB,EAAOL,aAAa,CAClBjC,OApSU,WAqST,WACDsC,EAAOlE,MAAMqE,SAASb,aAlB1BtC,KAAK2C,aAAa,CAChBjC,OArRY,WAsRX,WACDsC,EAAOlE,MAAMqE,SAASb,OAqB5BtB,EAAOQ,mBAAqB,WACA,OAAtBxB,KAAKW,eACPX,KAAKW,aAAayC,SAClBpD,KAAKW,aAAe,OAIxBK,EAAO2B,aAAe,SAAsBU,EAAWC,GAIrDA,EAAWtD,KAAKuD,gBAAgBD,GAChCtD,KAAK+B,SAASsB,EAAWC,IAG3BtC,EAAOuC,gBAAkB,SAAyBD,GAChD,IAAIE,EAASxD,KAETyD,GAAS,EAcb,OAZAzD,KAAKW,aAAe,SAAU+C,GACxBD,IACFA,GAAS,EACTD,EAAO7C,aAAe,KACtB2C,EAASI,KAIb1D,KAAKW,aAAayC,OAAS,WACzBK,GAAS,GAGJzD,KAAKW,cAGdK,EAAO+B,gBAAkB,SAAyB/D,EAAS2E,GACzD3D,KAAKuD,gBAAgBI,GACrB,IAAIhF,EAAOqB,KAAKlB,MAAMqD,QAAUnC,KAAKlB,MAAMqD,QAAQyB,QAAUxB,IAASC,YAAYrC,MAC9E6D,EAA0C,MAAX7E,IAAoBgB,KAAKlB,MAAMgF,eAElE,GAAKnF,IAAQkF,EAAb,CAKA,GAAI7D,KAAKlB,MAAMgF,eAAgB,CAC7B,IAAIC,EAAQ/D,KAAKlB,MAAMqD,QAAU,CAACnC,KAAKW,cAAgB,CAAChC,EAAMqB,KAAKW,cAC/D2B,EAAYyB,EAAM,GAClBC,EAAoBD,EAAM,GAE9B/D,KAAKlB,MAAMgF,eAAexB,EAAW0B,GAGxB,MAAXhF,GACFiF,WAAWjE,KAAKW,aAAc3B,QAb9BiF,WAAWjE,KAAKW,aAAc,IAiBlCK,EAAOkD,OAAS,WACd,IAAIxD,EAASV,KAAKS,MAAMC,OAExB,GA1WmB,cA0WfA,EACF,OAAO,KAGT,IAAIyD,EAAcnE,KAAKlB,MACnBsF,EAAWD,EAAYC,SAgBvBC,GAfMF,EAAY7D,GACF6D,EAAY3D,aACX2D,EAAY5D,cACnB4D,EAAYjE,OACbiE,EAAY/D,MACb+D,EAAYzC,KACTyC,EAAYnF,QACLmF,EAAYL,eACnBK,EAAYtB,QACTsB,EAAYrB,WACbqB,EAAYvB,UACfuB,EAAYlB,OACTkB,EAAYjB,UACbiB,EAAYhB,SACbgB,EAAYhC,QACVmC,YAA8BH,EAAa,CAAC,WAAY,KAAM,eAAgB,gBAAiB,SAAU,QAAS,OAAQ,UAAW,iBAAkB,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,aAEjP,OAGE1E,IAAM8E,cAAcC,IAAuBC,SAAU,CACnDC,MAAO,MACc,oBAAbN,EAA0BA,EAAS1D,EAAQ2D,GAAc5E,IAAMkF,aAAalF,IAAMmF,SAASC,KAAKT,GAAWC,KAIlH1E,EAzSqB,CA0S5BF,IAAMqF,WA4LR,SAASC,KA1LTpF,EAAWqF,YAAcR,IACzB7E,EAAWsF,UAuLP,GAIJtF,EAAWuF,aAAe,CACxB5E,IAAI,EACJE,cAAc,EACdD,eAAe,EACfL,QAAQ,EACRE,OAAO,EACPsB,MAAM,EACNmB,QAASkC,EACTjC,WAAYiC,EACZnC,UAAWmC,EACX9B,OAAQ8B,EACR7B,UAAW6B,EACX5B,SAAU4B,GAEZpF,EAAWwF,UAvlBY,YAwlBvBxF,EAAWyF,OAvlBS,SAwlBpBzF,EAAW0F,SAvlBW,WAwlBtB1F,EAAW2F,QAvlBU,UAwlBrB3F,EAAW4F,QAvlBU,UAwlBN5F,O,iCCpmBf,gFAkCI6F,EAA0B/F,cAAiB,SAAoBX,EAAO2G,GACxE,IAAIC,EAAY5G,EAAM4G,UAClBC,EAAc7G,EAAM8G,QACpBC,EAAc/G,EAAM+G,YACpBC,EAAUhH,EAAMgH,QAChBC,EAAYjH,EAAMiH,UAClBC,EAAiBlH,EAAMkH,eACvBC,EAAenH,EAAMoH,SACrBC,EAAOrH,EAAMqH,KACbC,EAAKtH,EAAMsH,GACXC,EAAavH,EAAMuH,WACnBC,EAAWxH,EAAMwH,SACjBC,EAAOzH,EAAMyH,KACbC,EAAS1H,EAAM0H,OACfC,EAAW3H,EAAM2H,SACjBC,EAAU5H,EAAM4H,QAChBC,EAAW7H,EAAM6H,SACjBC,EAAW9H,EAAM8H,SACjBC,EAAW/H,EAAM+H,SACjBC,EAAOhI,EAAMgI,KACbpC,EAAQ5F,EAAM4F,MACdqC,EAAQC,YAAyBlI,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQmI,EAAiBC,YAAc,CACjCC,WAAYxB,EACZyB,QAASC,QAAQrB,GACjBO,KAAM,aACN9F,MAAO,YAEL6G,EAAkBC,YAAeN,EAAgB,GACjDrB,EAAU0B,EAAgB,GAC1BE,EAAkBF,EAAgB,GAElCG,EAAiBjI,cAgCjB0G,EAAWD,EAEXwB,GACsB,qBAAbvB,IACTA,EAAWuB,EAAevB,UAI9B,IAAIwB,EAAuB,aAATZ,GAAgC,UAATA,EACzC,OAAoBrH,gBAAoBkI,IAAYC,YAAS,CAC3DC,UAAW,OACX9B,UAAW+B,YAAKhC,EAAQiC,KAAMhC,EAAWH,GAAWE,EAAQF,QAASM,GAAYJ,EAAQI,UACzFA,SAAUA,EACVW,SAAU,KACVmB,UAAMrG,EACN+E,QA7CgB,SAAqBhD,GACjCgD,GACFA,EAAQhD,GAGN+D,GAAkBA,EAAef,SACnCe,EAAef,QAAQhD,IAwCzB8C,OApCe,SAAoB9C,GAC/B8C,GACFA,EAAO9C,GAGL+D,GAAkBA,EAAejB,QACnCiB,EAAejB,OAAO9C,IA+BxB+B,IAAKA,GACJsB,GAAqBtH,gBAAoB,QAASmI,YAAS,CAC5DlC,UAAWA,EACXE,QAASD,EACTK,eAAgBA,EAChBD,UAAWD,EAAQmC,MACnB/B,SAAUA,EACVE,GAAIsB,GAAetB,EACnBG,KAAMA,EACNE,SApCsB,SAA2B/C,GACjD,IAAIwE,EAAaxE,EAAMyE,OAAOvC,QAC9B4B,EAAgBU,GAEZzB,GAEFA,EAAS/C,EAAOwE,IA+BlBvB,SAAUA,EACVlB,IAAKa,EACLM,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACNpC,MAAOA,GACN2B,IAAcT,EAAUC,EAAcM,MA8G5BiC,gBAvOK,CAClBL,KAAM,CACJM,QAAS,GAEXzC,QAAS,GACTM,SAAU,GACV+B,MAAO,CACLK,OAAQ,UACRC,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRR,QAAS,EACTS,OAAQ,IAuNsB,CAChCvC,KAAM,qBADO6B,CAEZ5C,I,iCCpPH,kEAUA,SAASuD,EAASrE,GAChB,MAAO,SAASsE,OAAOtE,EAAO,MAAMsE,OAAOC,KAAKC,IAAIxE,EAAO,GAAI,KAGjE,IAAIyE,EAAS,CACXC,SAAU,CACRZ,QAAS,EACTa,UAAWN,EAAS,IAEtBO,QAAS,CACPd,QAAS,EACTa,UAAW,SASXE,EAAoB9J,cAAiB,SAAcX,EAAO2G,GAC5D,IAAIrB,EAAWtF,EAAMsF,SACjBoF,EAAS1K,EAAMwB,GACfuC,EAAU/D,EAAM+D,QAChBD,EAAY9D,EAAM8D,UAClBE,EAAahE,EAAMgE,WACnBG,EAASnE,EAAMmE,OACfE,EAAWrE,EAAMqE,SACjBD,EAAYpE,EAAMoE,UAClBhE,EAAQJ,EAAMI,MACduK,EAAiB3K,EAAME,QACvBA,OAA6B,IAAnByK,EAA4B,OAASA,EAC/CC,EAAwB5K,EAAM6K,oBAC9BA,OAAgD,IAA1BD,EAAmC/J,IAAa+J,EACtE3C,EAAQC,YAAyBlI,EAAO,CAAC,WAAY,KAAM,UAAW,YAAa,aAAc,SAAU,WAAY,YAAa,QAAS,UAAW,wBAExJ8K,EAAQnK,WACRoK,EAAcpK,WACdqK,EAAQC,cACR5H,EAAU1C,SAAa,MACvBuK,EAAaC,YAAW7F,EAASqB,IAAKA,GACtCyE,EAAYD,YAAW9H,EAAS6H,GAEhCG,EAA+B,SAAsC7G,GACvE,OAAO,SAAU8G,GACf,GAAI9G,EAAU,CACZ,IAAI3E,EAAOwD,EAAQyB,aAEMjC,IAArByI,EACF9G,EAAS3E,GAET2E,EAAS3E,EAAMyL,MAMnBC,EAAiBF,EAA6BrH,GAC9CwH,EAAcH,GAA6B,SAAUxL,EAAM4L,GAC7D7L,YAAOC,GAEP,IASIQ,EATAqL,EAAsB3L,YAAmB,CAC3CK,MAAOA,EACPF,QAASA,GACR,CACDK,KAAM,UAEJD,EAAqBoL,EAAoBrL,SACzCG,EAAQkL,EAAoBlL,MAIhB,SAAZN,GACFG,EAAW2K,EAAMW,YAAYC,sBAAsB/L,EAAKgM,cACxDd,EAAYjG,QAAUzE,GAEtBA,EAAWC,EAGbT,EAAKO,MAAM0L,WAAa,CAACd,EAAMW,YAAYI,OAAO,UAAW,CAC3D1L,SAAUA,EACVG,MAAOA,IACLwK,EAAMW,YAAYI,OAAO,YAAa,CACxC1L,SAAqB,KAAXA,EACVG,MAAOA,KACLwL,KAAK,KAELjI,GACFA,EAAQlE,EAAM4L,MAGdQ,EAAgBZ,EAA6BvH,GAC7CoI,EAAgBb,EAA6BjH,GAC7C+H,EAAad,GAA6B,SAAUxL,GACtD,IASIQ,EATA+L,EAAuBrM,YAAmB,CAC5CK,MAAOA,EACPF,QAASA,GACR,CACDK,KAAM,SAEJD,EAAqB8L,EAAqB/L,SAC1CG,EAAQ4L,EAAqB5L,MAIjB,SAAZN,GACFG,EAAW2K,EAAMW,YAAYC,sBAAsB/L,EAAKgM,cACxDd,EAAYjG,QAAUzE,GAEtBA,EAAWC,EAGbT,EAAKO,MAAM0L,WAAa,CAACd,EAAMW,YAAYI,OAAO,UAAW,CAC3D1L,SAAUA,EACVG,MAAOA,IACLwK,EAAMW,YAAYI,OAAO,YAAa,CACxC1L,SAAqB,KAAXA,EACVG,MAAOA,GAAoB,KAAXH,KACd2L,KAAK,KACTnM,EAAKO,MAAMsJ,QAAU,IACrB7J,EAAKO,MAAMmK,UAAYN,EAAS,KAE5B9F,GACFA,EAAOtE,MAGPwM,EAAehB,EAA6BhH,GAahD,OALA1D,aAAgB,WACd,OAAO,WACL2L,aAAaxB,EAAMhG,YAEpB,IACiBnE,gBAAoBkK,EAAqB/B,YAAS,CACpE1H,QAAQ,EACRI,GAAIkJ,EACJrH,QAASA,EACTU,QAASyH,EACT1H,UAAWmI,EACXjI,WAAYuH,EACZpH,OAAQgI,EACR9H,SAAUgI,EACVjI,UAAW8H,EACXlH,eArBmB,SAAwBuH,GAC3B,SAAZrM,IACF4K,EAAMhG,QAAUK,WAAWoH,EAAMxB,EAAYjG,SAAW,KAoB1D5E,QAAqB,SAAZA,EAAqB,KAAOA,GACpC+H,IAAQ,SAAUtG,EAAO4D,GAC1B,OAAoB5E,eAAmB2E,EAAUwD,YAAS,CACxD1I,MAAO0I,YAAS,CACdY,QAAS,EACTa,UAAWN,EAAS,KACpBuC,WAAsB,WAAV7K,GAAuB+I,OAAoB7H,EAAX,UAC3CwH,EAAO1I,GAAQvB,EAAOkF,EAAStF,MAAMI,OACxCuG,IAAKyE,GACJ7F,UAmEPkF,EAAKgC,gBAAiB,EACPhC,O,iCC7Of,0CAOA,SAASiC,EAAoBC,GAC3B,OAAOA,EAAUC,UAAU,GAAGC,cAyKjBC,IA7Jf,SAA2B9M,GACzB,IAAIsF,EAAWtF,EAAMsF,SACjByH,EAAwB/M,EAAMgN,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAoBjN,EAAMkN,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDE,EAAcnN,EAAMmN,YACpBC,EAAoBpN,EAAMqN,WAC1BA,OAAmC,IAAtBD,EAA+B,aAAeA,EAC3DE,EAAW3M,UAAa,GACxB0C,EAAU1C,SAAa,MACvB4M,EAAa5M,UAAa,GAC1B6M,EAAoB7M,UAAa,GACrCA,aAAgB,WAEd,OADA4M,EAAWzI,SAAU,EACd,WACLyI,EAAWzI,SAAU,KAEtB,IACH,IAAIsG,EAAYD,YAAW7F,EAASqB,IAAKtD,GAOrCoK,EAAkBC,aAAiB,SAAU9I,GAG/C,IAAI+I,EAAkBH,EAAkB1I,QACxC0I,EAAkB1I,SAAU,EAC5B,IAAI8I,EAAMC,YAAcxK,EAAQyB,SAI3ByI,EAAWzI,SAAYzB,EAAQyB,UA5CxC,SAA8BF,EAAOgJ,GACnC,OAAOA,EAAIE,gBAAgBC,YAAcnJ,EAAMoJ,SAAWJ,EAAIE,gBAAgBjC,aAAejH,EAAMqJ,QA2ClDC,CAAqBtJ,EAAOgJ,KAKvEN,EAASxI,QACXwI,EAASxI,SAAU,GAMjBF,EAAMuJ,aACIvJ,EAAMuJ,eAAeC,QAAQ/K,EAAQyB,UAAY,GAEhD8I,EAAIE,gBAAgBO,SAASzJ,EAAMyE,SAAWhG,EAAQyB,QAAQuJ,SAASzJ,EAAMyE,WAGzE2D,GAAqBW,GACtCR,EAAYvI,OAIZ0J,EAAwB,SAA+BC,GACzD,OAAO,SAAU3J,GACf4I,EAAkB1I,SAAU,EAC5B,IAAI0J,EAAuBlJ,EAAStF,MAAMuO,GAEtCC,GACFA,EAAqB5J,KAKvB6J,EAAgB,CAClB9H,IAAKyE,GA2CP,OAxCmB,IAAfiC,IACFoB,EAAcpB,GAAciB,EAAsBjB,IAGpD1M,aAAgB,WACd,IAAmB,IAAf0M,EAAsB,CACxB,IAAIqB,EAAmBhC,EAAoBW,GACvCO,EAAMC,YAAcxK,EAAQyB,SAE5B6J,EAAkB,WACpBrB,EAASxI,SAAU,GAKrB,OAFA8I,EAAIgB,iBAAiBF,EAAkBjB,GACvCG,EAAIgB,iBAAiB,YAAaD,GAC3B,WACLf,EAAIiB,oBAAoBH,EAAkBjB,GAC1CG,EAAIiB,oBAAoB,YAAaF,OAKxC,CAAClB,EAAiBJ,KAEF,IAAfH,IACFuB,EAAcvB,GAAcoB,EAAsBpB,IAGpDvM,aAAgB,WACd,IAAmB,IAAfuM,EAAsB,CACxB,IAAI4B,EAAmBpC,EAAoBQ,GACvCU,EAAMC,YAAcxK,EAAQyB,SAEhC,OADA8I,EAAIgB,iBAAiBE,EAAkBrB,GAChC,WACLG,EAAIiB,oBAAoBC,EAAkBrB,OAK7C,CAACA,EAAiBP,IACDvM,gBAAoBA,WAAgB,KAAmBA,eAAmB2E,EAAUmJ,M,iCCrI1G,sEAmKIM,EAAsBpO,cAAiB,SAAgBX,EAAO2G,GAChE,IAAIK,EAAUhH,EAAMgH,QAChBC,EAAYjH,EAAMiH,UAClB+H,EAAehP,EAAMiP,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAclP,EAAMmP,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAcpP,EAAMqP,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CnH,EAAQC,YAAyBlI,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElFqH,EAAoB1G,gBAAoB,OAAQ,CAClDsG,UAAWD,EAAQsI,QAErB,OAAoB3O,gBAAoB,OAAQ,CAC9CsG,UAAW+B,YAAKhC,EAAQiC,KAAMhC,EAAW,CACvC,MAASD,EAAQuI,UACjB,IAAOvI,EAAQwI,SACfL,GAAgB,UAATE,GAAoBrI,EAAQ,OAAOkD,OAAOuF,YAAWJ,OAChD1O,gBAAoB+F,IAAYoC,YAAS,CACvDd,KAAM,WACNX,KAAMA,EACNN,YAAaM,EACbL,QAAS,CACPiC,KAAMD,YAAKhC,EAAQ0I,WAAY1I,EAAQ,QAAQkD,OAAOuF,YAAWR,MACjE9F,MAAOnC,EAAQmC,MACfrC,QAASE,EAAQF,QACjBM,SAAUJ,EAAQI,UAEpBT,IAAKA,GACJsB,IAAsBtH,gBAAoB,OAAQ,CACnDsG,UAAWD,EAAQ2I,YA0GRrG,iBAjSK,SAAgB0B,GAClC,MAAO,CAEL/B,KAAM,CACJ2G,QAAS,cACTjG,MAAO,GACPC,OAAQ,GACRiG,SAAU,SACVtG,QAAS,GACTuG,UAAW,aACXrG,SAAU,WACVsG,WAAY,EACZ/F,OAAQ,EAERgG,cAAe,SAEf,eAAgB,CACdC,YAAa,UAKjBV,UAAW,CACTW,YAAa,GAIfV,QAAS,CACPW,aAAc,GAIhBT,WAAY,CACVjG,SAAU,WACVI,IAAK,EACLC,KAAM,EACNE,OAAQ,EAERiF,MAA8B,UAAvBjE,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQC,KAAK,IAAMrF,EAAMoF,QAAQC,KAAK,KACpFvE,WAAYd,EAAMW,YAAYI,OAAO,CAAC,OAAQ,aAAc,CAC1D1L,SAAU2K,EAAMW,YAAYtL,SAASiQ,WAEvC,YAAa,CACX/F,UAAW,oBAEb,aAAc,CACZ0E,MAA8B,UAAvBjE,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQC,KAAK,KAAOrF,EAAMoF,QAAQC,KAAK,MAEvF,qBAAsB,CACpB3G,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBsB,EAAMoF,QAAQpI,KAAmB,IAAO,KAKrDuI,aAAc,CACZ,YAAa,CACXtB,MAAOjE,EAAMoF,QAAQI,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAK3F,EAAMoF,QAAQI,QAAQC,KAAMzF,EAAMoF,QAAQQ,OAAOC,cACvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZzB,MAA8B,UAAvBjE,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQC,KAAK,KAAOrF,EAAMoF,QAAQC,KAAK,MAEvF,qBAAsB,CACpBK,gBAAiB1F,EAAMoF,QAAQI,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvB1F,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQU,OAAOC,MAAQ/F,EAAMoF,QAAQU,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACXhC,MAAOjE,EAAMoF,QAAQc,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAK3F,EAAMoF,QAAQc,UAAUT,KAAMzF,EAAMoF,QAAQQ,OAAOC,cACzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZzB,MAA8B,UAAvBjE,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQC,KAAK,KAAOrF,EAAMoF,QAAQC,KAAK,MAEvF,qBAAsB,CACpBK,gBAAiB1F,EAAMoF,QAAQc,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvB1F,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQU,OAAOC,MAAQ/F,EAAMoF,QAAQU,OAAOE,QAKxGG,UAAW,CACTxH,MAAO,GACPC,OAAQ,GACRL,QAAS,EACT,WAAY,CACVI,MAAO,GACPC,OAAQ,IAEV,gBAAiB,CACfL,QAAS,EACT,YAAa,CACXgB,UAAW,sBAMjBzD,QAAS,GAGTM,SAAU,GAGV+B,MAAO,CACLW,KAAM,QACNH,MAAO,QAIT2F,MAAO,CACL8B,UAAWpG,EAAMqG,QAAQ,GACzBX,gBAAiB,eACjB/G,MAAO,GACPC,OAAQ,GACR0H,aAAc,OAIhB3B,MAAO,CACL/F,OAAQ,OACRD,MAAO,OACP2H,aAAc,EACdtH,QAAS,EACT8B,WAAYd,EAAMW,YAAYI,OAAO,CAAC,UAAW,oBAAqB,CACpE1L,SAAU2K,EAAMW,YAAYtL,SAASiQ,WAEvCI,gBAAwC,UAAvB1F,EAAMoF,QAAQpI,KAAmBgD,EAAMoF,QAAQU,OAAOC,MAAQ/F,EAAMoF,QAAQU,OAAOE,MACpGtH,QAAgC,UAAvBsB,EAAMoF,QAAQpI,KAAmB,IAAO,OA6IrB,CAChCP,KAAM,aADO6B,CAEZyF","file":"static/js/10.6f78cdc6.chunk.js","sourcesContent":["export var reflow = function reflow(node) {\n  return node.scrollTop;\n};\nexport function getTransitionProps(props, options) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return \"scale(\".concat(value, \", \").concat(Math.pow(value, 2), \")\");\n}\n\nvar styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  var children = props.children,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? 'auto' : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var timer = React.useRef();\n  var autoTimeout = React.useRef();\n  var theme = useTheme();\n  var nodeRef = React.useRef(null);\n  var foreignRef = useForkRef(children.ref, ref);\n  var handleRef = useForkRef(nodeRef, foreignRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (maybeIsAppearing) {\n      if (callback) {\n        var node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n        if (maybeIsAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, maybeIsAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEntering = normalizedTransitionCallback(onEntering);\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        delay = _getTransitionProps.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        delay = _getTransitionProps2.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n\n  var addEndListener = function addEndListener(next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  var handleRef = useForkRef(children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    var doc = ownerDocument(nodeRef.current); // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!mountedRef.current || !nodeRef.current || clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}