{"version":3,"sources":["../node_modules/@material-ui/icons/Language.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","components/buttons/LanguageSelector.jsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","MenuItem","props","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","theme","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","whiteSpace","breakpoints","up","body2","name","useStyles","makeStyles","select","color","palette","primary","contrastText","padding","spacing","icon","margin","nested","paddingLeft","LanguageSelector","mode","useContext","LanguageContext","userLanguage","userLanguageChange","useState","anchorEl","setAnchorEl","handleMenuItemClick","e","id","setOpen","open","Tooltip","title","Text","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Hidden","smDown","languageOptions","mdUp","Menu","Boolean","onClose","entries","map","key","Fragment","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding"],"mappings":"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","file":"static/js/19.a95ab98e.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z\"\n}), 'Language');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  button: PropTypes.bool,\n\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React, { useContext, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\n\r\n\r\n// import LocalStorage from '../../logic/LocalStorage';\r\nimport Text, { LanguageContext, languageOptions } from '../../languages/Language';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        color: theme.palette.primary.contrastText,\r\n        padding: theme.spacing(1, 0)\r\n    },\r\n    icon: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function LanguageSelector({ mode = \"button\" }) {\r\n    const classes = useStyles();\r\n    const { userLanguage, userLanguageChange } = useContext(LanguageContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // set selected language by calling context method\r\n    const handleMenuItemClick = (e, id) => {\r\n        userLanguageChange(id);\r\n        setAnchorEl(null);\r\n        setOpen(false);\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickList = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let defaultLanguage = LocalStorage.get(\"rcml-lang\", navigator.language.substring(0, 2) || navigator.userLanguage.substring(0, 2));\r\n    //     if(userLanguage!==defaultLanguage){\r\n    //         userLanguageChange(defaultLanguage);\r\n    //     }\r\n    // }, [userLanguage,userLanguageChange]);\r\n\r\n    if (mode === \"button\") {\r\n        return (\r\n            <div>\r\n                <Tooltip title={Text('language')}>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} className={classes.select}>\r\n                        <LanguageIcon className={classes.icon} />\r\n                        <Hidden smDown>\r\n                            {languageOptions[userLanguage]}\r\n                        </Hidden>\r\n                        <Hidden mdUp>\r\n                            {userLanguage}\r\n                        </Hidden>\r\n                    </Button>\r\n                </Tooltip>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}>\r\n                    {Object.entries(languageOptions).map(([id, name]) => (\r\n                        <MenuItem key={id} selected={id === userLanguage} onClick={(event) => handleMenuItemClick(event, id)}>{name}</MenuItem>\r\n                    ))}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={handleClickList}>\r\n                    <ListItemIcon>\r\n                        <LanguageIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={Text(\"language\")} />\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        {Object.entries(languageOptions).map(([id, name]) => (\r\n                            <ListItem key={id} selected={id === userLanguage} button className={classes.nested} onClick={(event) => handleMenuItemClick(event, id)}>\r\n                                <ListItemIcon>\r\n                                    {id}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={name} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Collapse>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n\r\n}"],"sourceRoot":""}