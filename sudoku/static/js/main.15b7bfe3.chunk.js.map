{"version":3,"sources":["languages lazy /^/.*/.json$/ groupOptions: {} namespace object","components/Header.jsx","App.jsx","reportWebVitals.js","index.js","languages/Language.jsx","logic/SudokuValue.js","logic/SudokuNumber.js","logic/SudokuResolver.js","logic/Sudoku.js","ContextProviders/BoardContext.jsx","ContextProviders/TimerContext.jsx","logic/LocalStorage.js","ContextProviders/ThemeContext.jsx","serviceWorkerRegistration.js","ContextProviders/ServiceWorkerContext.jsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","DifficultyButtons","lazy","DarkModeButton","TimerButton","Drawer","Container","useStyles","makeStyles","theme","root","flexGrow","margin","marginRight","spacing","breakpoints","down","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","up","width","marginLeft","easeOut","enteringScreen","ButtonAppBar","props","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","desktopOpen","setdesktopOpen","handleDesktopDrawerToggle","setTimeout","window","dispatchEvent","Event","className","AppBar","position","clsx","Toolbar","Hidden","smUp","IconButton","edge","color","aria-label","onClick","smDown","Typography","variant","fallback","children","Home","ServiceWorker","renderLoader","Text","App","Language","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","languageOptions","en","es","dictionaryList","browserlanguage","navigator","language","userLanguage","substring","userLang","LocalStorage","get","defaultlanguage","loadlanguage","lang","a","l","default","LanguageContext","createContext","dictionary","LanguageProvider","setUserLanguage","dictionaryloaded","setdictionaryloaded","selectedLanguage","useEffect","provider","userLanguageChange","selected","newLanguage","set","Provider","value","tid","useContext","SudokuValue","x","y","i","j","callback","SetNumber","number","SetValue","Duplicates","undefined","SetFinalNumber","SetValueError","error","SetError","SetValueOptions","options","SetOptions","this","Set","locked","SudokuNumber","CleanDuplicated","CheckDuplicates","CheckEmpty","CheckSuccess","submatrix","checklist","rows","push","verticallines","horizontallines","list","SudokuResolver","n","cacheboard","newboard","RandomNumbers","emptyspaces","index","pos","Math","floor","random","length","current","field","matrix","clear","splice","CreateBoard","t1","performance","now","t3","q","qqwing","setRecordHistory","setPrintStyle","PrintStyle","READABLE","tries","best","closer","difficulty","puzzle","difficultytarget","getDifficulty","generatePuzzleSymmetry","Symmetry","RANDOM","generatePuzzle","solve","abs","getPuzzleString","t2","console","log","FromString","boardstring","board","split","join","trim","y1","i1","forEach","row","r","x1","column","c","element","parseInt","CreateBoard2","deep","t0","Resolve","errorcount","CreateEmptyBoard","fullboard","CloneBoard","CleanBoard","difficultycount","removed","maxdiff","tmp","tmpdifficultycount","clonelist","solutions","ResolveUnique","RestoreBoard","depth","changes","FillSingleOption","FillByLine","CheckCompleteBoard","randomtry","Random","randomoptions","last","sol","arrayEquals","min","CheckOptions","size","values","next","CheckUnique","unique","UniqueList","arr","difference","filter","has","success","EmptySpaces","SetSuccessValue","setSuccess","count","square","MarkDuplicates","vertical","horizontal","isDuplicated","search","reduce","b","Array","isArray","every","val","DuplicatesList","delete","BoardContext","BoardContextProvider","Difficulty","setDifficulty","OptionsActive","setOptionsActive","Success","Save","SaveBoard","fn","ms","timer","clearTimeout","apply","arguments","debounce","ResetBoard","TimerContext","TimerContextProvider","seconds","SetSeconds","IsTimerActive","SetIsTimerActive","IsFocused","SetIsFocused","interval","setInterval","clearInterval","onFocus","onBlur","addEventListener","removeEventListener","Time","Date","toISOString","substr","ToggleTimer","ResetTimer","key","default_value","expiration_time","JSON","parse","localStorage","getItem","data","setItem","stringify","ThemeContext","DefaultColor","primary","light","indigo","dark","secondary","purple","ThemeContextProvider","useMediaQuery","DarkMode","SetDarkMode","SelectedColor","SetSelectedColor","useMemo","createMuiTheme","palette","main","mode","components","MuiListItem","styleOverrides","button","backgroundColor","Grey","SwitchDarkMode","SetColor","newcolor","ResetColor","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","fetch","headers","response","contentType","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ServiceWorkerContext","ServiceWorkerProvider","Message","setMessage","waitingServiceWorker","setWaitingServiceWorker","installPrompt","setinstallPrompt","onOpen","waiting","preventDefault","event","target"],"mappings":"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","file":"static/js/main.15b7bfe3.chunk.js","sourcesContent":["var map = {\n\t\"./en.json\": [\n\t\t126,\n\t\t28\n\t],\n\t\"./es.json\": [\n\t\t127,\n\t\t29\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 101;\nmodule.exports = webpackAsyncContext;","import React, { lazy, Suspense } from 'react';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst DifficultyButtons = lazy(() => import('./buttons/DifficultyButtons'));\r\nconst DarkModeButton = lazy(() => import('./buttons/DarkModeButton'));\r\nconst TimerButton = lazy(() => import('./buttons/TimerButton'));\r\n// const LanguageSelector = lazy(() => import('./buttons/LanguageSelector'));\r\nconst Drawer = lazy(() => import('./Drawer'));\r\n\r\nconst Container = lazy(() => import('@material-ui/core/Container'));\r\n\r\n// import Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: { flexGrow: 1},\r\n    margin: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginRight: theme.spacing(0.5),\r\n        },\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n    },\r\n}));\r\n\r\nconst renderLoader = () => null;\r\n\r\nexport default function ButtonAppBar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n        if (desktopOpen) {\r\n            setdesktopOpen(!desktopOpen);\r\n        }\r\n    };\r\n    const [desktopOpen, setdesktopOpen] = React.useState(false);\r\n    const handleDesktopDrawerToggle = () => {\r\n        setdesktopOpen(!desktopOpen);\r\n        setTimeout( ()=> { window.dispatchEvent(new Event('resize')) }, theme.transitions.duration.enteringScreen);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: desktopOpen,\r\n            })}>\r\n                <Toolbar>\r\n                    <Hidden smUp >\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerToggle}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Hidden>\r\n                    <Hidden smDown>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleDesktopDrawerToggle}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Hidden>\r\n                    <Hidden smUp>\r\n                        <div className={classes.root}></div>\r\n                    </Hidden>\r\n                    <Hidden smDown>\r\n                        <Typography variant=\"h6\" className={classes.root}> Sudoku </Typography>\r\n                    </Hidden>\r\n                    {/* <Suspense fallback={renderLoader()}>\r\n                        <div className={classes.margin}>\r\n                            <LanguageSelector />\r\n                        </div>\r\n                    </Suspense> */}\r\n                    <Suspense fallback={renderLoader()}>\r\n                        <div className={classes.margin}>\r\n                            <TimerButton/>\r\n                        </div>\r\n                    </Suspense>\r\n                    <Suspense fallback={renderLoader()}>\r\n                        <div className={classes.margin}>\r\n                            <DarkModeButton/>\r\n                        </div>\r\n                    </Suspense>\r\n                    <div className={classes.margin}>\r\n                        <Suspense fallback={renderLoader()}>\r\n                            <DifficultyButtons />\r\n                        </Suspense>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Suspense fallback={renderLoader()}>\r\n                <Drawer handleDrawerToggle={handleDrawerToggle} mobileOpen={mobileOpen} handleDesktopDrawerToggle={handleDesktopDrawerToggle} desktopOpen={desktopOpen}  {...props}>\r\n                    <Container>\r\n                        {props.children}\r\n                    </Container>\r\n                </Drawer>\r\n            </Suspense>\r\n        </div>\r\n    );\r\n}\r\n","import React, { lazy, Suspense } from 'react';\nimport Header from './components/Header';\nimport Text, { LanguageProvider } from './languages/Language';\nimport ServiceWorkerProvider from './ContextProviders/ServiceWorkerContext';\nimport ThemeProvider from './ContextProviders/ThemeContext';\nimport BoardProvider from './ContextProviders/BoardContext';\nimport TimerProvider from './ContextProviders/TimerContext';\n\n\nconst Home = lazy(() => import('./pages/Home'));\nconst ServiceWorker = lazy(() => import('./components/buttons/ServiceWorker'));\n\nconst renderLoader = () => Text(\"loading\");\nfunction App() {\n    return (\n        <ThemeProvider>\n            <LanguageProvider>\n                <ServiceWorkerProvider>\n                    <BoardProvider>\n                    <TimerProvider>\n                        <Header>\n                            <Suspense fallback={renderLoader()}>\n                                <Home />\n                            </Suspense>\n                        </Header>\n                        </TimerProvider>\n                    </BoardProvider>\n                    <Suspense fallback={renderLoader()}>\n                        <ServiceWorker />\n                    </Suspense>\n                </ServiceWorkerProvider>\n            </LanguageProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { createContext, useContext, useState } from 'react';\r\nimport LocalStorage from '../logic/LocalStorage';\r\n\r\nexport const languageOptions = {\r\n    en: 'English',\r\n    es: 'Español',\r\n};\r\nlet dictionaryList = {};\r\n\r\n// create the language context with default selected language\r\nconst browserlanguage = (navigator.language || navigator.userLanguage).substring(0, 2);\r\nconst userLang = LocalStorage.get(\"rcml-lang\", browserlanguage);\r\nconst defaultlanguage = languageOptions[userLang] ? userLang : 'en';\r\n\r\nasync function loadlanguage(lang) {\r\n    if (!dictionaryList[lang]) {\r\n        return import('./' + lang + '.json').then(({ default: l }) => {\r\n            dictionaryList[lang] = l;\r\n        });\r\n    }\r\n}\r\n\r\nexport const LanguageContext = createContext({\r\n    userLanguage: defaultlanguage,\r\n    dictionary: {}\r\n});\r\n\r\n\r\nexport function LanguageProvider({ children }) {\r\n    const [userLanguage, setUserLanguage] = useState(defaultlanguage);\r\n    const [dictionaryloaded, setdictionaryloaded] = useState(false);\r\n    const selectedLanguage = dictionaryList[userLanguage] ? dictionaryList[userLanguage] : {};\r\n\r\n    React.useEffect(() => {\r\n        if (!dictionaryList[userLanguage]) {\r\n            loadlanguage(userLanguage).then(() => {\r\n                setdictionaryloaded(!dictionaryloaded);\r\n            });\r\n        }\r\n    });\r\n\r\n    const ChangeLanguage = async (selected) => {\r\n        const newLanguage = languageOptions[selected] ? selected : defaultlanguage;\r\n        LocalStorage.set(\"rcml-lang\", newLanguage,365);\r\n        if (!dictionaryList[newLanguage]) {\r\n            await loadlanguage(newLanguage).then(() => {\r\n                setUserLanguage(newLanguage);\r\n            });\r\n        } else {\r\n            setUserLanguage(newLanguage);\r\n        }\r\n    }\r\n\r\n    const provider = {\r\n        userLanguage,\r\n        dictionary: selectedLanguage,\r\n        userLanguageChange: ChangeLanguage\r\n    };\r\n\r\n    return (\r\n        <LanguageContext.Provider value={provider}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n// get text according to id & current language\r\nexport default function Text(tid) {\r\n    const languageContext = useContext(LanguageContext);\r\n    return languageContext.dictionary[tid] || tid + \"-TEXT\";\r\n}","class SudokuValue {\r\n    constructor(x, y, i, j, callback) {\r\n        this.number = \"\";\r\n        this.options = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n        this.x = x;\r\n        this.y = y;\r\n        this.i = i;\r\n        this.j = j;\r\n        this.locked = false;\r\n        this.callback = callback;\r\n        this.error = false;\r\n    }\r\n\r\n    SetNumber = (number) => {\r\n        this.SetValue(number);\r\n        this.callback.Duplicates();\r\n    }\r\n    SetValue = (number) => {\r\n        if (this.SetFinalNumber !== undefined) {\r\n            this.SetFinalNumber(number);\r\n        }\r\n        this.number = number;\r\n    }\r\n    SetValueError = (error) => {\r\n        if (this.SetError !== undefined) {\r\n            this.SetError(error);\r\n        }\r\n        this.error = error;\r\n    }\r\n    SetValueOptions = (options) => {\r\n        if (this.SetOptions !== undefined) {\r\n            this.SetOptions(options);\r\n        }\r\n        this.options = options;\r\n    }\r\n}\r\n\r\nexport default SudokuValue;","import SudokuValue from './SudokuValue';\r\n\r\nclass SudokuNumber {\r\n    constructor(x, y, callback) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.callback = callback;\r\n        this.submatrix = [];\r\n        this.checklist = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            let rows = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                rows[j] = new SudokuValue(x, y, i, j, this);\r\n                this.checklist.push(rows[j]);\r\n                this.callback.verticallines[x][i].push(rows[j]);\r\n                this.callback.horizontallines[y][j].push(rows[j]);\r\n                this.callback.list.push(rows[j]);\r\n            }\r\n            this.submatrix[i] = rows;\r\n        }\r\n    }\r\n    Duplicates = () => {\r\n        this.callback.CleanDuplicated();\r\n        this.callback.CheckDuplicates();\r\n        this.callback.CheckEmpty();\r\n        this.callback.CheckSuccess();\r\n    }\r\n}\r\n\r\nexport default SudokuNumber;","import qqwing from 'qqwing';\r\nimport Sudoku from './Sudoku';\r\n\r\nclass SudokuResolver extends Sudoku {\r\n    constructor(n, cacheboard = null, newboard = false) {\r\n        super();\r\n        this.errorcount = 0;\r\n        this.difficultycount = 0;\r\n        if (cacheboard !== null) {\r\n            this.RestoreBoard(cacheboard);\r\n        } else if (!newboard) {\r\n            this.CreateBoard(n);\r\n        }\r\n    }\r\n    RandomNumbers = (number) => {\r\n        const t = this;\r\n        if (number > 81 || number < 1) {\r\n            throw Error(\"number out of range\");\r\n        }\r\n        const emptyspaces = [...t.emptyspaces];\r\n        for (let index = 0; index < number; index++) {\r\n            const pos = Math.floor(Math.random() * (emptyspaces.length - 1));\r\n            const current = emptyspaces[pos];\r\n\r\n            let field = t.matrix[current[0]][current[1]].submatrix[current[2]][current[3]];\r\n            field.SetValue(Math.floor(1 + Math.random() * 8));\r\n            t.CleanDuplicated();\r\n            const duplicated = t.CheckDuplicates();\r\n            if (duplicated > 0) {\r\n                field.number = \"\";\r\n                index--;\r\n                continue;\r\n            }\r\n            field.options.clear();\r\n            emptyspaces.splice(pos, 1);\r\n        }\r\n    }\r\n\r\n    CreateBoard = (n) => {\r\n        const t = this;\r\n        var t1 = performance.now();\r\n        var t3 = performance.now();\r\n        var q = new qqwing();\r\n        q.setRecordHistory(true);\r\n        q.setPrintStyle(qqwing.PrintStyle.READABLE);\r\n        var tries = 0;\r\n        var best = {\r\n            closer: 10,\r\n            difficulty: 0,\r\n            puzzle: \"\"\r\n        }\r\n        var difficultytarget = n;\r\n\r\n        while (q.getDifficulty() !== difficultytarget && t3-t1<1000) {\r\n            if (difficultytarget < 3) {\r\n                q.generatePuzzleSymmetry(qqwing.Symmetry.RANDOM);\r\n            } else {\r\n                q.generatePuzzle();\r\n            }\r\n            q.solve();\r\n            tries++;\r\n            const closer = Math.abs(difficultytarget - q.getDifficulty());\r\n            if (best.closer > closer) {\r\n                best = {\r\n                    closer: closer,\r\n                    difficulty: q.getDifficulty(),\r\n                    puzzle: q.getPuzzleString()\r\n                }\r\n            }\r\n            t3=performance.now();\r\n            // console.log(t3 - t1, tries,best.difficulty);\r\n        }\r\n        this.difficulty = best.difficulty;\r\n        var t2 = performance.now();\r\n        console.log(t2 - t1, tries);\r\n        t.FromString(best.puzzle);\r\n    }\r\n\r\n    FromString = (boardstring) => {\r\n        const t = this;\r\n        var board = boardstring.split(\"-\").join(\"\").trim().split(\"\\n\");\r\n        var newboard = [\r\n            [\r\n                [],\r\n                [],\r\n                []\r\n            ],\r\n            [\r\n                [],\r\n                [],\r\n                []\r\n            ],\r\n            [\r\n                [],\r\n                [],\r\n                []\r\n            ]\r\n        ];\r\n        var y1 = 0;\r\n        var i1 = 0;\r\n        board.forEach((row, i) => {\r\n            var r = row.split(\"|\");\r\n            var x1 = 0;\r\n            r.forEach((column, j) => {\r\n                if (column !== \"\") {\r\n                    var c = column.trim().split(\" \");\r\n                    newboard[x1][y1][i1] = c;\r\n                    x1++;\r\n                    if (x1 > 2) {\r\n                        x1 = 0;\r\n                    }\r\n                } else {\r\n                    r = null;\r\n                    return;\r\n                }\r\n            });\r\n            if (r !== null) {\r\n                i1++;\r\n                if (i1 > 2) {\r\n                    i1 = 0;\r\n                    y1++;\r\n                }\r\n                if (y1 > 2) {\r\n                    y1 = 0;\r\n                }\r\n            }\r\n        });\r\n        for (let x = 0; x < 3; x++) {\r\n            for (let y = 0; y < 3; y++) {\r\n                for (let i = 0; i < 3; i++) {\r\n                    for (let j = 0; j < 3; j++) {\r\n                        const number = newboard[x][y][j][i];\r\n                        const element = t.matrix[x][y].submatrix[i][j];\r\n                        if (number !== \".\") {\r\n                            element.SetValue(parseInt(number));\r\n                            element.locked = true;\r\n                        } else {\r\n                            element.SetValue(\"\");\r\n                            element.locked = false;\r\n                        }\r\n                        element.SetValueOptions(new Set());\r\n                        element.SetValueError(false);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    CreateBoard2 = (n, deep = 0) => {\r\n        var t0 = performance.now();\r\n        const t = this;\r\n        if (n > 81 || n < 1) {\r\n            throw Error(\"number out of range\");\r\n        }\r\n        t.RandomNumbers(27);\r\n\r\n        try {\r\n            t.Resolve();\r\n        } catch (error) {\r\n            t.errorcount += 1;\r\n            //console.log(error.message, t.errorcount, \"deep:\", deep);\r\n            t.CreateEmptyBoard();\r\n            t.CreateBoard2(n, deep + 1);\r\n        }\r\n        t.fullboard = t.CloneBoard();\r\n        if (deep === 0) {\r\n            t.CleanBoard(n);\r\n        }\r\n        var t1 = performance.now();\r\n        if (deep === 0) {\r\n            console.log(\"CreateSudoku took \" + (t1 - t0) + \" milliseconds.\");\r\n        }\r\n    }\r\n    CleanBoard = (n) => {\r\n        const t = this;\r\n        t.difficultycount = 0;\r\n        if (n > 81 || n < 1) {\r\n            throw Error(\"number out of range\");\r\n        }\r\n        const emptyspaces = [...t.emptyspaces];\r\n        t.removed = 0;\r\n\r\n        let maxdiff = 0;\r\n        while (t.removed < 81 - n && emptyspaces.length > 0) {\r\n            const pos = Math.floor(Math.random() * (emptyspaces.length - 1));\r\n            const current = emptyspaces[pos];\r\n            let field = t.matrix[current[0]][current[1]].submatrix[current[2]][current[3]];\r\n            const tmp = field.number;\r\n            field.SetValue(\"\");\r\n            const tmpdifficultycount = t.difficultycount;\r\n            const clonelist = t.CloneBoard();\r\n            const solutions = t.ResolveUnique();\r\n            t.RestoreBoard(clonelist);\r\n            if (solutions === 0) {\r\n                console.log(solutions, \"solutions\");\r\n            }\r\n            if (solutions === 1) {\r\n                t.difficultycount++;\r\n                if (t.difficultycount - tmpdifficultycount > maxdiff) {\r\n                    maxdiff = t.difficultycount - tmpdifficultycount;\r\n                }\r\n                t.removed++;\r\n            } else {\r\n                t.difficultycount = tmpdifficultycount;\r\n                field.SetValue(tmp);\r\n            }\r\n            emptyspaces.splice(pos, 1);\r\n        }\r\n\r\n        t.difficultycount = maxdiff;\r\n        for (let index = 0; index < t.emptyspaces.length; index++) {\r\n            const current = t.emptyspaces[index];\r\n            let field = t.matrix[current[0]][current[1]].submatrix[current[2]][current[3]];\r\n            if (field.number !== \"\") {\r\n                field.locked = true;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ResolveUnique = (depth = 0, solutions = 0) => {\r\n        const t = this;\r\n        if (solutions > 1) {\r\n            return solutions;\r\n        }\r\n        let changes = 1;\r\n        while (changes > 0) {\r\n            changes = 0;\r\n            try {\r\n                changes += t.FillSingleOption(); // check if there are any field with only one option and use it\r\n            } catch (error) { //if 0 options, no solution\r\n                return 0;\r\n            }\r\n\r\n            if (changes === 0) {\r\n                changes += t.FillByLine(); // check if there are any line or square with a unique number in its options and use it\r\n            }\r\n            if (changes > 0) {\r\n                t.difficultycount += (changes + (depth * 100));\r\n                // t.difficultycount += (changes * (depth+1));\r\n                // console.log(\"depth\",depth,t.difficultycount);\r\n            }\r\n        }\r\n\r\n        if (!t.CheckCompleteBoard()) {\r\n            const clonelist = t.CloneBoard();\r\n            const randomtry = t.Random();\r\n            let randomoptions = [...randomtry.options];\r\n            randomtry.number = randomoptions[0];\r\n            let last = 0;\r\n            let i = 0;\r\n            //let solutions = 0;\r\n            while (randomtry.number !== last && randomtry.number !== undefined) {\r\n                last = randomtry.number;\r\n                t.RestoreBoard(clonelist);\r\n                randomtry.number = last;\r\n                try {\r\n                    let sol = solutions;\r\n                    const tmpdifficultycount = t.difficultycount;\r\n                    solutions = t.ResolveUnique(depth + 1, solutions);\r\n                    // console.log(sol,solutions);\r\n\r\n                    if (solutions === 0) {\r\n                        t.difficultycount = tmpdifficultycount;\r\n                    }\r\n                    solutions += sol;\r\n\r\n                    if (solutions > 1) {\r\n                        return solutions;\r\n                    }\r\n                } catch (error) {\r\n                    // console.log(error.message, t.errorcount, \"Submatrix\", \"depth:\", depth);\r\n                    return 0;\r\n                } finally {\r\n                    if (!t.arrayEquals(randomoptions, [...randomtry.options])) {\r\n                        randomoptions = [...randomtry.options];\r\n                        i = 0;\r\n                        console.log(\"restart\", solutions);\r\n                    } else {\r\n                        i++;\r\n                    }\r\n                    randomtry.number = randomoptions[i];\r\n                }\r\n            }\r\n            randomtry.number = \"\";\r\n            if (solutions > 1) {\r\n                return solutions;\r\n            }\r\n\r\n            if (!t.CheckCompleteBoard()) {\r\n                return t.ResolveUnique(depth + 1, solutions);\r\n            } else {\r\n                if (solutions === 0) {\r\n                    solutions = 1;\r\n                }\r\n                // solutions++;\r\n                //solutions=1;\r\n                return solutions;\r\n            }\r\n        } else {\r\n            // console.log(solutions);\r\n\r\n            // if(solutions===0){\r\n            //     solutions=1;\r\n            // }\r\n            solutions++;\r\n            // solutions=1;\r\n            return solutions;\r\n        }\r\n    }\r\n\r\n\r\n    Resolve = (deep = 0) => {\r\n        const t = this;\r\n        let changes = 1;\r\n        while (changes > 0) {\r\n            changes = 0;\r\n            changes += t.FillSingleOption(); // check if there are any field with only one option and use it\r\n            if (changes === 0) {\r\n                changes += t.FillByLine(); // check if there are any line or square with a unique number in its options and use it\r\n            }\r\n        }\r\n\r\n        if (!t.CheckCompleteBoard()) {\r\n            const clonelist = t.CloneBoard();\r\n            const randomtry = t.Random();\r\n            let randomoptions = [...randomtry.options];\r\n            randomtry.number = randomoptions[0];\r\n            let last = 0;\r\n            let i = 0;\r\n            while (!t.CheckCompleteBoard() && randomtry.number !== last && randomtry.number !== undefined) {\r\n                last = randomtry.number;\r\n                t.RestoreBoard(clonelist);\r\n                randomtry.number = last;\r\n                try {\r\n                    t.Resolve(deep + 1);\r\n                } catch (error) {\r\n                    //console.log(error.message, t.errorcount, \"Submatrix\", \"deep:\", deep);\r\n                } finally {\r\n                    if (!t.arrayEquals(randomoptions, [...randomtry.options])) {\r\n                        randomoptions = [...randomtry.options];\r\n                        i = 0;\r\n                    } else {\r\n                        i++;\r\n                    }\r\n                    randomtry.number = randomoptions[i];\r\n                }\r\n            }\r\n            randomtry.number = \"\";\r\n\r\n\r\n            if (!t.CheckCompleteBoard()) {\r\n                t.Resolve();\r\n            } else {\r\n                randomtry.SetValue(randomtry.number);\r\n                randomtry.options.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    CheckCompleteBoard = () => {\r\n        const t = this;\r\n        for (let i = 0; i < t.list.length; i++) {\r\n            const element = t.list[i];\r\n            if (element.number === \"\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    Random = (min = 3) => { //returns a cell with less options than MIN\r\n        const t = this;\r\n        for (let i = 0; i < t.list.length; i++) {\r\n            const element = t.list[i];\r\n            if (element.number === \"\") {\r\n                element.SetValueOptions(t.CheckOptions(element));\r\n                if (element.options.size < min) {\r\n                    return element;\r\n                }\r\n            }\r\n        }\r\n        return t.Random(min + 1);\r\n    }\r\n\r\n    // check if there are any field with only one option and use it\r\n    FillSingleOption = () => {\r\n        const t = this;\r\n        let changes = 0;\r\n        for (let index = 0; index < t.list.length; index++) {\r\n            const element = t.list[index];\r\n            if (element.number === \"\") {\r\n                element.SetValueOptions(t.CheckOptions(element));\r\n                if (element.options.size === 1) {\r\n                    element.SetValue(element.options.values().next().value);\r\n                    element.options.clear();\r\n                    changes++;\r\n                }\r\n            }\r\n        }\r\n        return changes;\r\n    }\r\n\r\n    // check if there are any line or square with a unique number in its options and use it\r\n    FillByLine = () => {\r\n        const t = this;\r\n        let changes = 0;\r\n        for (let index = 0; index < t.list.length; index++) {\r\n            const element = t.list[index];\r\n            if (element.number === \"\") {\r\n                if (t.CheckUnique(element)) {\r\n                    element.options.clear();\r\n                    changes++;\r\n                }\r\n            }\r\n        }\r\n        return changes;\r\n    }\r\n\r\n    //Check if this element has an unique solution\r\n    CheckUnique = (number) => {\r\n        const t = this;\r\n        let unique = 0;\r\n        const {\r\n            x,\r\n            y,\r\n            i,\r\n            j\r\n        } = number;\r\n        unique = t.UniqueList(t.matrix[x][y].checklist, number);\r\n        if (unique !== 0) {\r\n            number.SetValue(unique);\r\n            return true;\r\n        }\r\n        unique = t.UniqueList(t.verticallines[x][i], number);\r\n        if (unique !== 0) {\r\n            number.SetValue(unique);\r\n            return true;\r\n        }\r\n        unique = t.UniqueList(t.horizontallines[y][j], number);\r\n        if (unique !== 0) {\r\n            number.SetValue(unique);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    // Check if this array has an unique solution\r\n    UniqueList = (arr, number) => {\r\n        const t = this;\r\n        let options = new Set();\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const element = arr[i];\r\n            if (element.number === \"\" && element !== number) {\r\n                element.SetValueOptions(t.CheckOptions(element));\r\n                options = new Set([...options, ...element.options]);\r\n            }\r\n        }\r\n        number.SetValueOptions(t.CheckOptions(number));\r\n        let difference = new Set([...number.options].filter(x => !options.has(x)));\r\n        if (difference.size === 1) {\r\n            return difference.values().next().value;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default SudokuResolver;","import SudokuNumber from './SudokuNumber';\r\n\r\n\r\nclass HelperSudoku {\r\n\r\n    arrayEquals = (a, b) => {\r\n        return Array.isArray(a) &&\r\n            Array.isArray(b) &&\r\n            a.length === b.length &&\r\n            a.every((val, index) => val === b[index]);\r\n    }\r\n\r\n    CloneBoard = () => {\r\n        const t = this;\r\n        let clonelist = [];\r\n        for (let i = 0; i < t.list.length; i++) {\r\n            const e = t.list[i];\r\n            clonelist.push({\r\n                x: e.x,\r\n                y: e.y,\r\n                i: e.i,\r\n                j: e.j,\r\n                number: e.number,\r\n                options: [...e.options],\r\n                locked: e.locked,\r\n                error: e.error\r\n            });\r\n        }\r\n        return clonelist;\r\n    }\r\n\r\n    RestoreBoard = (clonelist) => {\r\n        const t = this;\r\n        for (let index = 0; index < clonelist.length; index++) {\r\n            const e = clonelist[index];\r\n            const element = t.matrix[e.x][e.y].submatrix[e.i][e.j];\r\n            element.SetValue(e.number);\r\n            element.SetValueOptions(new Set(e.options));\r\n            element.locked = e.locked;\r\n            element.SetValueError(e.error);\r\n        }\r\n        this.CheckSuccess();\r\n    }\r\n\r\n    // Add available options to the list\r\n    CheckOptions = (number) => {\r\n        const t = this;\r\n        let list = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n        const {\r\n            x,\r\n            y,\r\n            i,\r\n            j\r\n        } = number;\r\n        t.DuplicatesList(t.matrix[x][y].checklist, list);\r\n        t.DuplicatesList(t.verticallines[x][i], list);\r\n        t.DuplicatesList(t.horizontallines[y][j], list);\r\n        return list;\r\n    }\r\n\r\n    // Delete from list if element in arr\r\n    DuplicatesList = (arr, list) => {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const element = arr[i];\r\n            if (element.number !== \"\") {\r\n                list.delete(element.number);\r\n            }\r\n        }\r\n        if (list.size === 0) {\r\n            throw Error(\"Empty options\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass Sudoku extends HelperSudoku {\r\n    constructor() { //creates an empty sudoku board\r\n        super();\r\n        this.CreateEmptyBoard();\r\n    }\r\n\r\n    CreateEmptyBoard = () => {\r\n        this.success = false;\r\n        this.matrix = [];\r\n        this.emptyspaces = [];\r\n        this.verticallines = [ [ [], [], [] ], [ [], [], [] ], [ [], [], [] ] ]; //3x3 vertical lines\r\n        this.horizontallines = [ [ [], [], [] ], [ [], [], [] ], [ [], [], [] ] ]; //3x3 horizontal lines\r\n        this.list = []; //complete list\r\n        for (let x = 0; x < 3; x++) {\r\n            let rows = [];\r\n            for (let y = 0; y < 3; y++) {\r\n                rows[y] = new SudokuNumber(x, y, this);\r\n                this.EmptySpaces(x, y);\r\n            }\r\n            this.matrix[x] = rows;\r\n        }\r\n    }\r\n\r\n\r\n    EmptySpaces = (x, y) => {\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                this.emptyspaces.push([x, y, i, j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    SetSuccessValue = (value) => {\r\n        if (this.setSuccess !== undefined) {\r\n            this.setSuccess(value);\r\n        }\r\n        this.success = value;\r\n    }\r\n\r\n    CheckSuccess = () => {\r\n        for (let i = 0; i < this.list.length; i++) {\r\n            const element = this.list[i];\r\n            if (element.number === \"\" || element.error) {\r\n                this.SetSuccessValue(false);\r\n                return;\r\n            }\r\n        }\r\n        this.SetSuccessValue(true);\r\n    }\r\n\r\n\r\n    CleanDuplicated = () => {\r\n        for (let i = 0; i < this.list.length; i++) {\r\n            const element = this.list[i];\r\n            element.SetValueError(false);\r\n            if (element.number === \"X\") {\r\n                element.SetValue(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    CheckDuplicates = () => {\r\n        let count = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                const square = this.matrix[i][j].checklist;\r\n                count += this.MarkDuplicates(square);\r\n\r\n                const vertical = this.verticallines[i][j];\r\n                count += this.MarkDuplicates(vertical);\r\n\r\n                const horizontal = this.horizontallines[i][j];\r\n                count += this.MarkDuplicates(horizontal);\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n\r\n\r\n    MarkDuplicates = (arr) => {\r\n        let count = 0;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const element = arr[i];\r\n            if (this.isDuplicated(arr, element.number)) {\r\n                element.SetValueError(true);\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    isDuplicated = (arr, search) => {\r\n        let count = arr.reduce(function(n, element) {\r\n            return n + (search !== \"\" && element.number === search);\r\n        }, 0);\r\n        return (count > 1);\r\n    }\r\n\r\n    CheckEmpty = () => {\r\n        for (let i = 0; i < this.list.length; i++) {\r\n            const element = this.list[i];\r\n            if (element.number === \"\") {\r\n                try {\r\n                    this.CheckOptions(element);\r\n                } catch (error) {\r\n                    element.SetValue(\"X\");\r\n                    element.SetValueError(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Sudoku;","import React, { createContext } from 'react';\r\nimport SudokuResolver from '../logic/SudokuResolver';\r\nimport LocalStorage from '../logic/LocalStorage';\r\n\r\nexport const BoardContext = createContext({});\r\n\r\n\r\nfunction debounce(fn, ms) {\r\n    let timer;\r\n    return () => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n        }, ms)\r\n    };\r\n}\r\n\r\nconst BoardContextProvider=({ children })=> {\r\n    const default_difficulty = 2;\r\n    const [Difficulty, setDifficulty] = React.useState(LocalStorage.get(\"difficulty\", default_difficulty));\r\n    const [OptionsActive, setOptionsActive] = React.useState(LocalStorage.get(\"options_active\", false));\r\n\r\n    const cacheboard = LocalStorage.get(\"sudoku_board\", null);\r\n    const board = new SudokuResolver(default_difficulty, cacheboard, true);\r\n    const [Success, setSuccess] = React.useState(board.success);\r\n    board.setSuccess = setSuccess;\r\n    board.success = Success;\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (cacheboard === null) {\r\n            board.CreateBoard(default_difficulty);\r\n            LocalStorage.set(\"sudoku_board\", board.CloneBoard(), 365);\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    const ResetBoard = (n) => {\r\n        const newboard = new SudokuResolver(n);\r\n        board.RestoreBoard(newboard.CloneBoard());\r\n        Save();\r\n        LocalStorage.set(\"difficulty\", newboard.difficulty, 365);\r\n        setDifficulty(newboard.difficulty);\r\n        return;\r\n    }\r\n\r\n    const Save = () => {\r\n        LocalStorage.set(\"sudoku_board\", board.CloneBoard(), 365);\r\n    }\r\n    const SaveBoard = debounce(Save, 3000);\r\n\r\n    const provider = {\r\n        board,\r\n        Difficulty,\r\n        setDifficulty,\r\n        ResetBoard,\r\n        SaveBoard,\r\n        Success,\r\n        setSuccess,\r\n        OptionsActive,\r\n        setOptionsActive,\r\n    };\r\n\r\n    return (\r\n        <BoardContext.Provider value={provider}>\r\n            {children}\r\n        </BoardContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default BoardContextProvider;","import React, { createContext } from 'react';\r\nimport LocalStorage from \"../logic/LocalStorage\";\r\n\r\nexport const TimerContext = createContext({});\r\nexport default function TimerContextProvider({ children }) {\r\n    const [seconds, SetSeconds] = React.useState(LocalStorage.get(\"seconds\", 0));\r\n    // const [RemainingSeconds, SetRemainingSeconds] = React.useState(LocalStorage.get(\"RemainingSeconds\", 0));\r\n    const [IsTimerActive, SetIsTimerActive] = React.useState(LocalStorage.get(\"IsTimerActive\", true));\r\n    const [IsFocused, SetIsFocused] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        let interval = null;\r\n        if (IsTimerActive && IsFocused) {\r\n            interval = setInterval(() => {\r\n                LocalStorage.set(\"seconds\", seconds + 1);\r\n                SetSeconds(seconds + 1);\r\n            }, 1000);\r\n        } else if ((!IsTimerActive || !IsFocused) && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [IsTimerActive,IsFocused, seconds]);\r\n\r\n    // User has switched back to the tab\r\n    const onFocus = () => {\r\n        SetIsFocused(true);\r\n    };\r\n\r\n    // User has switched away from the tab (AKA tab is hidden)\r\n    const onBlur = () => {\r\n        SetIsFocused(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('focus', onFocus);\r\n        window.addEventListener('blur', onBlur);\r\n        // Specify how to clean up after this effect:\r\n        return () => {\r\n            window.removeEventListener('focus', onFocus);\r\n            window.removeEventListener('blur', onBlur);\r\n        };\r\n    });\r\n\r\n    const ToggleTimer = () => {\r\n        SetIsTimerActive(!IsTimerActive);\r\n        LocalStorage.set(\"IsTimerActive\", !IsTimerActive);\r\n    }\r\n\r\n    const ResetTimer = () => {\r\n        SetSeconds(0);\r\n        LocalStorage.set(\"seconds\", 0);\r\n        SetIsTimerActive(true);\r\n        LocalStorage.set(\"IsTimerActive\", true);\r\n    }\r\n    const Time=()=>{\r\n        if(seconds<3600){\r\n            return new Date(seconds * 1000).toISOString().substr(14, 5);\r\n        }else{\r\n            return new Date(seconds * 1000).toISOString().substr(11, 8);\r\n        }\r\n    }\r\n\r\n\r\n    const provider = {\r\n        Time,\r\n        // RemainingSeconds,\r\n        IsTimerActive,\r\n        IsFocused,\r\n        ToggleTimer,\r\n        ResetTimer\r\n\r\n    };\r\n\r\n    return (\r\n        <TimerContext.Provider value={provider}>\r\n            {children}\r\n        </TimerContext.Provider>\r\n    );\r\n}","class LocalStorage {\r\n    // 1 day default \r\n    static get(key, default_value = null, expiration_time = 1) {\r\n        var value = JSON.parse(localStorage.getItem(key));\r\n        if (value == null) {\r\n            this.set(key, default_value, expiration_time);\r\n        } else {\r\n            if (value.expiration_time < Date.now()) {\r\n                this.set(key, default_value, expiration_time);\r\n            } else {\r\n                return value.data;\r\n            }\r\n        }\r\n\r\n        return default_value;\r\n    }\r\n    static set(key, value, expiration_time = 1) {\r\n        if (value != null) {\r\n            expiration_time = Date.now() + expiration_time * 24 * 60 * 60 * 1000;\r\n            localStorage.setItem(key, JSON.stringify({\r\n                data: value,\r\n                expiration_time: expiration_time\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default LocalStorage;","import React, { createContext } from 'react';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport Grey from '@material-ui/core/colors/grey';\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\n\r\nimport LocalStorage from \"../logic/LocalStorage\";\r\n\r\n\r\nexport const ThemeContext = createContext({});\r\n\r\nconst DefaultColor = {\r\n    primary: { light: indigo[600], dark: indigo[800] },\r\n    secondary: { light: purple[600], dark: purple[900] },\r\n};\r\n\r\nexport default function ThemeContextProvider({ children }) {\r\n    const [DarkMode, SetDarkMode] = React.useState(LocalStorage.get(\"dark_mode\", useMediaQuery('(prefers-color-scheme: dark)')));\r\n    const [SelectedColor, SetSelectedColor] = React.useState(LocalStorage.get(\"selected_color\", DefaultColor));\r\n\r\n    const theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    primary: {\r\n                        main: DarkMode ? SelectedColor['primary']['dark'] : SelectedColor['primary']['light'],\r\n                    },\r\n                    secondary: {\r\n                        main: DarkMode ? SelectedColor['secondary']['dark'] : SelectedColor['secondary']['light'],\r\n                    },\r\n                    mode: DarkMode ? 'dark' : 'light',\r\n                },\r\n                components: {\r\n                    MuiListItem: {\r\n                        styleOverrides: {\r\n                            button: {\r\n                                '&:hover': {\r\n                                    backgroundColor: DarkMode ? Grey[700] : Grey[200]\r\n                                },\r\n                                '&$selected': {\r\n                                    backgroundColor: DarkMode ? Grey[600] : Grey[300],\r\n                                    '&:hover': {\r\n                                        backgroundColor: DarkMode ? Grey[500] : Grey[400]\r\n                                    },\r\n                                },\r\n                            },\r\n                        }\r\n                    },\r\n                },\r\n            }),\r\n        [DarkMode, SelectedColor],\r\n    );\r\n\r\n\r\n    const SwitchDarkMode = () => {\r\n        SetDarkMode(!DarkMode);\r\n        LocalStorage.set(\"dark_mode\", !DarkMode,365);\r\n    }\r\n    const SetColor = (color, primary = true) => {\r\n        const newcolor = {};\r\n        if (primary) {\r\n            newcolor['primary'] = color;\r\n            newcolor['secondary'] = SelectedColor['secondary'];\r\n        } else {\r\n            newcolor['secondary'] = color;\r\n            newcolor['primary'] = SelectedColor['primary'];\r\n        }\r\n        SetSelectedColor(newcolor);\r\n        LocalStorage.set(\"selected_color\", newcolor,365);\r\n    }\r\n\r\n    const ResetColor = (primary = true) => {\r\n        const newcolor = {};\r\n        if (primary) {\r\n            newcolor['secondary'] = SelectedColor['secondary'];\r\n            newcolor['primary'] = DefaultColor['primary'];\r\n        } else {\r\n            newcolor['primary'] = SelectedColor['primary'];\r\n            newcolor['secondary'] = DefaultColor['secondary'];\r\n        }\r\n        SetSelectedColor(newcolor);\r\n        LocalStorage.set(\"selected_color\", newcolor,365);\r\n    }\r\n\r\n\r\n    const provider = {\r\n        SetDarkMode,\r\n        DarkMode,\r\n        SwitchDarkMode,\r\n        SetColor,\r\n        ResetColor\r\n    };\r\n\r\n    return (\r\n        <ThemeContext.Provider value={provider}>\r\n            <ThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {children}\r\n            </ThemeProvider>\r\n        </ThemeContext.Provider>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { createContext } from 'react';\r\nimport * as serviceWorker from '../serviceWorkerRegistration';\r\n\r\n\r\nexport const ServiceWorkerContext = createContext();\r\n\r\n\r\nexport default function ServiceWorkerProvider({ children }) {\r\n    const [Message, setMessage] = React.useState(\"\");\r\n    const [waitingServiceWorker, setWaitingServiceWorker] = React.useState(null);\r\n    const [installPrompt, setinstallPrompt] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        serviceWorker.register({\r\n            onOpen: () => {\r\n                if (Message === \"\") {\r\n                    setMessage(\"OFFLINE\");\r\n                }\r\n            },\r\n            onUpdate: registration => {\r\n                setWaitingServiceWorker(registration.waiting);\r\n                setMessage(\"UPDATE\");\r\n            },\r\n        });\r\n\r\n        window.addEventListener('beforeinstallprompt', (e) => {\r\n            if (localStorage) {\r\n                // Prevent the mini-infobar from appearing on mobile\r\n                e.preventDefault();\r\n                // Stash the event so it can be triggered later.\r\n                setinstallPrompt(e);\r\n                if (Message !== \"UPDATE\") {\r\n                    setMessage(\"INSTALL\");\r\n                }\r\n            }\r\n        });\r\n        // We setup an event listener to automatically reload the page\r\n        // after the Service Worker has been updated, this will trigger\r\n        // on all the open tabs of our application, so that we don't leave\r\n        // any tab in an incosistent state\r\n        if (waitingServiceWorker) {\r\n            waitingServiceWorker.addEventListener('statechange', event => {\r\n                if (event.target.state === 'activated') {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        }\r\n    }, [Message,setMessage,waitingServiceWorker]);\r\n\r\n\r\n    const provider = {\r\n        Message,\r\n        setMessage,\r\n        installPrompt,\r\n        waitingServiceWorker\r\n    };\r\n\r\n    return (\r\n        <ServiceWorkerContext.Provider value={provider}>\r\n            {children}\r\n        </ServiceWorkerContext.Provider>\r\n    );\r\n}"],"sourceRoot":""}