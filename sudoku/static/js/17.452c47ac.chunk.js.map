{"version":3,"sources":["../node_modules/@material-ui/core/esm/List/ListContext.js","components/buttons/DifficultyButtons.jsx","../node_modules/@material-ui/core/esm/List/List.js"],"names":["ListContext","React","buttoncolor","pallete","getContrastText","backgroundColor","main","color","border","dark","useStyles","makeStyles","theme","palette","info","success","warning","error","buttonstar","position","bottom","spacing","right","fontSize","borderRadius","light","button1","button2","button3","button4","DifficultyButtons","props","mode","useContext","BoardContext","Difficulty","ResetBoard","setLoading","Loading","setDifficulty","Reset","number","setTimeout","classes","difficultylist","text","Text","class","icon","EmojiEmotionsIcon","InsertEmoticonIcon","FaceIcon","MoodBadIcon","textloading","size","map","e","key","title","className","onClick","button","selected","primary","edge","disableRipple","checked","List","ref","children","_props$component","component","Component","_props$dense","dense","_props$disablePadding","disablePadding","subheader","other","_objectWithoutProperties","context","Provider","value","_extends","clsx","root","padding","withStyles","listStyle","margin","paddingTop","paddingBottom","name"],"mappings":"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","file":"static/js/17.452c47ac.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\n\r\nimport Text from '../../languages/Language';\r\n\r\nimport { BoardContext } from '../../ContextProviders/BoardContext';\r\n\r\nconst buttoncolor = (pallete, getContrastText) => {\r\n    return {\r\n        backgroundColor: pallete.main,\r\n        color: getContrastText(pallete.main),\r\n        border: \"none\",\r\n        '&:hover': {\r\n            backgroundColor: pallete.dark,\r\n            color: getContrastText(pallete.dark),\r\n            border: \"none\",\r\n        },\r\n    }\r\n}\r\nconst useStyles = makeStyles((theme) => {\r\n    const { info, success, warning, error, getContrastText } = theme.palette;\r\n    return {\r\n        buttonstar: {\r\n            position: \"absolute\",\r\n            bottom: theme.spacing(0.25),\r\n            right: theme.spacing(0.25),\r\n            fontSize: \"0.75rem\",\r\n            borderRadius: \"100%\",\r\n            backgroundColor: \"white\",\r\n            color: warning.light\r\n        },\r\n        button1: buttoncolor(info, getContrastText),\r\n        button2: buttoncolor(success, getContrastText),\r\n        button3: buttoncolor(warning, getContrastText),\r\n        button4: buttoncolor(error, getContrastText)\r\n    }\r\n});\r\n\r\nconst DifficultyButtons = (props) => {\r\n    const { mode = \"button\" } = props;\r\n    const { Difficulty, ResetBoard, setLoading, Loading,setDifficulty } = useContext(BoardContext);\r\n\r\n    const Reset = (number) => {\r\n        if (number <= 20) {\r\n            setLoading(true);\r\n        }else{\r\n            setDifficulty(0);\r\n        }\r\n        setTimeout(() => {\r\n            ResetBoard(number);\r\n        }, 0);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const difficultylist = [\r\n        { number: 63, text: Text('veryeasymode'), class: classes.button1, icon: EmojiEmotionsIcon },\r\n        { number: 45, text: Text('easymode'), class: classes.button2, icon: InsertEmoticonIcon },\r\n        { number: 36, text: Text('mediummode'), class: classes.button3, icon: FaceIcon },\r\n        { number: 10, text: Text('hardmode'), class: classes.button4, icon: MoodBadIcon }\r\n    ]\r\n\r\n\r\n    const textloading = Text('loading');\r\n    if (Loading && Difficulty <= 20) {\r\n        return textloading\r\n    }\r\n    if (mode === \"button\") {\r\n        return <ButtonGroup size=\"small\">\r\n            {difficultylist.map((e) => (\r\n                <Tooltip key={e.text} title={e.text}>\r\n                    <Button className={e.class} onClick={() => Reset(e.number)}>\r\n                        <e.icon />\r\n                        {Difficulty === e.number ? <StarsIcon className={classes.buttonstar} /> : \"\"}\r\n                    </Button>\r\n                </Tooltip>\r\n            ))}\r\n        </ButtonGroup>\r\n    } else {\r\n        return <List>\r\n            {difficultylist.map((e) => (\r\n                <ListItem button key={e.text} onClick={() => Reset(e.number)} selected={Difficulty === e.number}>\r\n                    <ListItemIcon> <e.icon /></ListItemIcon>\r\n                    <ListItemText primary={e.text} />\r\n                    <Radio\r\n                        edge=\"end\"\r\n                        size=\"small\"\r\n                        disableRipple checked={Difficulty === e.number} />\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DifficultyButtons;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);"],"sourceRoot":""}