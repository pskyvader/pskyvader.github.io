{"version":3,"sources":["../node_modules/@material-ui/core/Grid/Grid.js","components/SudokuOptions.jsx","components/SudokuNumberBox.jsx","components/SudokuBox.jsx","pages/Home.jsx"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","String","replace","Grid","React","props","ref","alignContent","alignItems","classes","classNameProp","className","component","Component","container","direction","item","justifyContent","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth","other","_objectWithoutPropertiesLoose","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","Object","assign","up","generateGrid","name","useStyles","makeStyles","options","fontSize","lineHeight","overflowWrap","number","FullWidthGrid","children","Array","from","sort","join","SudokuPopover","lazy","palette","primary","error","secondary","getContrastText","background","grey","light","mode","button","height","fontWeight","borderRadius","color","paper","backgroundColor","focused","main","contrastText","selected","disabled","popper","zIndex","SudokuNumber","field","SaveBoard","useContext","BoardContext","TimerContext","IsTimerActive","IsFocused","anchorRef","useRef","useState","open","setOpen","handleClose","locked","FinalNumber","SetFinalNumber","FinalError","SetError","Focused","SetFocused","Options","SetOptions","Button","Fragment","onClick","event","prev","fallback","Popper","anchorEl","current","transition","TransitionProps","placement","SudokuNumberBox","fontsize","Box","sx","mainbordercolor","subbox","textAlign","grid","borderRight","subgrid","borderBottom","SudokuSubBox","matrix","box","submatrix","x","y","justify","map","column","keyx","row","keyy","SudokuBox","subheight","DifficultyButtons","mainborder","border","mixins","toolbar","minHeight","hidebox","opacity","rootgrid","borderLeft","borderTop","modal","top","left","position","boxShadow","shadows","transform","outline","maxHeight","overflow","down","right","ModalMessage","Success","setSuccess","Time","victory","Text","random","victorycomment","newgame","totaltime","Modal","onClose","aria-labelledby","aria-describedby","Typography","id","variant","gutterBottom","Home","board","ToggleTimer","canvas","LocalStorage","get","setHeight","useEffect","debouncedHandleResize","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","debounce","BoxHeight","clientWidth","finalheight","set","useLayoutEffect","window","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/22.be563d3f.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  const styles = {};\n  GRID_SIZES.forEach(size => {\n    const key = `grid-${breakpoint}-${size}`;\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`; // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val, div = 1) {\n  const parse = parseFloat(val);\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGutter(theme, breakpoint) {\n  const styles = {};\n  SPACINGS.forEach(spacing => {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === '0px') {\n      return;\n    }\n\n    styles[`spacing-${breakpoint}-${spacing}`] = {\n      margin: `-${getOffset(themeSpacing, 2)}`,\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport const styles = theme => _extends({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `container={true}`. */\n  container: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `item={true}`. */\n  item: {\n    boxSizing: 'border-box',\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n\n  },\n\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\n  zeroMinWidth: {\n    minWidth: 0\n  },\n\n  /* Styles applied to the root element if `direction=\"column\"`. */\n  'direction-xs-column': {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n  'direction-xs-column-reverse': {\n    flexDirection: 'column-reverse'\n  },\n\n  /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n  'direction-xs-row-reverse': {\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n  'wrap-xs-nowrap': {\n    flexWrap: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\n  'wrap-xs-wrap-reverse': {\n    flexWrap: 'wrap-reverse'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\n  'align-items-xs-center': {\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n  'align-items-xs-flex-start': {\n    alignItems: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n  'align-items-xs-flex-end': {\n    alignItems: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n  'align-items-xs-baseline': {\n    alignItems: 'baseline'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\n  'align-content-xs-center': {\n    alignContent: 'center'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n  'align-content-xs-flex-start': {\n    alignContent: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n  'align-content-xs-flex-end': {\n    alignContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n  'align-content-xs-space-between': {\n    alignContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n  'align-content-xs-space-around': {\n    alignContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"center\"`. */\n  'justify-content-xs-center': {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n  'justify-content-xs-flex-end': {\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n  'justify-content-xs-space-between': {\n    justifyContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n  'justify-content-xs-space-around': {\n    justifyContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n  'justify-content-xs-space-evenly': {\n    justifyContent: 'space-evenly'\n  }\n}, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce((accumulator, key) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(accumulator, theme, key);\n  return accumulator;\n}, {}));\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  const {\n    alignContent = 'stretch',\n    alignItems = 'stretch',\n    classes,\n    className: classNameProp,\n    component: Component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    justifyContent = 'flex-start',\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[`spacing-xs-${String(spacing)}`]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[`direction-xs-${String(direction)}`], wrap !== 'wrap' && classes[`wrap-xs-${String(wrap)}`], alignItems !== 'stretch' && classes[`align-items-xs-${String(alignItems)}`], alignContent !== 'stretch' && classes[`align-content-xs-${String(alignContent)}`], justifyContent !== 'flex-start' && classes[`justify-content-xs-${String(justifyContent)}`], xs !== false && classes[`grid-xs-${String(xs)}`], sm !== false && classes[`grid-sm-${String(sm)}`], md !== false && classes[`grid-md-${String(md)}`], lg !== false && classes[`grid-lg-${String(lg)}`], xl !== false && classes[`grid-xl-${String(xl)}`]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   * @default 'stretch'\n   */\n  alignContent: PropTypes.oneOf(['center', 'flex-end', 'flex-start', 'space-around', 'space-between', 'stretch']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   * @default 'stretch'\n   */\n  alignItems: PropTypes.oneOf(['baseline', 'center', 'flex-end', 'flex-start', 'stretch']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @default 'flex-start'\n   */\n  justifyContent: PropTypes.oneOf(['center', 'flex-end', 'flex-start', 'space-around', 'space-between', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nconst StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    options: {\r\n        fontSize: \"0.3em\",\r\n        lineHeight: \"1em\",\r\n        overflowWrap:\"break-word\"\r\n    },\r\n    number: {\r\n        lineHeight: \"1em\",\r\n    }\r\n}));\r\n\r\nexport default function FullWidthGrid({ options, children }) {\r\n    const classes = useStyles();\r\n    options = Array.from(options).sort().join(\"\");\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} className={classes.options}>\r\n                {options}\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.number}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { lazy, Suspense, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nimport SudokuOptions from './SudokuOptions';\r\nimport { BoardContext } from '../ContextProviders/BoardContext';\r\nimport { TimerContext } from '../ContextProviders/TimerContext';\r\n\r\nconst SudokuPopover = lazy(() => import('./SudokuPopover'));\r\n\r\nconst renderLoader = () => null;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const { primary, error, secondary, getContrastText, background, grey } = theme.palette;\r\n    const light = theme.palette.mode === \"light\";\r\n    return {\r\n        button: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            fontSize: \"1em\",\r\n            fontWeight: \"normal\",\r\n            minWidth: 0,\r\n            borderRadius: 0,\r\n            padding: 0,\r\n            color: light ? null : getContrastText(background.paper),\r\n            '&$disabled': {\r\n                color: light ? grey[500] : grey[300],\r\n                backgroundColor: light ? grey[200] : grey[800],\r\n            },\r\n        },\r\n        focused: {\r\n            backgroundColor: secondary.main,\r\n            color: getContrastText(secondary.main),\r\n            '&$disabled': {\r\n                backgroundColor: secondary.light,\r\n                color: getContrastText(secondary.light),\r\n            },\r\n        },\r\n        error: {\r\n            color: error.main,\r\n            '&$disabled': {\r\n                color: error.contrastText,\r\n                backgroundColor: error.main\r\n            },\r\n        },\r\n        selected: {\r\n            backgroundColor: primary.light,\r\n            color: getContrastText(primary.light),\r\n            \"&:hover\": {\r\n                backgroundColor: primary.main,\r\n            }\r\n        },\r\n        disabled: {},\r\n        popper: {\r\n            zIndex: 1300\r\n        },\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nconst SudokuNumber = ({ field }) => {\r\n    const { SaveBoard } = useContext(BoardContext);\r\n    const { IsTimerActive, IsFocused } = useContext(TimerContext);\r\n    const classes = useStyles();\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = (event) => {\r\n        setOpen((prev) => !prev);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        SaveBoard();\r\n    };\r\n\r\n\r\n    let { number, locked, error, options, focused } = field;\r\n\r\n    const [FinalNumber, SetFinalNumber] = React.useState(number);\r\n    field.SetFinalNumber = SetFinalNumber;\r\n    field.number = FinalNumber;\r\n\r\n    const [FinalError, SetError] = React.useState(error);\r\n    field.SetError = SetError;\r\n    field.error = FinalError;\r\n\r\n\r\n    const [Focused, SetFocused] = React.useState(focused);\r\n    field.SetFocused = SetFocused;\r\n    field.focused = Focused;\r\n\r\n    const [Options, SetOptions] = React.useState(options);\r\n    field.SetOptions = SetOptions;\r\n    field.options = Options;\r\n\r\n    const className = clsx(classes.button, open && classes.selected, focused && classes.focused, FinalError && classes.error);\r\n    if (locked) {\r\n        return (\r\n            <Button disabled classes={{ root: className, disabled: classes.disabled, }}  >\r\n                <SudokuOptions options={Options}> {FinalNumber}</SudokuOptions>\r\n            </Button>\r\n        )\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Button ref={anchorRef} className={className} onClick={handleClick}>\r\n                    <SudokuOptions options={Options}> {FinalNumber}</SudokuOptions>\r\n                </Button>\r\n                <Suspense fallback={renderLoader()}>\r\n                    <Popper open={open && IsFocused && IsTimerActive} anchorEl={anchorRef.current} transition className={classes.popper}  >\r\n                        {({ TransitionProps, placement }) => (\r\n                            <SudokuPopover\r\n                                TransitionProps={TransitionProps}\r\n                                placement={placement}\r\n                                handleClose={handleClose}\r\n                                field={field}\r\n                            />\r\n                        )}\r\n                    </Popper>\r\n                </Suspense>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst SudokuNumberBox = (props) => {\r\n    const { height } = props;\r\n    let fontsize = height * .75;\r\n    if (fontsize > 50) {\r\n        fontsize = 50;\r\n    }\r\n\r\n    return <Box sx={{\r\n        width: \"100%\",\r\n        height: height,\r\n        fontSize: fontsize,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }}\r\n    >\r\n        <SudokuNumber {...props} />\r\n    </Box>\r\n}\r\n\r\nexport default SudokuNumberBox;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SudokuNumberBox from \"./SudokuNumberBox\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const light = theme.palette.mode === \"light\";\r\n    const mainbordercolor = light ? theme.palette.primary.main : theme.palette.primary.light;\r\n    return {\r\n        subbox: { textAlign: \"center\", height: \"100%\" },\r\n        grid: { borderRight: theme.spacing(0.125) + \" solid \" + mainbordercolor },\r\n        subgrid: { borderBottom: theme.spacing(0.125) + \" solid \" + mainbordercolor }\r\n    }\r\n});\r\n\r\n\r\nconst SudokuSubBox = ({ matrix, height }) => {\r\n    const classes = useStyles();\r\n    const box = matrix.submatrix;\r\n    const key = matrix.x + \",\" + matrix.y;\r\n\r\n    return <Grid container justify=\"center\" className={classes.subbox}>\r\n        {box.map((column, x) => {\r\n            const keyx = key + \"-\" + x;\r\n            return <Grid key={keyx} item xs={4} className={classes.grid}>\r\n                {column.map((row, y) => {\r\n                    const keyy = keyx + \",\" + y;\r\n                    return <Grid key={keyy} item xs={12} className={classes.subgrid}>\r\n                        <SudokuNumberBox field={row} height={height} />\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        })}\r\n    </Grid>\r\n}\r\n\r\nconst SudokuBox = (props) => {\r\n    const { height } = props;\r\n    const subheight = height / 3 - 1; // x / 3 (3 squares) -1 (1px borders ) \r\n    return <Box sx={{\r\n        width: \"100%\",\r\n        height: height,\r\n    }}>\r\n        <SudokuSubBox {...props} height={subheight} />\r\n    </Box>;\r\n}\r\n\r\nexport default SudokuBox;","import React, { lazy, Suspense, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport SudokuBox from \"../components/SudokuBox\";\r\nimport LocalStorage from \"../logic/LocalStorage\";\r\nimport Text from '../languages/Language';\r\n\r\nimport { BoardContext } from '../ContextProviders/BoardContext';\r\nimport { TimerContext } from '../ContextProviders/TimerContext';\r\n\r\nconst DifficultyButtons = lazy(() => import('../components/buttons/DifficultyButtons'));\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const light = theme.palette.mode === \"light\";\r\n    const mainbordercolor = light ? theme.palette.primary.main : theme.palette.primary.light;\r\n    const mainborder = theme.spacing(0.25 + 0.125) + \" solid \" + mainbordercolor;\r\n    const border = theme.spacing(0.25) + \" solid \" + mainbordercolor;\r\n    return {\r\n        box: {\r\n            maxWidth: \"calc(100vh - \" + theme.mixins.toolbar.minHeight * 2 + \"px)\",\r\n            margin: theme.spacing(1, \"auto\"),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        hidebox: {\r\n            opacity: 0.01,\r\n        },\r\n        rootgrid: {\r\n            flexGrow: 1,\r\n            borderLeft: mainborder,\r\n            borderTop: mainborder,\r\n        },\r\n        grid: {\r\n            borderRight: border,\r\n        },\r\n        subgrid: {\r\n            borderBottom: border,\r\n        },\r\n        modal: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: 'absolute',\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(8),\r\n            transform: `translate(-50%, -50%)`,\r\n            outline: \"none\",\r\n            maxHeight: \"75%\",\r\n            overflow: \"auto\",\r\n            [theme.breakpoints.down('md')]: {\r\n                padding: theme.spacing(4),\r\n                top: \"12.5%\",\r\n                left: \"12.5%\",\r\n                right: \"12.5%\",\r\n                transform: `translate(0, 0)`,\r\n            },\r\n        },\r\n    }\r\n});\r\n\r\nfunction debounce(fn, ms) {\r\n    let timer;\r\n    return () => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n        }, ms)\r\n    };\r\n}\r\n\r\n\r\nconst ModalMessage = () => {\r\n    const { Success, setSuccess } = useContext(BoardContext);\r\n    const { Time } = useContext(TimerContext);\r\n    const classes = useStyles();\r\n\r\n    const handleClose = () => {\r\n        setSuccess(false);\r\n    };\r\n\r\n    const renderLoader = () => Text(\"loading\");\r\n    const victory = Text(\"victory\" + (Math.round(Math.random() * 9) + 1));\r\n    const victorycomment = Text(\"victorycomment\" + (Math.round(Math.random() * 9) + 1));\r\n    const newgame = Text(\"newgame\");\r\n    const totaltime = Text(\"totaltime\")+\" \"+Time();\r\n\r\n    const modal = (\r\n        <Modal open={Success} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n            <Suspense fallback={renderLoader()}>\r\n                <div className={classes.modal}>\r\n                    <Typography id=\"modal-time\" variant=\"h6\" gutterBottom>\r\n                        {totaltime}\r\n                    </Typography>\r\n                    <Typography id=\"modal-title\" variant=\"h4\" gutterBottom>\r\n                        {victory}\r\n                    </Typography>\r\n                    <Typography id=\"modal-description\" variant=\"h5\" gutterBottom>\r\n                        {newgame}\r\n                    </Typography>\r\n                    <DifficultyButtons />\r\n                    <p> ... {victorycomment}</p>\r\n                </div>\r\n            </Suspense>\r\n        </Modal>\r\n    );\r\n    return modal;\r\n}\r\n\r\nconst Home = () => {\r\n    const { board, Success } = useContext(BoardContext);\r\n    const { IsTimerActive, IsFocused, ToggleTimer } = useContext(TimerContext);\r\n    const classes = useStyles();\r\n    const canvas = React.useRef(null);\r\n    const [height, setHeight] = React.useState(LocalStorage.get(\"box_height\", 100));\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (IsTimerActive && Success) {\r\n            ToggleTimer();\r\n        }\r\n    });\r\n\r\n    // console.log(canvas);\r\n\r\n\r\n\r\n    const BoxHeight = () => {\r\n        if (canvas.current!==null && canvas.current.clientWidth > 0) {\r\n            const finalheight = canvas.current.clientWidth / 3 - 3;// x / 3 (3 squares) -3 (3px borders ) \r\n            setHeight(finalheight);\r\n            LocalStorage.set(\"box_height\", finalheight);\r\n        } else {\r\n            setTimeout(BoxHeight, 100);\r\n        }\r\n    }\r\n    const debouncedHandleResize = debounce(BoxHeight, 100);\r\n\r\n\r\n    React.useLayoutEffect(debouncedHandleResize, [debouncedHandleResize]);\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", debouncedHandleResize);\r\n        return () => window.removeEventListener(\"resize\", debouncedHandleResize);\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box className={clsx(classes.box, { [classes.hidebox]: !IsFocused || !IsTimerActive, })} ref={canvas}>\r\n            {Success && <ModalMessage />}\r\n            <Grid container justify=\"center\" className={classes.rootgrid}>\r\n                {board.matrix.map((column, x) => (\r\n                    <Grid key={x} item xs={4} className={classes.grid}>\r\n                        {column.map((row, y) => (\r\n                            <Grid key={x + \",\" + y} item xs={12} className={classes.subgrid}>\r\n                                <SudokuBox matrix={row} height={height} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}