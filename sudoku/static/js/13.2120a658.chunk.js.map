{"version":3,"sources":["components/buttons/LanguageSelector.jsx"],"names":["useStyles","makeStyles","theme","select","color","palette","primary","contrastText","padding","spacing","icon","margin","LanguageSelector","classes","useContext","LanguageContext","userLanguage","userLanguageChange","useState","anchorEl","setAnchorEl","useEffect","defaultLanguage","LocalStorage","get","window","navigator","language","substring","title","Text","aria-controls","aria-haspopup","onClick","event","currentTarget","className","xsDown","languageOptions","smUp","id","open","Boolean","onClose","Object","entries","map","name","key","selected","e","handleMenuItemClick"],"mappings":"sQAcMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,MAAOF,EAAMG,QAAQC,QAAQC,aAC7BC,QAASN,EAAMO,QAAQ,EAAG,IAE9BC,KAAM,CACFC,OAAQT,EAAMO,QAAQ,QAMf,SAASG,IACpB,IAAMC,EAAUb,IADuB,EAEMc,qBAAWC,KAAhDC,EAF+B,EAE/BA,aAAcC,EAFiB,EAEjBA,mBAFiB,EAGPC,mBAAS,MAHF,mBAGhCC,EAHgC,KAGtBC,EAHsB,KA0BvC,OARAC,qBAAU,WACN,IAAIC,EAAkBC,IAAaC,IAAI,YAAa,MAC/CF,IACDA,EAAkBG,OAAOC,UAAUC,SAASC,UAAU,EAAG,IAE7DX,EAAmBK,KACpB,CAACL,IAGA,6BACI,kBAAC,IAAD,CAASY,MAAOC,YAAK,aACrB,kBAAC,IAAD,CAAQC,gBAAc,cAAcC,gBAAc,OAAOC,QAzB7C,SAACC,GACjBd,EAAYc,EAAMC,gBAwBiEC,UAAWvB,EAAQV,QAC9F,kBAAC,IAAD,CAAciC,UAAWvB,EAAQH,OACjC,kBAAC,IAAD,CAAQ2B,QAAM,GACTC,IAAgBtB,IAErB,kBAAC,IAAD,CAAQuB,MAAI,GACPvB,KAIT,kBAAC,IAAD,CACIwB,GAAG,cACHrB,SAAUA,EACVsB,KAAMC,QAAQvB,GACdwB,QApCQ,WAChBvB,EAAY,QAoCHwB,OAAOC,QAAQP,KAAiBQ,KAAI,mCAAEN,EAAF,KAAMO,EAAN,YACjC,kBAAC,IAAD,CAAUC,IAAKR,EAAIS,SAAUT,IAAOxB,EAAciB,QAAS,SAACC,GAAD,OAhC/C,SAACgB,EAAGV,GAC5BvB,EAAmBuB,GACnBpB,EAAY,MA8BsE+B,CAAoBjB,EAAOM,KAAMO","file":"static/js/13.2120a658.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport LocalStorage from '../../logic/LocalStorage';\r\nimport Text,{ LanguageContext, languageOptions} from '../../languages/Language';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        color: theme.palette.primary.contrastText,\r\n        padding: theme.spacing(1, 0)\r\n    },\r\n    icon: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function LanguageSelector() {\r\n    const classes = useStyles();\r\n    const { userLanguage, userLanguageChange } = useContext(LanguageContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    // set selected language by calling context method\r\n    const handleMenuItemClick = (e, id) => {\r\n        userLanguageChange(id);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let defaultLanguage = LocalStorage.get(\"rcml-lang\", null);\r\n        if (!defaultLanguage) {\r\n            defaultLanguage = window.navigator.language.substring(0, 2);\r\n        }\r\n        userLanguageChange(defaultLanguage);\r\n    }, [userLanguageChange]);\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title={Text('language')}>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} className={classes.select}>\r\n                <LanguageIcon className={classes.icon} />\r\n                <Hidden xsDown>\r\n                    {languageOptions[userLanguage]}\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                    {userLanguage}\r\n                </Hidden>\r\n            </Button>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}>\r\n                {Object.entries(languageOptions).map(([id, name]) => (\r\n                    <MenuItem key={id} selected={id === userLanguage} onClick={(event) => handleMenuItemClick(event, id)}>{name}</MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}