{"version":3,"sources":["../node_modules/@material-ui/core/esm/Portal/Portal.js","../node_modules/@material-ui/core/esm/utils/getScrollbarSize.js","../node_modules/@material-ui/core/esm/Modal/ModalManager.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@material-ui/core/esm/Unstable_TrapFocus/Unstable_TrapFocus.js","../node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js","../node_modules/@material-ui/core/esm/Modal/Modal.js"],"names":["Portal","React","props","ref","children","container","_props$disablePortal","disablePortal","_React$useState","mountNode","setMountNode","handleRef","useForkRef","useEnhancedEffect","getContainer","document","body","setRef","ReactDOM","getScrollbarSize","doc","scrollDiv","createElement","style","width","height","position","top","overflow","appendChild","scrollbarSize","offsetWidth","clientWidth","removeChild","ariaHidden","element","show","setAttribute","removeAttribute","getPaddingRight","parseInt","ownerWindow","getComputedStyle","paddingRight","ariaHiddenSiblings","mountElement","currentElement","elementsToExclude","arguments","length","undefined","blacklist","concat","_toConsumableArray","blacklistTagNames","forEach","call","indexOf","tagName","findIndexOf","items","callback","idx","some","item","index","handleContainer","containerInfo","restoreStyle","disableScrollLock","ownerDocument","innerWidth","documentElement","scrollHeight","clientHeight","isOverflowing","push","value","property","el","fixedElements","querySelectorAll","parent","parentElement","containerWindow","scrollContainer","nodeName","overflowY","_ref","setProperty","removeProperty","ModalManager","instance","Constructor","TypeError","_classCallCheck","this","containers","modals","_createClass","key","modal","modalIndex","modalRef","hiddenSiblings","getAttribute","getHiddenSiblings","mount","containerIndex","restore","splice","nextTop","Unstable_TrapFocus","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","sentinelStart","sentinelEnd","nodeToRestore","reactFocusEventTarget","activated","rootRef","prevOpenRef","current","window","activeElement","contains","hasAttribute","focus","contain","nativeEvent","rootElement","hasFocus","target","loopFocus","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","tabIndex","onFocus","event","relatedTarget","childrenPropsHandler","styles","root","zIndex","right","bottom","left","backgroundColor","WebkitTapHighlightColor","invisible","SimpleBackdrop","_props$invisible","other","_objectWithoutProperties","_extends","defaultManager","Modal","inProps","theme","useTheme","getThemeProps","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$disableScrollL","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","exited","setExited","mountNodeRef","hasTransition","hasOwnProperty","getHasTransition","getModal","handleMounted","scrollTop","handleOpen","useEventCallback","resolvedContainer","add","isTopModal","handlePortalRef","node","handleClose","remove","inlineStyle","hidden","visibility","childProps","onEnter","createChainedFunction","onExited","onKeyDown","stopPropagation","role","onClick","currentTarget","TrapFocus"],"mappings":"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","file":"static/js/4.dd82c41d.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType } from '@material-ui/utils';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nvar Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal;\n\n  var _React$useState = React.useState(null),\n      mountNode = _React$useState[0],\n      setMountNode = _React$useState[1];\n\n  var handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519\nexport default function getScrollbarSize(doc) {\n  var scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.overflow = 'scroll';\n  doc.body.appendChild(scrollDiv);\n  var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  doc.body.removeChild(scrollDiv);\n  return scrollbarSize;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\n\n// Is a vertical scrollbar displayed?\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(element) {\n  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountElement, currentElement) {\n  var elementsToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountElement, currentElement].concat(_toConsumableArray(elementsToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (element) {\n    if (blacklist.indexOf(element) === -1 && blacklistTagNames.indexOf(element.tagName) === -1) {\n      ariaHidden(element, show);\n    }\n  });\n}\n\nfunction findIndexOf(items, callback) {\n  var idx = -1;\n  items.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var container = containerInfo.container;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      var scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        property: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style.paddingRight = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      var fixedElements = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedElements, function (element) {\n        restoreStyle.push({\n          value: element.style.paddingRight,\n          property: 'padding-right',\n          el: element\n        });\n        element.style.paddingRight = \"\".concat(getPaddingRight(element) + scrollbarSize, \"px\");\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    var parent = container.parentElement;\n    var containerWindow = ownerWindow(container);\n    var scrollContainer = (parent === null || parent === void 0 ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      property: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  var restore = function restore() {\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          property = _ref.property;\n\n      if (value) {\n        el.style.setProperty(property, value);\n      } else {\n        el.style.removeProperty(property);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (element) {\n    if (element.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(element);\n    }\n  });\n  return hiddenSiblings;\n}\n\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    this.containers = void 0;\n    this.modals = void 0;\n    this.modals = [];\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblings = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblings: hiddenSiblings\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","/* eslint-disable @typescript-eslint/naming-convention, consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * Utility component that locks focus inside the component.\n */\n\nfunction Unstable_TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var reactFocusEventTarget = React.useRef(null); // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n\n  var activated = React.useRef(false);\n  var rootRef = React.useRef(null);\n  var handleRef = useForkRef(children.ref, rootRef);\n  var prevOpenRef = React.useRef();\n  React.useEffect(function () {\n    prevOpenRef.current = open;\n  }, [open]);\n\n  if (!prevOpenRef.current && open && typeof window !== 'undefined' && !disableAutoFocus) {\n    // WARNING: Potentially unsafe in concurrent mode.\n    // The way the read on `nodeToRestore` is setup could make this actually safe.\n    // Say we render `open={false}` -> `open={true}` but never commit.\n    // We have now written a state that wasn't committed. But no committed effect\n    // will read this wrong value. We only read from `nodeToRestore` in effects\n    // that were committed on `open={true}`\n    // WARNING: Prevents the instance from being garbage collected. Should only\n    // hold a weak ref.\n    nodeToRestore.current = getDoc().activeElement;\n  }\n\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current);\n\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n\n    return function () {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    }; // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open TrapFocus\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current);\n\n    var contain = function contain(nativeEvent) {\n      var rootElement = rootRef.current; // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n\n      if (rootElement === null) {\n        return;\n      }\n\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (!rootElement.contains(doc.activeElement)) {\n        // if the focus event is not coming from inside the children's react tree, reset the refs\n        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {\n          reactFocusEventTarget.current = null;\n        } else if (reactFocusEventTarget.current !== null) {\n          return;\n        }\n\n        if (!activated.current) {\n          return;\n        }\n\n        rootElement.focus();\n      } else {\n        activated.current = true;\n      }\n    };\n\n    var loopFocus = function loopFocus(nativeEvent) {\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (nativeEvent.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      if (doc.activeElement.tagName === 'BODY') {\n        contain();\n      }\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n\n  var onFocus = function onFocus(event) {\n    if (!activated.current) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    var childrenPropsHandler = children.props.onFocus;\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), /*#__PURE__*/React.cloneElement(children, {\n    ref: handleRef,\n    onFocus: onFocus\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Unstable_TrapFocus.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, the trap focus will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any trap focus children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the trap focus less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the trap focus will not prevent focus from leaving the trap focus while open.\n   *\n   * Generally this should never be set to `true` as it makes the trap focus less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the trap focus will not restore focus to previously focused element once\n   * trap focus is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, focus will be locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Unstable_TrapFocus['propTypes' + ''] = exactProp(Unstable_TrapFocus.propTypes);\n}\n\nexport default Unstable_TrapFocus;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  var _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"invisible\", \"open\"]);\n\n  return open ? /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, invisible ? styles.invisible : {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default SimpleBackdrop\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;"],"sourceRoot":""}