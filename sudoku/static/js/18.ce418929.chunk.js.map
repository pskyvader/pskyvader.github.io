{"version":3,"sources":["components/Drawer.jsx"],"names":["DarkModeButton","lazy","LanguageSelector","DifficultyButtons","ServiceWorker","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","toolbar","mixins","drawerPaper","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","ResponsiveDrawer","props","children","handleDrawerToggle","mobileOpen","handleDesktopDrawerToggle","desktopOpen","board","setDifficulty","Difficulty","classes","useTheme","className","fallback","mode","aria-label","smUp","implementation","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","clsx"],"mappings":"kMAQMA,EAAiBC,gBAAK,kBAAM,+DAC5BC,EAAmBD,gBAAK,kBAAM,uEAC9BE,EAAoBF,gBAAK,kBAAM,sEAC/BG,EAAgBH,gBAAK,kBAAM,wDAI3BI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAO,eACFH,EAAMI,YAAYC,GAAG,MAAQ,CAC1BC,MARQ,IASRC,WAAY,IAIpBC,QAASR,EAAMS,OAAOD,QACtBE,YAAa,CACTJ,MAfY,KAiBhBK,QAAQ,aACJC,SAAU,EACVC,WAAYb,EAAMc,YAAYC,OAAO,SAAU,CAC3CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,iBAExCnB,EAAMI,YAAYC,GAAG,MAAQ,CAC1Be,YAxBQ,MA2BhBC,aAAa,aACTR,WAAYb,EAAMc,YAAYC,OAAO,SAAU,CAC3CC,OAAQhB,EAAMc,YAAYE,OAAOM,QACjCJ,SAAUlB,EAAMc,YAAYI,SAASK,kBAExCvB,EAAMI,YAAYC,GAAG,MAAQ,CAC1Be,WAAY,QAiFTI,UAzEf,SAA0BC,GAAQ,IAE1BC,EAQAD,EARAC,SACAC,EAOAF,EAPAE,mBACAC,EAMAH,EANAG,WACAC,EAKAJ,EALAI,0BACAC,EAIAL,EAJAK,YACAC,EAGAN,EAHAM,MACAC,EAEAP,EAFAO,cACAC,EACAR,EADAQ,WAEEC,EAAUpC,IACVE,EAAQmC,cAERhC,EACF,6BACI,yBAAKiC,UAAWF,EAAQ1B,UACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,WAAD,CAAU6B,SArBC,MAsBP,kBAAC5C,EAAD,CAAgB6C,KAAK,UAEzB,kBAAC,WAAD,CAAUD,SAxBC,MAyBP,kBAAC1C,EAAD,CAAkB2C,KAAK,WAG/B,kBAAC,IAAD,MACA,kBAAC,WAAD,CAAUD,SA7BK,MA8BX,kBAACzC,EAAD,CAAmB0C,KAAK,OAAOP,MAAOA,EAAOC,cAAeA,EAAeC,WAAYA,KAE3F,kBAAC,IAAD,MACA,kBAAC,WAAD,CAAUI,SAjCK,MAkCX,kBAACxC,EAAD,CAAeyC,KAAK,WAMhC,OACI,yBAAKF,UAAWF,EAAQjC,MACpB,yBAAKmC,UAAWF,EAAQ/B,OAAQoC,aAAW,mBAEvC,kBAAC,IAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAAC,IAAD,CACIC,QAAQ,YACRC,OAA4B,QAApB3C,EAAM4C,UAAsB,QAAU,OAC9CC,KAAMjB,EACNkB,QAASnB,EACTO,QAAS,CAAEa,MAAOb,EAAQxB,aAC1BsC,WAAY,CAAEC,aAAa,IAC1B9C,IAGT,kBAAC,IAAD,CAAQ+C,QAAM,EAACT,eAAe,OAC1B,kBAAC,IAAD,CACIE,OAA4B,QAApB3C,EAAM4C,UAAsB,QAAU,OAC9CR,UAAWF,EAAQ/B,OACnB+B,QAAS,CAAEa,MAAOb,EAAQxB,aAC1BgC,QAAQ,aACRG,KAAMf,EACNgB,QAASjB,GACR1B,KAIb,0BAAMiC,UAAWe,YAAKjB,EAAQvB,QAAT,eAAqBuB,EAAQb,aAAeS,KAC5DJ","file":"static/js/18.ce418929.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\r\nimport clsx from 'clsx';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport List from '@material-ui/core/List';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst DarkModeButton = lazy(() => import('./buttons/DarkModeButton'));\r\nconst LanguageSelector = lazy(() => import('./buttons/LanguageSelector'));\r\nconst DifficultyButtons = lazy(() => import('./buttons/DifficultyButtons'));\r\nconst ServiceWorker = lazy(() => import('./buttons/ServiceWorker'));\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: -drawerWidth,\r\n        },\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: 0,\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst renderLoader = () => null;\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const {\r\n        children,\r\n        handleDrawerToggle,\r\n        mobileOpen,\r\n        handleDesktopDrawerToggle,\r\n        desktopOpen,\r\n        board,\r\n        setDifficulty,\r\n        Difficulty,\r\n    } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                <Suspense fallback={renderLoader()}>\r\n                    <DarkModeButton mode=\"list\" />\r\n                </Suspense>\r\n                <Suspense fallback={renderLoader()}>\r\n                    <LanguageSelector mode=\"list\" />\r\n                </Suspense>\r\n            </List>\r\n            <Divider />\r\n            <Suspense fallback={renderLoader()}>\r\n                <DifficultyButtons mode=\"list\" board={board} setDifficulty={setDifficulty} Difficulty={Difficulty} />\r\n            </Suspense>\r\n            <Divider />\r\n            <Suspense fallback={renderLoader()}>\r\n                <ServiceWorker mode=\"list\" />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{ paper: classes.drawerPaper, }}\r\n                        ModalProps={{ keepMounted: true, /* Better open performance on mobile.*/ }} >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        className={classes.drawer}\r\n                        classes={{ paper: classes.drawerPaper, }}\r\n                        variant=\"persistent\"\r\n                        open={desktopOpen}\r\n                        onClose={handleDesktopDrawerToggle} >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={clsx(classes.content, { [classes.contentShift]: desktopOpen, })}>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ResponsiveDrawer;\r\n"],"sourceRoot":""}