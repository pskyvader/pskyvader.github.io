{"version":3,"sources":["components/SudokuNumberBox.jsx","components/SudokuBox.jsx","pages/Home.jsx"],"names":["Paper","lazy","ClickAwayListener","Grow","Popper","SudokuPopover","SudokuOptions","useStyles","makeStyles","theme","button","height","width","fontSize","fontWeight","minWidth","borderRadius","padding","color","palette","grey","backgroundColor","error","main","contrastText","selected","primary","light","getContrastText","disabled","root","zIndex","SudokuNumber","field","OptionsActive","setOptionsActive","classes","anchorRef","React","useRef","useState","open","setOpen","ChangeOption","SetChangeOption","handleClose","number","locked","options","FinalNumber","SetFinalNumber","FinalError","SetError","Options","SetOptions","className","clsx","Button","fallback","Fragment","ref","onClick","event","prev","anchorEl","current","role","undefined","transition","TransitionProps","placement","style","transformOrigin","onClickAway","parentOptions","SudokuNumberBox","props","fontsize","Box","display","alignItems","justifyContent","subbox","textAlign","grid","borderRight","spacing","info","subgrid","borderBottom","SudokuSubBox","matrix","box","submatrix","key","x","y","Grid","container","justify","map","row","keyx","item","xs","column","keyy","SudokuBox","subheight","mainborder","border","maxWidth","mixins","toolbar","minHeight","margin","flexGrow","borderLeft","borderTop","paper","top","left","position","background","boxShadow","shadows","transform","outline","Home","board","canvas","LocalStorage","get","setHeight","success","Success","setSuccess","BoxHeight","clientWidth","Save","set","CloneBoard","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","useLayoutEffect","useEffect","window","addEventListener","removeEventListener","body","Typography","id","variant","gutterBottom","Modal","onClose","aria-labelledby","aria-describedby"],"mappings":"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","file":"static/js/7.fadb6d96.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst Paper = lazy(() => import('@material-ui/core/Paper'));\r\nconst ClickAwayListener = lazy(() => import('@material-ui/core/ClickAwayListener'));\r\nconst Grow = lazy(() => import('@material-ui/core/Grow'));\r\nconst Popper = lazy(() => import('@material-ui/core/Popper'));\r\n\r\nconst SudokuPopover = lazy(() => import('./SudokuPopover'));\r\nconst SudokuOptions = lazy(() => import('./SudokuOptions'));\r\n\r\nconst renderLoader = () => null;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        fontSize: \"1em\",\r\n        fontWeight: \"normal\",\r\n        minWidth: 0,\r\n        borderRadius: 0,\r\n        padding: 0,\r\n        '&$disabled': {\r\n            color: theme.palette.grey[500],\r\n            backgroundColor: theme.palette.grey[200],\r\n        },\r\n    },\r\n    error: {\r\n        color: theme.palette.error.main,\r\n        '&$disabled': {\r\n            color: theme.palette.error.contrastText,\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n    },\r\n    selected: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.getContrastText(theme.palette.primary.light),\r\n        \"&:hover\":{\r\n            backgroundColor: theme.palette.primary.main,\r\n        }\r\n    },\r\n    disabled: {},\r\n    root: {\r\n        zIndex: 1300\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\nconst SudokuNumber = ({ field, OptionsActive, setOptionsActive }) => {\r\n    const classes = useStyles();\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [ChangeOption, SetChangeOption] = React.useState(false);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setOpen((prev) => !prev);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    let { number, locked, error, options } = field;\r\n\r\n    const [FinalNumber, SetFinalNumber] = React.useState(number);\r\n    field.SetFinalNumber = SetFinalNumber;\r\n    field.number = FinalNumber;\r\n\r\n    const [FinalError, SetError] = React.useState(error);\r\n    field.SetError = SetError;\r\n    field.error = FinalError;\r\n\r\n    const [Options, SetOptions] = React.useState(options);\r\n    field.SetOptions = SetOptions;\r\n    field.options = Options;\r\n\r\n    const className = clsx(classes.button, FinalError && classes.error, open && classes.selected,ChangeOption);\r\n\r\n    if (locked) {\r\n        return (\r\n            <Button disabled classes={{ root: className, disabled: classes.disabled, }}  >\r\n                <Suspense fallback={renderLoader()}>\r\n                    <SudokuOptions options={Options}> {FinalNumber}</SudokuOptions>\r\n                </Suspense>\r\n            </Button>\r\n        )\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Button ref={anchorRef} className={className} onClick={handleClick}>\r\n                    <Suspense fallback={renderLoader()}>\r\n                        <SudokuOptions options={Options}> {FinalNumber}</SudokuOptions>\r\n                    </Suspense>\r\n                </Button>\r\n                <Suspense fallback={renderLoader()}>\r\n                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition className={classes.root}>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }} >\r\n                                <div>\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                            <div>\r\n                                                <SudokuPopover handleClose={handleClose} field={field} OptionsActive={OptionsActive} setOptionsActive={setOptionsActive} parentOptions={SetChangeOption}/>\r\n                                            </div>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                </div>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </Suspense>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst SudokuNumberBox = (props) => {\r\n    const { height } = props;\r\n    let fontsize = height * .75;\r\n    if (fontsize > 50) {\r\n        fontsize = 50;\r\n    }\r\n\r\n    return <Box height={height} width=\"100%\" fontSize={fontsize} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n        <SudokuNumber {...props} />\r\n    </Box>\r\n}\r\n\r\nexport default SudokuNumberBox;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SudokuNumberBox from \"./SudokuNumberBox\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    subbox: { textAlign: \"center\", height: \"100%\" },\r\n    grid: { borderRight: theme.spacing(0.125) + \"px solid \" + theme.palette.info.main, },\r\n    subgrid: { borderBottom: theme.spacing(0.125) + \"px solid \" + theme.palette.info.main, }\r\n}));\r\n\r\n\r\nconst SudokuSubBox = ({ matrix, height, OptionsActive, setOptionsActive }) => {\r\n    const classes = useStyles();\r\n    const box = matrix.submatrix;\r\n    const key = matrix.x + \",\" + matrix.y;\r\n\r\n    return <Grid container justify=\"center\" className={classes.subbox}>\r\n        {box.map((row, x) => {\r\n            const keyx = key + \"-\" + x;\r\n            return <Grid key={keyx} item xs={4} className={classes.grid}>\r\n                {row.map((column, y) => {\r\n                    const keyy = keyx + \",\" + y;\r\n                    return <Grid key={keyy} item xs={12} className={classes.subgrid}>\r\n                        <SudokuNumberBox field={column} height={height} OptionsActive={OptionsActive} setOptionsActive={setOptionsActive} />\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        })}\r\n    </Grid>\r\n}\r\n\r\nconst SudokuBox = (props) => {\r\n    const { height } = props;\r\n    const subheight = height / 3 - 1; // x / 3 (3 squares) -1 (1px borders ) \r\n    return <Box height={height} width=\"100%\">\r\n        <SudokuSubBox {...props} height={subheight} />\r\n    </Box>;\r\n}\r\n\r\nexport default SudokuBox;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport SudokuBox from \"../components/SudokuBox\";\r\nimport LocalStorage from \"../logic/LocalStorage\";\r\n\r\nimport { DifficultyButtons } from \"../components/Header\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const mainborder = theme.spacing(0.25 + 0.125) + \"px solid \" + theme.palette.info.main;\r\n    const border = theme.spacing(0.25) + \"px solid \" + theme.palette.info.main;\r\n    return {\r\n        box: {\r\n            maxWidth: \"calc(100vh - \" + theme.mixins.toolbar.minHeight * 2 + \"px)\",\r\n            margin: theme.spacing(1, \"auto\"),\r\n        },\r\n        root: {\r\n            flexGrow: 1,\r\n            borderLeft: mainborder,\r\n            borderTop: mainborder,\r\n        },\r\n        grid: {\r\n            borderRight: border,\r\n        },\r\n        subgrid: {\r\n            borderBottom: border,\r\n        },\r\n        paper: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: 'absolute',\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(8),\r\n            transform: `translate(-50%, -50%)`,\r\n            outline: \"none\",\r\n        },\r\n    }\r\n});\r\n\r\nfunction debounce(fn, ms) {\r\n    let timer;\r\n    return _ => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(_ => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n        }, ms)\r\n    };\r\n}\r\n\r\n\r\nconst Home = (props) => {\r\n    const { board }=props;\r\n    const classes = useStyles();\r\n    const canvas = React.useRef(null);\r\n    const [height, setHeight] = React.useState(LocalStorage.get(\"box_height\", 100));\r\n    const [OptionsActive, setOptionsActive] = React.useState(LocalStorage.get(\"options_active\", false));\r\n\r\n    const [Success, setSuccess] = React.useState(board.success);\r\n    board.setSuccess = setSuccess;\r\n    board.success = Success;\r\n\r\n\r\n    const handleClose = () => {\r\n        setSuccess(false);\r\n    };\r\n\r\n    const BoxHeight = () => {\r\n        setHeight(canvas.current.clientWidth / 3 - 3);// x / 3 (3 squares) -3 (3px borders ) \r\n    }\r\n    const Save = () => {\r\n        LocalStorage.set(\"box_height\", height);\r\n        LocalStorage.set(\"sudoku_board\", board.CloneBoard());\r\n        LocalStorage.set(\"options_active\", OptionsActive);\r\n    }\r\n\r\n    const debouncedHandleResize = debounce(BoxHeight, 100);\r\n    React.useLayoutEffect(BoxHeight, []);\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", debouncedHandleResize);\r\n        return () => window.removeEventListener(\"resize\", debouncedHandleResize);\r\n    });\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", Save);\r\n        return () => window.removeEventListener(\"beforeunload\", Save);\r\n    });\r\n\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <Typography id=\"modal-title\"variant=\"h4\" gutterBottom> Ganaste por la CTM! </Typography>\r\n            <Typography id=\"modal-description\"  variant=\"h5\" gutterBottom> Nueva partida? </Typography>\r\n            <DifficultyButtons {...props}/>\r\n            <p>pd:uwu</p>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box className={classes.box} ref={canvas}>\r\n            <Modal\r\n                open={Success}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n\r\n\r\n            <Grid container justify=\"center\" className={classes.root} >\r\n                {board.matrix.map((row, x) => (\r\n                    <Grid key={x} item xs={4} className={classes.grid}>\r\n                        {row.map((column, y) => (\r\n                            <Grid key={x + \",\" + y} item xs={12} className={classes.subgrid}>\r\n                                <SudokuBox matrix={column} height={height} OptionsActive={OptionsActive} setOptionsActive={setOptionsActive} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home;"],"sourceRoot":""}