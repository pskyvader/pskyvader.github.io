{"version":3,"sources":["../node_modules/@material-ui/core/utils/getScrollbarSize.js","../node_modules/@material-ui/utils/esm/getScrollbarSize.js","../node_modules/@material-ui/core/Portal/Portal.js","../node_modules/@material-ui/core/Modal/ModalManager.js","../node_modules/@material-ui/core/Unstable_TrapFocus/Unstable_TrapFocus.js","../node_modules/@material-ui/core/Modal/SimpleBackdrop.js","../node_modules/@material-ui/core/Modal/Modal.js"],"names":["getScrollbarSize","doc","scrollDiv","createElement","style","width","height","position","top","overflow","body","appendChild","scrollbarSize","offsetWidth","clientWidth","removeChild","Portal","React","props","ref","children","container","disablePortal","mountNode","setMountNode","handleRef","useForkRef","useEnhancedEffect","getContainer","document","setRef","ReactDOM","ariaHidden","element","show","setAttribute","removeAttribute","getPaddingRight","parseInt","ownerWindow","getComputedStyle","paddingRight","ariaHiddenSiblings","mountElement","currentElement","elementsToExclude","blacklist","blacklistTagNames","forEach","call","indexOf","tagName","findIndexOf","items","callback","idx","some","item","index","handleContainer","containerInfo","restoreStyle","disableScrollLock","ownerDocument","innerWidth","documentElement","scrollHeight","clientHeight","isOverflowing","push","value","property","el","fixedElements","querySelectorAll","parent","parentElement","containerWindow","scrollContainer","nodeName","overflowY","setProperty","removeProperty","ModalManager","this","containers","modals","modal","modalIndex","length","modalRef","hiddenSiblings","getAttribute","getHiddenSiblings","mount","containerIndex","restore","splice","nextTop","Unstable_TrapFocus","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","sentinelStart","sentinelEnd","nodeToRestore","reactFocusEventTarget","activated","rootRef","prevOpenRef","current","window","activeElement","contains","hasAttribute","focus","contain","nativeEvent","rootElement","hasFocus","target","loopFocus","key","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","tabIndex","onFocus","event","relatedTarget","childrenPropsHandler","styles","root","zIndex","right","bottom","left","backgroundColor","WebkitTapHighlightColor","invisible","SimpleBackdrop","other","_objectWithoutPropertiesLoose","_extends","defaultManager","Modal","inProps","theme","useTheme","getThemeProps","name","BackdropComponent","BackdropProps","closeAfterTransition","disableEscapeKeyDown","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","exited","setExited","mountNodeRef","hasTransition","hasOwnProperty","getHasTransition","getModal","handleMounted","scrollTop","handleOpen","useEventCallback","resolvedContainer","add","isTopModal","handlePortalRef","node","handleClose","remove","inlineStyle","hidden","visibility","childProps","undefined","onEnter","createChainedFunction","onExited","stopPropagation","role","onClick","currentTarget","TrapFocus"],"mappings":"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","file":"static/js/6.e59298e6.chunk.js","sourcesContent":["import { unstable_getScrollbarSize as getScrollbarSize } from '@material-ui/utils';\nexport default getScrollbarSize;","// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519\nexport default function getScrollbarSize(doc) {\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.overflow = 'scroll';\n  doc.body.appendChild(scrollDiv);\n  const scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  doc.body.removeChild(scrollDiv);\n  return scrollbarSize;\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType } from '@material-ui/utils';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return () => {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","import getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\n\n// Is a vertical scrollbar displayed?\nfunction isOverflowing(container) {\n  const doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(element) {\n  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude = [], show) {\n  const blacklist = [mountElement, currentElement, ...elementsToExclude];\n  const blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, element => {\n    if (blacklist.indexOf(element) === -1 && blacklistTagNames.indexOf(element.tagName) === -1) {\n      ariaHidden(element, show);\n    }\n  });\n}\n\nfunction findIndexOf(items, callback) {\n  let idx = -1;\n  items.some((item, index) => {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  const restoreStyle = [];\n  const container = containerInfo.container;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      const scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        property: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`; // .mui-fixed is a global helper.\n\n      const fixedElements = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedElements, element => {\n        restoreStyle.push({\n          value: element.style.paddingRight,\n          property: 'padding-right',\n          el: element\n        });\n        element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    const parent = container.parentElement;\n    const containerWindow = ownerWindow(container);\n    const scrollContainer = (parent === null || parent === void 0 ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      property: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  const restore = () => {\n    restoreStyle.forEach(({\n      value,\n      el,\n      property\n    }) => {\n      if (value) {\n        el.style.setProperty(property, value);\n      } else {\n        el.style.removeProperty(property);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  const hiddenSiblings = [];\n  [].forEach.call(container.children, element => {\n    if (element.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(element);\n    }\n  });\n  return hiddenSiblings;\n}\n\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\nexport default class ModalManager {\n  constructor() {\n    this.containers = void 0;\n    this.modals = void 0;\n    this.modals = [];\n    this.containers = [];\n  }\n\n  add(modal, container) {\n    let modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex !== -1) {\n      return modalIndex;\n    }\n\n    modalIndex = this.modals.length;\n    this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n    if (modal.modalRef) {\n      ariaHidden(modal.modalRef, false);\n    }\n\n    const hiddenSiblings = getHiddenSiblings(container);\n    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);\n    const containerIndex = findIndexOf(this.containers, item => item.container === container);\n\n    if (containerIndex !== -1) {\n      this.containers[containerIndex].modals.push(modal);\n      return modalIndex;\n    }\n\n    this.containers.push({\n      modals: [modal],\n      container,\n      restore: null,\n      hiddenSiblings\n    });\n    return modalIndex;\n  }\n\n  mount(modal, props) {\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n\n    if (!containerInfo.restore) {\n      containerInfo.restore = handleContainer(containerInfo, props);\n    }\n  }\n\n  remove(modal) {\n    const modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex === -1) {\n      return modalIndex;\n    }\n\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n    this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n    if (containerInfo.modals.length === 0) {\n      // The modal might be closed before it had the chance to be mounted in the DOM.\n      if (containerInfo.restore) {\n        containerInfo.restore();\n      }\n\n      if (modal.modalRef) {\n        // In case the modal wasn't in the DOM yet.\n        ariaHidden(modal.modalRef, true);\n      }\n\n      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);\n      this.containers.splice(containerIndex, 1);\n    } else {\n      // Otherwise make sure the next top modal is visible to a screen reader.\n      const nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n      // aria-hidden because the dom element doesn't exist either\n      // when modal was unmounted before modalRef gets null\n\n      if (nextTop.modalRef) {\n        ariaHidden(nextTop.modalRef, false);\n      }\n    }\n\n    return modalIndex;\n  }\n\n  isTopModal(modal) {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n\n}","/* eslint-disable @typescript-eslint/naming-convention, consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * Utility component that locks focus inside the component.\n */\n\nfunction Unstable_TrapFocus(props) {\n  const {\n    children,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    getDoc,\n    isEnabled,\n    open\n  } = props;\n  const ignoreNextEnforceFocus = React.useRef();\n  const sentinelStart = React.useRef(null);\n  const sentinelEnd = React.useRef(null);\n  const nodeToRestore = React.useRef();\n  const reactFocusEventTarget = React.useRef(null); // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n\n  const activated = React.useRef(false);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(children.ref, rootRef);\n  const prevOpenRef = React.useRef();\n  React.useEffect(() => {\n    prevOpenRef.current = open;\n  }, [open]);\n\n  if (!prevOpenRef.current && open && typeof window !== 'undefined' && !disableAutoFocus) {\n    // WARNING: Potentially unsafe in concurrent mode.\n    // The way the read on `nodeToRestore` is setup could make this actually safe.\n    // Say we render `open={false}` -> `open={true}` but never commit.\n    // We have now written a state that wasn't committed. But no committed effect\n    // will read this wrong value. We only read from `nodeToRestore` in effects\n    // that were committed on `open={true}`\n    // WARNING: Prevents the instance from being garbage collected. Should only\n    // hold a weak ref.\n    nodeToRestore.current = getDoc().activeElement;\n  }\n\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    const doc = ownerDocument(rootRef.current);\n\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n\n    return () => {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    }; // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open TrapFocus\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    const doc = ownerDocument(rootRef.current);\n\n    const contain = nativeEvent => {\n      const {\n        current: rootElement\n      } = rootRef; // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n\n      if (rootElement === null) {\n        return;\n      }\n\n      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (!rootElement.contains(doc.activeElement)) {\n        // if the focus event is not coming from inside the children's react tree, reset the refs\n        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {\n          reactFocusEventTarget.current = null;\n        } else if (reactFocusEventTarget.current !== null) {\n          return;\n        }\n\n        if (!activated.current) {\n          return;\n        }\n\n        rootElement.focus();\n      } else {\n        activated.current = true;\n      }\n    };\n\n    const loopFocus = nativeEvent => {\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (nativeEvent.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    const interval = setInterval(() => {\n      if (doc.activeElement.tagName === 'BODY') {\n        contain();\n      }\n    }, 50);\n    return () => {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n\n  const onFocus = event => {\n    if (!activated.current) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    const childrenPropsHandler = children.props.onFocus;\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), /*#__PURE__*/React.cloneElement(children, {\n    ref: handleRef,\n    onFocus\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Unstable_TrapFocus.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, the trap focus will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any trap focus children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the trap focus less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the trap focus will not prevent focus from leaving the trap focus while open.\n   *\n   * Generally this should never be set to `true` as it makes the trap focus less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the trap focus will not restore focus to previously focused element once\n   * trap focus is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, focus is locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Unstable_TrapFocus['propTypes' + ''] = exactProp(Unstable_TrapFocus.propTypes);\n}\n\nexport default Unstable_TrapFocus;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  const {\n    invisible = false,\n    open\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"invisible\", \"open\"]);\n\n  return open ? /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, invisible ? styles.invisible : {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    zIndex: theme.zIndex.modal,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0\n  },\n\n  /* Styles applied to the root element if the `Modal` has exited. */\n  hidden: {\n    visibility: 'hidden'\n  }\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  const theme = useTheme();\n  const props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme\n  });\n\n  const {\n    BackdropComponent = SimpleBackdrop,\n    BackdropProps,\n    children,\n    closeAfterTransition = false,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\"]);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const inlineStyle = styles(theme || {\n    zIndex\n  });\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default SimpleBackdrop\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default Modal;"],"sourceRoot":""}